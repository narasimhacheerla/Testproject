//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("huntableModel", "FK_Address_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCountry), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Address), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Association_Month", "MasterMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterMonth), "Association", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Association), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Association_Month1", "MasterMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterMonth), "Association", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Association), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Association_Year", "MasterYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterYear), "Association", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Association), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Association_Year1", "MasterYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterYear), "Association", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Association), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.ChatUser), "ChatIgnoredUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.ChatIgnoredUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_ChatIgnoredUsers_ChatUsers", "ChatUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.ChatUser), "ChatIgnoredUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.ChatIgnoredUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Company_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCountry), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Company), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Company_MasterEmployees", "MasterEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterEmployee), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Company), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Company_MasterEmployees1", "MasterEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterEmployee), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Company), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Company_MasterIndustry", "MasterIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterIndustry), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Company), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyArticle_Company1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Company), "CompanyArticle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.CompanyArticle), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyPortfolio_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Company), "CompanyPortfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.CompanyPortfolio), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyPortfolio_Company1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Company), "CompanyPortfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.CompanyPortfolio), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyProducts_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Company), "CompanyProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.CompanyProduct), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyProfileVisitedHistory_Company1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.Company), "CompanyProfileVisitedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.CompanyProfileVisitedHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyVideo_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Company), "CompanyVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.CompanyVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserCompanyPhoto_CompanyPortfolio", "CompanyPortfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.CompanyPortfolio), "FeedUserCompanyPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserCompanyPhoto), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserCompanyProduct_CompanyProducts", "CompanyProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.CompanyProduct), "FeedUserCompanyProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserCompanyProduct), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.CompanyProfileVisitedHistory), "CompanyProfileVisitedHistory1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.CompanyProfileVisitedHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserCompanyVideo_CompanyVideo", "CompanyVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.CompanyVideo), "FeedUserCompanyVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserCompanyVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EducationHistory_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCountry), "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EducationHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EducationHistory_Month", "MasterMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterMonth), "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EducationHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EducationHistory_Month1", "MasterMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterMonth), "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EducationHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EducationHistory_Year", "MasterYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterYear), "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EducationHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EducationHistory_Year1", "MasterYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterYear), "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EducationHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserEducationSchool_EducationHistory", "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.EducationHistory), "FeedUserEducationSchool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserEducationSchool), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_CurrencyType", "MasterCurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCurrencyType), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_Hours", "MasterHour", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterHour), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_MasterCompany", "MasterCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCompany), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCountry), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_MasterIndustry", "MasterIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterIndustry), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_MasterLevel", "MasterLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterLevel), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_Month", "MasterMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterMonth), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_Month1", "MasterMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterMonth), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_PaymentType", "MasterPaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterPaymentType), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_Year", "MasterYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterYear), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_Year1", "MasterYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterYear), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.EmploymentHistory), "EmploymentHistoryAchievement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistoryAchievement), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.EmploymentHistory), "EmploymentHistoryPortfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistoryPortfolio), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.EmploymentHistory), "EmploymentHistoryVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistoryVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserEmployementHistory_EmploymentHistory", "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.EmploymentHistory), "FeedUserEmployementHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserEmployementHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserEmploymentSkill_EmploymentHistory", "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.EmploymentHistory), "UserEmploymentSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserEmploymentSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserEndorseList_EmploymentHistory", "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.EmploymentHistory), "UserEndorseList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserEndorseList), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "EmploymentHistoryPortfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.EmploymentHistoryPortfolio), "FeedUserPorfolioPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserPorfolioPhoto), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "EmploymentHistoryVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.EmploymentHistoryVideo), "FeedUserPortfolioVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserPortfolioVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedCountry_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCountry), "FeaturedCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedCountry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedIndustry_MasterIndustry", "MasterIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterIndustry), "FeaturedIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedIndustry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedInterest_MasterInterest", "MasterInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterInterest), "FeaturedInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedSkill_MasterSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterSkill), "FeaturedSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedUserCompanies_MasterCompany", "MasterCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterCompany), "FeaturedUserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedUserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserAlertRead_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserAlertRead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserAlertRead), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserCompanyPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserCompanyPhoto), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserCompanyProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserCompanyProduct), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserCompanyVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserCompanyVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserEducationSchool_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserEducationSchool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserEducationSchool), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserEmployementHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserEmployementHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserFollow_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserFollow", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserFollow), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserInterest_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserInterest_MasterInterest", "MasterInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterInterest), "FeedUserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserJob_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserJob), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserMain_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserMain1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserMain), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserMainFeed_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserMainFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserMainFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserMainFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserMainFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserPhoto_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserPhoto), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserPorfolioPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserPorfolioPhoto), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserPortfolioVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserPortfolioVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserProfile_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserProfile), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserSkill_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserUserFeed_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserUserFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserUserFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserVideo_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserVisitor_FeedUserMain", "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.FeedUserMain), "FeedUserVisitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserVisitor), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserPhoto_UserPortfolio", "UserPortfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.UserPortfolio), "FeedUserPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserPhoto), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserSkill_MasterSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterSkill), "FeedUserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserUserFeed_UserFeeds", "UserFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.UserFeed), "FeedUserUserFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserUserFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserVideo_UserVideos", "UserVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.UserVideo), "FeedUserVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserVideo), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserCompany_MasterCompany", "MasterCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterCompany), "PreferredJobUserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredUserCompanies_MasterCompany", "MasterCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterCompany), "PreferredUserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredUserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserCountry_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterCountry), "PreferredFeedUserCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserCountry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserCountry_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterCountry), "PreferredJobUserCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserCountry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserSalary_MasterCurrencyType", "MasterCurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCurrencyType), "PreferredJobUserSalary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserSalary), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserIndustry_MasterIndustry", "MasterIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterIndustry), "PreferredFeedUserIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserIndustry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserIndustry_MasterIndustry", "MasterIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterIndustry), "PreferredJobUserIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserIndustry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserInterest_MasterInterest", "MasterInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterInterest), "PreferredFeedUserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserInterest_MasterInterest", "MasterInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterInterest), "PreferredJobUserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserInterest_MasterInterest", "MasterInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterInterest), "UserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_MasterSalary_MasterJobType", "MasterJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterJobType), "MasterSalary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.MasterSalary), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserJobType_MasterJobType", "MasterJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterJobType), "PreferredJobUserJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserJobType), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserLanguage_MasterLanguage", "MasterLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterLanguage), "UserLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserLanguage), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserMessageType_MasterMessageType", "MasterMessageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterMessageType), "UserMessageType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserMessageType), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterSkill), "PreferredFeedUserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserSkill_MasterSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterSkill), "PreferredJobUserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterSkill), "UserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserSkill_MasterSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterSkill), "UserEmploymentSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserEmploymentSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserMessageType_UserMessage", "UserMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.UserMessage), "UserMessageType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserMessageType), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserCompaniesFollwers_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.Company), "PreferredFeedUserCompaniesFollwer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserCompaniesFollwer), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserJob_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Job), "FeedUserJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserJob), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterCountry), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_MasterCurrency", "MasterCurrencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCurrencyType), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_MasterIndustry", "MasterIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterIndustry), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_MasterJobType", "MasterJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterJobType), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_MasterSector", "MasterSector", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.MasterSector), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_MasterSkill", "MasterSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterSkill), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_JobFeed_JobFeed", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.Job), "JobFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.JobFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Invitation_CustomInvitationDetails", "CustomInvitationDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.CustomInvitationDetail), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Invitation), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FriendsToInvite_Invitation", "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.Invitation), "FriendsToInvite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FriendsToInvite), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Invitation_MasterInvitationType", "MasterInvitationType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterInvitationType), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Invitation), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserCompany_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.Company), "UserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Association_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "Association", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Association), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_User_ChatUsers", "ChatUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.ChatUser), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.User), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Company_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Company), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EducationHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "EducationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EducationHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_EmploymentHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "EmploymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.EmploymentHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedCountry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeaturedCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedCountry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedIndustry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeaturedIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedIndustry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedInterest_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeaturedInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedSkill_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "FeaturedSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeaturedUserCompanies_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "FeaturedUserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeaturedUserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserAlertRead_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserAlertRead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserAlertRead), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserDerivedUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserDerivedUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserDerivedUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserDerivedUser_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserDerivedUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserDerivedUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserFollow_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserFollow", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserFollow), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserMain_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserMain), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserMain_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserMain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserMain), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserProfile_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserProfile), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FeedUserVisitor_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "FeedUserVisitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FeedUserVisitor), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_FriendsToInvite_FriendsToInvite", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "FriendsToInvite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.FriendsToInvite), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Invoice_Invoice", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_Job_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.Job), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_JobFeed_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "JobFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.JobFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_User_MasterCountry", "MasterCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterCountry), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.User), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_User_MasterNationality", "MasterNationality", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.MasterNationality), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.User), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_OAuthToken_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "OAuthToken", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.OAuthToken), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserCompaniesFollwers_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "PreferredFeedUserCompaniesFollwer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserCompaniesFollwer), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserCountry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserCountry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserIndustry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserIndustry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserInterest_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserSkill_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserFollowup_FollowingUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserFollowup_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserUserDerived_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserUserDerived", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserUserDerived), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredFeedUserUserDerived_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredFeedUserUserDerived", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredFeedUserUserDerived), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserCompany_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserCountry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserCountry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserIndustry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserIndustry), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserInterest_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserJobType_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserJobType), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserSalary_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserSalary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserSalary), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredJobUserSkill_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserSkill), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserJobFollowup_FollowingUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserJobFollowup_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "PreferredJobUserUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredJobUserUser), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_PreferredUserCompanies_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "PreferredUserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.PreferredUserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK__UserFeeds__UserI__542C7691", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserFeed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserFeed), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_User_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.User), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserBlockList_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserBlockList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserBlockList), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserBlockList_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserBlockList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserBlockList), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserCompany_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserCompany), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserEndorseList_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserEndorseList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserEndorseList), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserEndorseList_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserEndorseList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserEndorseList), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserInterest_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserInterest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserInterest), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserLanguage_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserLanguage), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserMessage_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserMessage), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserMessage_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserMessage), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserProfileVisitedHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserProfileVisitedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserProfileVisitedHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserProfileVisitedHistory_VisitedUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Huntable.Data.User), "UserProfileVisitedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserProfileVisitedHistory), true)]
[assembly: EdmRelationshipAttribute("huntableModel", "FK_UserSkill_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Huntable.Data.User), "UserSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Huntable.Data.UserSkill), true)]

#endregion

namespace Huntable.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class huntableEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new huntableEntities object using the connection string found in the 'huntableEntities' section of the application configuration file.
        /// </summary>
        public huntableEntities() : base("name=huntableEntities", "huntableEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new huntableEntities object.
        /// </summary>
        public huntableEntities(string connectionString) : base(connectionString, "huntableEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new huntableEntities object.
        /// </summary>
        public huntableEntities(EntityConnection connection) : base(connection, "huntableEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Association> Associations
        {
            get
            {
                if ((_Associations == null))
                {
                    _Associations = base.CreateObjectSet<Association>("Associations");
                }
                return _Associations;
            }
        }
        private ObjectSet<Association> _Associations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatAdmin> ChatAdmins
        {
            get
            {
                if ((_ChatAdmins == null))
                {
                    _ChatAdmins = base.CreateObjectSet<ChatAdmin>("ChatAdmins");
                }
                return _ChatAdmins;
            }
        }
        private ObjectSet<ChatAdmin> _ChatAdmins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatBan> ChatBans
        {
            get
            {
                if ((_ChatBans == null))
                {
                    _ChatBans = base.CreateObjectSet<ChatBan>("ChatBans");
                }
                return _ChatBans;
            }
        }
        private ObjectSet<ChatBan> _ChatBans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatIgnoredUser> ChatIgnoredUsers
        {
            get
            {
                if ((_ChatIgnoredUsers == null))
                {
                    _ChatIgnoredUsers = base.CreateObjectSet<ChatIgnoredUser>("ChatIgnoredUsers");
                }
                return _ChatIgnoredUsers;
            }
        }
        private ObjectSet<ChatIgnoredUser> _ChatIgnoredUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatMessage> ChatMessages
        {
            get
            {
                if ((_ChatMessages == null))
                {
                    _ChatMessages = base.CreateObjectSet<ChatMessage>("ChatMessages");
                }
                return _ChatMessages;
            }
        }
        private ObjectSet<ChatMessage> _ChatMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatPresence> ChatPresences
        {
            get
            {
                if ((_ChatPresences == null))
                {
                    _ChatPresences = base.CreateObjectSet<ChatPresence>("ChatPresences");
                }
                return _ChatPresences;
            }
        }
        private ObjectSet<ChatPresence> _ChatPresences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatRoomActivity> ChatRoomActivities
        {
            get
            {
                if ((_ChatRoomActivities == null))
                {
                    _ChatRoomActivities = base.CreateObjectSet<ChatRoomActivity>("ChatRoomActivities");
                }
                return _ChatRoomActivities;
            }
        }
        private ObjectSet<ChatRoomActivity> _ChatRoomActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatRoomAdmin> ChatRoomAdmins
        {
            get
            {
                if ((_ChatRoomAdmins == null))
                {
                    _ChatRoomAdmins = base.CreateObjectSet<ChatRoomAdmin>("ChatRoomAdmins");
                }
                return _ChatRoomAdmins;
            }
        }
        private ObjectSet<ChatRoomAdmin> _ChatRoomAdmins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatRoom> ChatRooms
        {
            get
            {
                if ((_ChatRooms == null))
                {
                    _ChatRooms = base.CreateObjectSet<ChatRoom>("ChatRooms");
                }
                return _ChatRooms;
            }
        }
        private ObjectSet<ChatRoom> _ChatRooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatSetting> ChatSettings
        {
            get
            {
                if ((_ChatSettings == null))
                {
                    _ChatSettings = base.CreateObjectSet<ChatSetting>("ChatSettings");
                }
                return _ChatSettings;
            }
        }
        private ObjectSet<ChatSetting> _ChatSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatTranslation> ChatTranslations
        {
            get
            {
                if ((_ChatTranslations == null))
                {
                    _ChatTranslations = base.CreateObjectSet<ChatTranslation>("ChatTranslations");
                }
                return _ChatTranslations;
            }
        }
        private ObjectSet<ChatTranslation> _ChatTranslations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatUser> ChatUsers
        {
            get
            {
                if ((_ChatUsers == null))
                {
                    _ChatUsers = base.CreateObjectSet<ChatUser>("ChatUsers");
                }
                return _ChatUsers;
            }
        }
        private ObjectSet<ChatUser> _ChatUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyArticle> CompanyArticles
        {
            get
            {
                if ((_CompanyArticles == null))
                {
                    _CompanyArticles = base.CreateObjectSet<CompanyArticle>("CompanyArticles");
                }
                return _CompanyArticles;
            }
        }
        private ObjectSet<CompanyArticle> _CompanyArticles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyPortfolio> CompanyPortfolios
        {
            get
            {
                if ((_CompanyPortfolios == null))
                {
                    _CompanyPortfolios = base.CreateObjectSet<CompanyPortfolio>("CompanyPortfolios");
                }
                return _CompanyPortfolios;
            }
        }
        private ObjectSet<CompanyPortfolio> _CompanyPortfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyProduct> CompanyProducts
        {
            get
            {
                if ((_CompanyProducts == null))
                {
                    _CompanyProducts = base.CreateObjectSet<CompanyProduct>("CompanyProducts");
                }
                return _CompanyProducts;
            }
        }
        private ObjectSet<CompanyProduct> _CompanyProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyProfileVisitedHistory> CompanyProfileVisitedHistories
        {
            get
            {
                if ((_CompanyProfileVisitedHistories == null))
                {
                    _CompanyProfileVisitedHistories = base.CreateObjectSet<CompanyProfileVisitedHistory>("CompanyProfileVisitedHistories");
                }
                return _CompanyProfileVisitedHistories;
            }
        }
        private ObjectSet<CompanyProfileVisitedHistory> _CompanyProfileVisitedHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyVideo> CompanyVideos
        {
            get
            {
                if ((_CompanyVideos == null))
                {
                    _CompanyVideos = base.CreateObjectSet<CompanyVideo>("CompanyVideos");
                }
                return _CompanyVideos;
            }
        }
        private ObjectSet<CompanyVideo> _CompanyVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomInvitationDetail> CustomInvitationDetails
        {
            get
            {
                if ((_CustomInvitationDetails == null))
                {
                    _CustomInvitationDetails = base.CreateObjectSet<CustomInvitationDetail>("CustomInvitationDetails");
                }
                return _CustomInvitationDetails;
            }
        }
        private ObjectSet<CustomInvitationDetail> _CustomInvitationDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EducationHistory> EducationHistories
        {
            get
            {
                if ((_EducationHistories == null))
                {
                    _EducationHistories = base.CreateObjectSet<EducationHistory>("EducationHistories");
                }
                return _EducationHistories;
            }
        }
        private ObjectSet<EducationHistory> _EducationHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplate> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplate>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplate> _EmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmploymentHistory> EmploymentHistories
        {
            get
            {
                if ((_EmploymentHistories == null))
                {
                    _EmploymentHistories = base.CreateObjectSet<EmploymentHistory>("EmploymentHistories");
                }
                return _EmploymentHistories;
            }
        }
        private ObjectSet<EmploymentHistory> _EmploymentHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmploymentHistoryAchievement> EmploymentHistoryAchievements
        {
            get
            {
                if ((_EmploymentHistoryAchievements == null))
                {
                    _EmploymentHistoryAchievements = base.CreateObjectSet<EmploymentHistoryAchievement>("EmploymentHistoryAchievements");
                }
                return _EmploymentHistoryAchievements;
            }
        }
        private ObjectSet<EmploymentHistoryAchievement> _EmploymentHistoryAchievements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmploymentHistoryPortfolio> EmploymentHistoryPortfolios
        {
            get
            {
                if ((_EmploymentHistoryPortfolios == null))
                {
                    _EmploymentHistoryPortfolios = base.CreateObjectSet<EmploymentHistoryPortfolio>("EmploymentHistoryPortfolios");
                }
                return _EmploymentHistoryPortfolios;
            }
        }
        private ObjectSet<EmploymentHistoryPortfolio> _EmploymentHistoryPortfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmploymentHistoryVideo> EmploymentHistoryVideos
        {
            get
            {
                if ((_EmploymentHistoryVideos == null))
                {
                    _EmploymentHistoryVideos = base.CreateObjectSet<EmploymentHistoryVideo>("EmploymentHistoryVideos");
                }
                return _EmploymentHistoryVideos;
            }
        }
        private ObjectSet<EmploymentHistoryVideo> _EmploymentHistoryVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedCountry> FeaturedCountries
        {
            get
            {
                if ((_FeaturedCountries == null))
                {
                    _FeaturedCountries = base.CreateObjectSet<FeaturedCountry>("FeaturedCountries");
                }
                return _FeaturedCountries;
            }
        }
        private ObjectSet<FeaturedCountry> _FeaturedCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedIndustry> FeaturedIndustries
        {
            get
            {
                if ((_FeaturedIndustries == null))
                {
                    _FeaturedIndustries = base.CreateObjectSet<FeaturedIndustry>("FeaturedIndustries");
                }
                return _FeaturedIndustries;
            }
        }
        private ObjectSet<FeaturedIndustry> _FeaturedIndustries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedInterest> FeaturedInterests
        {
            get
            {
                if ((_FeaturedInterests == null))
                {
                    _FeaturedInterests = base.CreateObjectSet<FeaturedInterest>("FeaturedInterests");
                }
                return _FeaturedInterests;
            }
        }
        private ObjectSet<FeaturedInterest> _FeaturedInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedSkill> FeaturedSkills
        {
            get
            {
                if ((_FeaturedSkills == null))
                {
                    _FeaturedSkills = base.CreateObjectSet<FeaturedSkill>("FeaturedSkills");
                }
                return _FeaturedSkills;
            }
        }
        private ObjectSet<FeaturedSkill> _FeaturedSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedUserCompany> FeaturedUserCompanies
        {
            get
            {
                if ((_FeaturedUserCompanies == null))
                {
                    _FeaturedUserCompanies = base.CreateObjectSet<FeaturedUserCompany>("FeaturedUserCompanies");
                }
                return _FeaturedUserCompanies;
            }
        }
        private ObjectSet<FeaturedUserCompany> _FeaturedUserCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserAlertRead> FeedUserAlertReads
        {
            get
            {
                if ((_FeedUserAlertReads == null))
                {
                    _FeedUserAlertReads = base.CreateObjectSet<FeedUserAlertRead>("FeedUserAlertReads");
                }
                return _FeedUserAlertReads;
            }
        }
        private ObjectSet<FeedUserAlertRead> _FeedUserAlertReads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserCompanyPhoto> FeedUserCompanyPhotoes
        {
            get
            {
                if ((_FeedUserCompanyPhotoes == null))
                {
                    _FeedUserCompanyPhotoes = base.CreateObjectSet<FeedUserCompanyPhoto>("FeedUserCompanyPhotoes");
                }
                return _FeedUserCompanyPhotoes;
            }
        }
        private ObjectSet<FeedUserCompanyPhoto> _FeedUserCompanyPhotoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserCompanyProduct> FeedUserCompanyProducts
        {
            get
            {
                if ((_FeedUserCompanyProducts == null))
                {
                    _FeedUserCompanyProducts = base.CreateObjectSet<FeedUserCompanyProduct>("FeedUserCompanyProducts");
                }
                return _FeedUserCompanyProducts;
            }
        }
        private ObjectSet<FeedUserCompanyProduct> _FeedUserCompanyProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserCompanyVideo> FeedUserCompanyVideos
        {
            get
            {
                if ((_FeedUserCompanyVideos == null))
                {
                    _FeedUserCompanyVideos = base.CreateObjectSet<FeedUserCompanyVideo>("FeedUserCompanyVideos");
                }
                return _FeedUserCompanyVideos;
            }
        }
        private ObjectSet<FeedUserCompanyVideo> _FeedUserCompanyVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserDerivedUser> FeedUserDerivedUsers
        {
            get
            {
                if ((_FeedUserDerivedUsers == null))
                {
                    _FeedUserDerivedUsers = base.CreateObjectSet<FeedUserDerivedUser>("FeedUserDerivedUsers");
                }
                return _FeedUserDerivedUsers;
            }
        }
        private ObjectSet<FeedUserDerivedUser> _FeedUserDerivedUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserEducationSchool> FeedUserEducationSchools
        {
            get
            {
                if ((_FeedUserEducationSchools == null))
                {
                    _FeedUserEducationSchools = base.CreateObjectSet<FeedUserEducationSchool>("FeedUserEducationSchools");
                }
                return _FeedUserEducationSchools;
            }
        }
        private ObjectSet<FeedUserEducationSchool> _FeedUserEducationSchools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserEmployementHistory> FeedUserEmployementHistories
        {
            get
            {
                if ((_FeedUserEmployementHistories == null))
                {
                    _FeedUserEmployementHistories = base.CreateObjectSet<FeedUserEmployementHistory>("FeedUserEmployementHistories");
                }
                return _FeedUserEmployementHistories;
            }
        }
        private ObjectSet<FeedUserEmployementHistory> _FeedUserEmployementHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserFollow> FeedUserFollows
        {
            get
            {
                if ((_FeedUserFollows == null))
                {
                    _FeedUserFollows = base.CreateObjectSet<FeedUserFollow>("FeedUserFollows");
                }
                return _FeedUserFollows;
            }
        }
        private ObjectSet<FeedUserFollow> _FeedUserFollows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserInterest> FeedUserInterests
        {
            get
            {
                if ((_FeedUserInterests == null))
                {
                    _FeedUserInterests = base.CreateObjectSet<FeedUserInterest>("FeedUserInterests");
                }
                return _FeedUserInterests;
            }
        }
        private ObjectSet<FeedUserInterest> _FeedUserInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserJob> FeedUserJobs
        {
            get
            {
                if ((_FeedUserJobs == null))
                {
                    _FeedUserJobs = base.CreateObjectSet<FeedUserJob>("FeedUserJobs");
                }
                return _FeedUserJobs;
            }
        }
        private ObjectSet<FeedUserJob> _FeedUserJobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserMain> FeedUserMains
        {
            get
            {
                if ((_FeedUserMains == null))
                {
                    _FeedUserMains = base.CreateObjectSet<FeedUserMain>("FeedUserMains");
                }
                return _FeedUserMains;
            }
        }
        private ObjectSet<FeedUserMain> _FeedUserMains;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserMainFeed> FeedUserMainFeeds
        {
            get
            {
                if ((_FeedUserMainFeeds == null))
                {
                    _FeedUserMainFeeds = base.CreateObjectSet<FeedUserMainFeed>("FeedUserMainFeeds");
                }
                return _FeedUserMainFeeds;
            }
        }
        private ObjectSet<FeedUserMainFeed> _FeedUserMainFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserMainHiddenFeed> FeedUserMainHiddenFeeds
        {
            get
            {
                if ((_FeedUserMainHiddenFeeds == null))
                {
                    _FeedUserMainHiddenFeeds = base.CreateObjectSet<FeedUserMainHiddenFeed>("FeedUserMainHiddenFeeds");
                }
                return _FeedUserMainHiddenFeeds;
            }
        }
        private ObjectSet<FeedUserMainHiddenFeed> _FeedUserMainHiddenFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserPhoto> FeedUserPhotoes
        {
            get
            {
                if ((_FeedUserPhotoes == null))
                {
                    _FeedUserPhotoes = base.CreateObjectSet<FeedUserPhoto>("FeedUserPhotoes");
                }
                return _FeedUserPhotoes;
            }
        }
        private ObjectSet<FeedUserPhoto> _FeedUserPhotoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserPorfolioPhoto> FeedUserPorfolioPhotoes
        {
            get
            {
                if ((_FeedUserPorfolioPhotoes == null))
                {
                    _FeedUserPorfolioPhotoes = base.CreateObjectSet<FeedUserPorfolioPhoto>("FeedUserPorfolioPhotoes");
                }
                return _FeedUserPorfolioPhotoes;
            }
        }
        private ObjectSet<FeedUserPorfolioPhoto> _FeedUserPorfolioPhotoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserPortfolioVideo> FeedUserPortfolioVideos
        {
            get
            {
                if ((_FeedUserPortfolioVideos == null))
                {
                    _FeedUserPortfolioVideos = base.CreateObjectSet<FeedUserPortfolioVideo>("FeedUserPortfolioVideos");
                }
                return _FeedUserPortfolioVideos;
            }
        }
        private ObjectSet<FeedUserPortfolioVideo> _FeedUserPortfolioVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserProfile> FeedUserProfiles
        {
            get
            {
                if ((_FeedUserProfiles == null))
                {
                    _FeedUserProfiles = base.CreateObjectSet<FeedUserProfile>("FeedUserProfiles");
                }
                return _FeedUserProfiles;
            }
        }
        private ObjectSet<FeedUserProfile> _FeedUserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserSkill> FeedUserSkills
        {
            get
            {
                if ((_FeedUserSkills == null))
                {
                    _FeedUserSkills = base.CreateObjectSet<FeedUserSkill>("FeedUserSkills");
                }
                return _FeedUserSkills;
            }
        }
        private ObjectSet<FeedUserSkill> _FeedUserSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserUserFeed> FeedUserUserFeeds
        {
            get
            {
                if ((_FeedUserUserFeeds == null))
                {
                    _FeedUserUserFeeds = base.CreateObjectSet<FeedUserUserFeed>("FeedUserUserFeeds");
                }
                return _FeedUserUserFeeds;
            }
        }
        private ObjectSet<FeedUserUserFeed> _FeedUserUserFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserVideo> FeedUserVideos
        {
            get
            {
                if ((_FeedUserVideos == null))
                {
                    _FeedUserVideos = base.CreateObjectSet<FeedUserVideo>("FeedUserVideos");
                }
                return _FeedUserVideos;
            }
        }
        private ObjectSet<FeedUserVideo> _FeedUserVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedUserVisitor> FeedUserVisitors
        {
            get
            {
                if ((_FeedUserVisitors == null))
                {
                    _FeedUserVisitors = base.CreateObjectSet<FeedUserVisitor>("FeedUserVisitors");
                }
                return _FeedUserVisitors;
            }
        }
        private ObjectSet<FeedUserVisitor> _FeedUserVisitors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FriendsToInvite> FriendsToInvites
        {
            get
            {
                if ((_FriendsToInvites == null))
                {
                    _FriendsToInvites = base.CreateObjectSet<FriendsToInvite>("FriendsToInvites");
                }
                return _FriendsToInvites;
            }
        }
        private ObjectSet<FriendsToInvite> _FriendsToInvites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IpAddress> IpAddresses
        {
            get
            {
                if ((_IpAddresses == null))
                {
                    _IpAddresses = base.CreateObjectSet<IpAddress>("IpAddresses");
                }
                return _IpAddresses;
            }
        }
        private ObjectSet<IpAddress> _IpAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobApplication> JobApplications
        {
            get
            {
                if ((_JobApplications == null))
                {
                    _JobApplications = base.CreateObjectSet<JobApplication>("JobApplications");
                }
                return _JobApplications;
            }
        }
        private ObjectSet<JobApplication> _JobApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobCreditsPurchased> JobCreditsPurchaseds
        {
            get
            {
                if ((_JobCreditsPurchaseds == null))
                {
                    _JobCreditsPurchaseds = base.CreateObjectSet<JobCreditsPurchased>("JobCreditsPurchaseds");
                }
                return _JobCreditsPurchaseds;
            }
        }
        private ObjectSet<JobCreditsPurchased> _JobCreditsPurchaseds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobFeed> JobFeeds
        {
            get
            {
                if ((_JobFeeds == null))
                {
                    _JobFeeds = base.CreateObjectSet<JobFeed>("JobFeeds");
                }
                return _JobFeeds;
            }
        }
        private ObjectSet<JobFeed> _JobFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Login> Logins
        {
            get
            {
                if ((_Logins == null))
                {
                    _Logins = base.CreateObjectSet<Login>("Logins");
                }
                return _Logins;
            }
        }
        private ObjectSet<Login> _Logins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterCity> MasterCities
        {
            get
            {
                if ((_MasterCities == null))
                {
                    _MasterCities = base.CreateObjectSet<MasterCity>("MasterCities");
                }
                return _MasterCities;
            }
        }
        private ObjectSet<MasterCity> _MasterCities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterCompany> MasterCompanies
        {
            get
            {
                if ((_MasterCompanies == null))
                {
                    _MasterCompanies = base.CreateObjectSet<MasterCompany>("MasterCompanies");
                }
                return _MasterCompanies;
            }
        }
        private ObjectSet<MasterCompany> _MasterCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterCountry> MasterCountries
        {
            get
            {
                if ((_MasterCountries == null))
                {
                    _MasterCountries = base.CreateObjectSet<MasterCountry>("MasterCountries");
                }
                return _MasterCountries;
            }
        }
        private ObjectSet<MasterCountry> _MasterCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterCurrencyType> MasterCurrencyTypes
        {
            get
            {
                if ((_MasterCurrencyTypes == null))
                {
                    _MasterCurrencyTypes = base.CreateObjectSet<MasterCurrencyType>("MasterCurrencyTypes");
                }
                return _MasterCurrencyTypes;
            }
        }
        private ObjectSet<MasterCurrencyType> _MasterCurrencyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterEmployee> MasterEmployees
        {
            get
            {
                if ((_MasterEmployees == null))
                {
                    _MasterEmployees = base.CreateObjectSet<MasterEmployee>("MasterEmployees");
                }
                return _MasterEmployees;
            }
        }
        private ObjectSet<MasterEmployee> _MasterEmployees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterExpYear> MasterExpYears
        {
            get
            {
                if ((_MasterExpYears == null))
                {
                    _MasterExpYears = base.CreateObjectSet<MasterExpYear>("MasterExpYears");
                }
                return _MasterExpYears;
            }
        }
        private ObjectSet<MasterExpYear> _MasterExpYears;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterGender> MasterGenders
        {
            get
            {
                if ((_MasterGenders == null))
                {
                    _MasterGenders = base.CreateObjectSet<MasterGender>("MasterGenders");
                }
                return _MasterGenders;
            }
        }
        private ObjectSet<MasterGender> _MasterGenders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterHour> MasterHours
        {
            get
            {
                if ((_MasterHours == null))
                {
                    _MasterHours = base.CreateObjectSet<MasterHour>("MasterHours");
                }
                return _MasterHours;
            }
        }
        private ObjectSet<MasterHour> _MasterHours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterIndustry> MasterIndustries
        {
            get
            {
                if ((_MasterIndustries == null))
                {
                    _MasterIndustries = base.CreateObjectSet<MasterIndustry>("MasterIndustries");
                }
                return _MasterIndustries;
            }
        }
        private ObjectSet<MasterIndustry> _MasterIndustries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterInterest> MasterInterests
        {
            get
            {
                if ((_MasterInterests == null))
                {
                    _MasterInterests = base.CreateObjectSet<MasterInterest>("MasterInterests");
                }
                return _MasterInterests;
            }
        }
        private ObjectSet<MasterInterest> _MasterInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<masterinterest_BK> masterinterest_BK
        {
            get
            {
                if ((_masterinterest_BK == null))
                {
                    _masterinterest_BK = base.CreateObjectSet<masterinterest_BK>("masterinterest_BK");
                }
                return _masterinterest_BK;
            }
        }
        private ObjectSet<masterinterest_BK> _masterinterest_BK;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterInvitationType> MasterInvitationTypes
        {
            get
            {
                if ((_MasterInvitationTypes == null))
                {
                    _MasterInvitationTypes = base.CreateObjectSet<MasterInvitationType>("MasterInvitationTypes");
                }
                return _MasterInvitationTypes;
            }
        }
        private ObjectSet<MasterInvitationType> _MasterInvitationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterJobPackage> MasterJobPackages
        {
            get
            {
                if ((_MasterJobPackages == null))
                {
                    _MasterJobPackages = base.CreateObjectSet<MasterJobPackage>("MasterJobPackages");
                }
                return _MasterJobPackages;
            }
        }
        private ObjectSet<MasterJobPackage> _MasterJobPackages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterJobType> MasterJobTypes
        {
            get
            {
                if ((_MasterJobTypes == null))
                {
                    _MasterJobTypes = base.CreateObjectSet<MasterJobType>("MasterJobTypes");
                }
                return _MasterJobTypes;
            }
        }
        private ObjectSet<MasterJobType> _MasterJobTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterLanguage> MasterLanguages
        {
            get
            {
                if ((_MasterLanguages == null))
                {
                    _MasterLanguages = base.CreateObjectSet<MasterLanguage>("MasterLanguages");
                }
                return _MasterLanguages;
            }
        }
        private ObjectSet<MasterLanguage> _MasterLanguages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterLevel> MasterLevels
        {
            get
            {
                if ((_MasterLevels == null))
                {
                    _MasterLevels = base.CreateObjectSet<MasterLevel>("MasterLevels");
                }
                return _MasterLevels;
            }
        }
        private ObjectSet<MasterLevel> _MasterLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterMaximumSalary> MasterMaximumSalaries
        {
            get
            {
                if ((_MasterMaximumSalaries == null))
                {
                    _MasterMaximumSalaries = base.CreateObjectSet<MasterMaximumSalary>("MasterMaximumSalaries");
                }
                return _MasterMaximumSalaries;
            }
        }
        private ObjectSet<MasterMaximumSalary> _MasterMaximumSalaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterMessageType> MasterMessageTypes
        {
            get
            {
                if ((_MasterMessageTypes == null))
                {
                    _MasterMessageTypes = base.CreateObjectSet<MasterMessageType>("MasterMessageTypes");
                }
                return _MasterMessageTypes;
            }
        }
        private ObjectSet<MasterMessageType> _MasterMessageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterMinimumSalary> MasterMinimumSalaries
        {
            get
            {
                if ((_MasterMinimumSalaries == null))
                {
                    _MasterMinimumSalaries = base.CreateObjectSet<MasterMinimumSalary>("MasterMinimumSalaries");
                }
                return _MasterMinimumSalaries;
            }
        }
        private ObjectSet<MasterMinimumSalary> _MasterMinimumSalaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterMonth> MasterMonths
        {
            get
            {
                if ((_MasterMonths == null))
                {
                    _MasterMonths = base.CreateObjectSet<MasterMonth>("MasterMonths");
                }
                return _MasterMonths;
            }
        }
        private ObjectSet<MasterMonth> _MasterMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterNationality> MasterNationalities
        {
            get
            {
                if ((_MasterNationalities == null))
                {
                    _MasterNationalities = base.CreateObjectSet<MasterNationality>("MasterNationalities");
                }
                return _MasterNationalities;
            }
        }
        private ObjectSet<MasterNationality> _MasterNationalities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPaymentType> MasterPaymentTypes
        {
            get
            {
                if ((_MasterPaymentTypes == null))
                {
                    _MasterPaymentTypes = base.CreateObjectSet<MasterPaymentType>("MasterPaymentTypes");
                }
                return _MasterPaymentTypes;
            }
        }
        private ObjectSet<MasterPaymentType> _MasterPaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterProfileImportSource> MasterProfileImportSources
        {
            get
            {
                if ((_MasterProfileImportSources == null))
                {
                    _MasterProfileImportSources = base.CreateObjectSet<MasterProfileImportSource>("MasterProfileImportSources");
                }
                return _MasterProfileImportSources;
            }
        }
        private ObjectSet<MasterProfileImportSource> _MasterProfileImportSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterSalary> MasterSalaries
        {
            get
            {
                if ((_MasterSalaries == null))
                {
                    _MasterSalaries = base.CreateObjectSet<MasterSalary>("MasterSalaries");
                }
                return _MasterSalaries;
            }
        }
        private ObjectSet<MasterSalary> _MasterSalaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterSector> MasterSectors
        {
            get
            {
                if ((_MasterSectors == null))
                {
                    _MasterSectors = base.CreateObjectSet<MasterSector>("MasterSectors");
                }
                return _MasterSectors;
            }
        }
        private ObjectSet<MasterSector> _MasterSectors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterSkill> MasterSkills
        {
            get
            {
                if ((_MasterSkills == null))
                {
                    _MasterSkills = base.CreateObjectSet<MasterSkill>("MasterSkills");
                }
                return _MasterSkills;
            }
        }
        private ObjectSet<MasterSkill> _MasterSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterState> MasterStates
        {
            get
            {
                if ((_MasterStates == null))
                {
                    _MasterStates = base.CreateObjectSet<MasterState>("MasterStates");
                }
                return _MasterStates;
            }
        }
        private ObjectSet<MasterState> _MasterStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterTitle> MasterTitles
        {
            get
            {
                if ((_MasterTitles == null))
                {
                    _MasterTitles = base.CreateObjectSet<MasterTitle>("MasterTitles");
                }
                return _MasterTitles;
            }
        }
        private ObjectSet<MasterTitle> _MasterTitles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterYear> MasterYears
        {
            get
            {
                if ((_MasterYears == null))
                {
                    _MasterYears = base.CreateObjectSet<MasterYear>("MasterYears");
                }
                return _MasterYears;
            }
        }
        private ObjectSet<MasterYear> _MasterYears;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserCompaniesFollwer> PreferredFeedUserCompaniesFollwers
        {
            get
            {
                if ((_PreferredFeedUserCompaniesFollwers == null))
                {
                    _PreferredFeedUserCompaniesFollwers = base.CreateObjectSet<PreferredFeedUserCompaniesFollwer>("PreferredFeedUserCompaniesFollwers");
                }
                return _PreferredFeedUserCompaniesFollwers;
            }
        }
        private ObjectSet<PreferredFeedUserCompaniesFollwer> _PreferredFeedUserCompaniesFollwers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserCountry> PreferredFeedUserCountries
        {
            get
            {
                if ((_PreferredFeedUserCountries == null))
                {
                    _PreferredFeedUserCountries = base.CreateObjectSet<PreferredFeedUserCountry>("PreferredFeedUserCountries");
                }
                return _PreferredFeedUserCountries;
            }
        }
        private ObjectSet<PreferredFeedUserCountry> _PreferredFeedUserCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserIndustry> PreferredFeedUserIndustries
        {
            get
            {
                if ((_PreferredFeedUserIndustries == null))
                {
                    _PreferredFeedUserIndustries = base.CreateObjectSet<PreferredFeedUserIndustry>("PreferredFeedUserIndustries");
                }
                return _PreferredFeedUserIndustries;
            }
        }
        private ObjectSet<PreferredFeedUserIndustry> _PreferredFeedUserIndustries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserInterest> PreferredFeedUserInterests
        {
            get
            {
                if ((_PreferredFeedUserInterests == null))
                {
                    _PreferredFeedUserInterests = base.CreateObjectSet<PreferredFeedUserInterest>("PreferredFeedUserInterests");
                }
                return _PreferredFeedUserInterests;
            }
        }
        private ObjectSet<PreferredFeedUserInterest> _PreferredFeedUserInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserSkill> PreferredFeedUserSkills
        {
            get
            {
                if ((_PreferredFeedUserSkills == null))
                {
                    _PreferredFeedUserSkills = base.CreateObjectSet<PreferredFeedUserSkill>("PreferredFeedUserSkills");
                }
                return _PreferredFeedUserSkills;
            }
        }
        private ObjectSet<PreferredFeedUserSkill> _PreferredFeedUserSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserUser> PreferredFeedUserUsers
        {
            get
            {
                if ((_PreferredFeedUserUsers == null))
                {
                    _PreferredFeedUserUsers = base.CreateObjectSet<PreferredFeedUserUser>("PreferredFeedUserUsers");
                }
                return _PreferredFeedUserUsers;
            }
        }
        private ObjectSet<PreferredFeedUserUser> _PreferredFeedUserUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredFeedUserUserDerived> PreferredFeedUserUserDeriveds
        {
            get
            {
                if ((_PreferredFeedUserUserDeriveds == null))
                {
                    _PreferredFeedUserUserDeriveds = base.CreateObjectSet<PreferredFeedUserUserDerived>("PreferredFeedUserUserDeriveds");
                }
                return _PreferredFeedUserUserDeriveds;
            }
        }
        private ObjectSet<PreferredFeedUserUserDerived> _PreferredFeedUserUserDeriveds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserCompany> PreferredJobUserCompanies
        {
            get
            {
                if ((_PreferredJobUserCompanies == null))
                {
                    _PreferredJobUserCompanies = base.CreateObjectSet<PreferredJobUserCompany>("PreferredJobUserCompanies");
                }
                return _PreferredJobUserCompanies;
            }
        }
        private ObjectSet<PreferredJobUserCompany> _PreferredJobUserCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserCountry> PreferredJobUserCountries
        {
            get
            {
                if ((_PreferredJobUserCountries == null))
                {
                    _PreferredJobUserCountries = base.CreateObjectSet<PreferredJobUserCountry>("PreferredJobUserCountries");
                }
                return _PreferredJobUserCountries;
            }
        }
        private ObjectSet<PreferredJobUserCountry> _PreferredJobUserCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserIndustry> PreferredJobUserIndustries
        {
            get
            {
                if ((_PreferredJobUserIndustries == null))
                {
                    _PreferredJobUserIndustries = base.CreateObjectSet<PreferredJobUserIndustry>("PreferredJobUserIndustries");
                }
                return _PreferredJobUserIndustries;
            }
        }
        private ObjectSet<PreferredJobUserIndustry> _PreferredJobUserIndustries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserInterest> PreferredJobUserInterests
        {
            get
            {
                if ((_PreferredJobUserInterests == null))
                {
                    _PreferredJobUserInterests = base.CreateObjectSet<PreferredJobUserInterest>("PreferredJobUserInterests");
                }
                return _PreferredJobUserInterests;
            }
        }
        private ObjectSet<PreferredJobUserInterest> _PreferredJobUserInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserJobType> PreferredJobUserJobTypes
        {
            get
            {
                if ((_PreferredJobUserJobTypes == null))
                {
                    _PreferredJobUserJobTypes = base.CreateObjectSet<PreferredJobUserJobType>("PreferredJobUserJobTypes");
                }
                return _PreferredJobUserJobTypes;
            }
        }
        private ObjectSet<PreferredJobUserJobType> _PreferredJobUserJobTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserSalary> PreferredJobUserSalaries
        {
            get
            {
                if ((_PreferredJobUserSalaries == null))
                {
                    _PreferredJobUserSalaries = base.CreateObjectSet<PreferredJobUserSalary>("PreferredJobUserSalaries");
                }
                return _PreferredJobUserSalaries;
            }
        }
        private ObjectSet<PreferredJobUserSalary> _PreferredJobUserSalaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserSkill> PreferredJobUserSkills
        {
            get
            {
                if ((_PreferredJobUserSkills == null))
                {
                    _PreferredJobUserSkills = base.CreateObjectSet<PreferredJobUserSkill>("PreferredJobUserSkills");
                }
                return _PreferredJobUserSkills;
            }
        }
        private ObjectSet<PreferredJobUserSkill> _PreferredJobUserSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredJobUserUser> PreferredJobUserUsers
        {
            get
            {
                if ((_PreferredJobUserUsers == null))
                {
                    _PreferredJobUserUsers = base.CreateObjectSet<PreferredJobUserUser>("PreferredJobUserUsers");
                }
                return _PreferredJobUserUsers;
            }
        }
        private ObjectSet<PreferredJobUserUser> _PreferredJobUserUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferredUserCompany> PreferredUserCompanies
        {
            get
            {
                if ((_PreferredUserCompanies == null))
                {
                    _PreferredUserCompanies = base.CreateObjectSet<PreferredUserCompany>("PreferredUserCompanies");
                }
                return _PreferredUserCompanies;
            }
        }
        private ObjectSet<PreferredUserCompany> _PreferredUserCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SeoInfo> SeoInfoes
        {
            get
            {
                if ((_SeoInfoes == null))
                {
                    _SeoInfoes = base.CreateObjectSet<SeoInfo>("SeoInfoes");
                }
                return _SeoInfoes;
            }
        }
        private ObjectSet<SeoInfo> _SeoInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserBlockList> UserBlockLists
        {
            get
            {
                if ((_UserBlockLists == null))
                {
                    _UserBlockLists = base.CreateObjectSet<UserBlockList>("UserBlockLists");
                }
                return _UserBlockLists;
            }
        }
        private ObjectSet<UserBlockList> _UserBlockLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEmailPreference> UserEmailPreferences
        {
            get
            {
                if ((_UserEmailPreferences == null))
                {
                    _UserEmailPreferences = base.CreateObjectSet<UserEmailPreference>("UserEmailPreferences");
                }
                return _UserEmailPreferences;
            }
        }
        private ObjectSet<UserEmailPreference> _UserEmailPreferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEmploymentSkill> UserEmploymentSkills
        {
            get
            {
                if ((_UserEmploymentSkills == null))
                {
                    _UserEmploymentSkills = base.CreateObjectSet<UserEmploymentSkill>("UserEmploymentSkills");
                }
                return _UserEmploymentSkills;
            }
        }
        private ObjectSet<UserEmploymentSkill> _UserEmploymentSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEndorseList> UserEndorseLists
        {
            get
            {
                if ((_UserEndorseLists == null))
                {
                    _UserEndorseLists = base.CreateObjectSet<UserEndorseList>("UserEndorseLists");
                }
                return _UserEndorseLists;
            }
        }
        private ObjectSet<UserEndorseList> _UserEndorseLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFeed> UserFeeds
        {
            get
            {
                if ((_UserFeeds == null))
                {
                    _UserFeeds = base.CreateObjectSet<UserFeed>("UserFeeds");
                }
                return _UserFeeds;
            }
        }
        private ObjectSet<UserFeed> _UserFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInterest> UserInterests
        {
            get
            {
                if ((_UserInterests == null))
                {
                    _UserInterests = base.CreateObjectSet<UserInterest>("UserInterests");
                }
                return _UserInterests;
            }
        }
        private ObjectSet<UserInterest> _UserInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInvoice> UserInvoices
        {
            get
            {
                if ((_UserInvoices == null))
                {
                    _UserInvoices = base.CreateObjectSet<UserInvoice>("UserInvoices");
                }
                return _UserInvoices;
            }
        }
        private ObjectSet<UserInvoice> _UserInvoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLanguage> UserLanguages
        {
            get
            {
                if ((_UserLanguages == null))
                {
                    _UserLanguages = base.CreateObjectSet<UserLanguage>("UserLanguages");
                }
                return _UserLanguages;
            }
        }
        private ObjectSet<UserLanguage> _UserLanguages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserMessage> UserMessages
        {
            get
            {
                if ((_UserMessages == null))
                {
                    _UserMessages = base.CreateObjectSet<UserMessage>("UserMessages");
                }
                return _UserMessages;
            }
        }
        private ObjectSet<UserMessage> _UserMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserMessageType> UserMessageTypes
        {
            get
            {
                if ((_UserMessageTypes == null))
                {
                    _UserMessageTypes = base.CreateObjectSet<UserMessageType>("UserMessageTypes");
                }
                return _UserMessageTypes;
            }
        }
        private ObjectSet<UserMessageType> _UserMessageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPaymentInfo> UserPaymentInfoes
        {
            get
            {
                if ((_UserPaymentInfoes == null))
                {
                    _UserPaymentInfoes = base.CreateObjectSet<UserPaymentInfo>("UserPaymentInfoes");
                }
                return _UserPaymentInfoes;
            }
        }
        private ObjectSet<UserPaymentInfo> _UserPaymentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPortfolio> UserPortfolios
        {
            get
            {
                if ((_UserPortfolios == null))
                {
                    _UserPortfolios = base.CreateObjectSet<UserPortfolio>("UserPortfolios");
                }
                return _UserPortfolios;
            }
        }
        private ObjectSet<UserPortfolio> _UserPortfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfileVisitedHistory> UserProfileVisitedHistories
        {
            get
            {
                if ((_UserProfileVisitedHistories == null))
                {
                    _UserProfileVisitedHistories = base.CreateObjectSet<UserProfileVisitedHistory>("UserProfileVisitedHistories");
                }
                return _UserProfileVisitedHistories;
            }
        }
        private ObjectSet<UserProfileVisitedHistory> _UserProfileVisitedHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSkill> UserSkills
        {
            get
            {
                if ((_UserSkills == null))
                {
                    _UserSkills = base.CreateObjectSet<UserSkill>("UserSkills");
                }
                return _UserSkills;
            }
        }
        private ObjectSet<UserSkill> _UserSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTransaction> UserTransactions
        {
            get
            {
                if ((_UserTransactions == null))
                {
                    _UserTransactions = base.CreateObjectSet<UserTransaction>("UserTransactions");
                }
                return _UserTransactions;
            }
        }
        private ObjectSet<UserTransaction> _UserTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserVideo> UserVideos
        {
            get
            {
                if ((_UserVideos == null))
                {
                    _UserVideos = base.CreateObjectSet<UserVideo>("UserVideos");
                }
                return _UserVideos;
            }
        }
        private ObjectSet<UserVideo> _UserVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OAuthToken> OAuthTokens
        {
            get
            {
                if ((_OAuthTokens == null))
                {
                    _OAuthTokens = base.CreateObjectSet<OAuthToken>("OAuthTokens");
                }
                return _OAuthTokens;
            }
        }
        private ObjectSet<OAuthToken> _OAuthTokens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobsStatusDaily> JobsStatusDailies
        {
            get
            {
                if ((_JobsStatusDailies == null))
                {
                    _JobsStatusDailies = base.CreateObjectSet<JobsStatusDaily>("JobsStatusDailies");
                }
                return _JobsStatusDailies;
            }
        }
        private ObjectSet<JobsStatusDaily> _JobsStatusDailies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCompany> UserCompanies
        {
            get
            {
                if ((_UserCompanies == null))
                {
                    _UserCompanies = base.CreateObjectSet<UserCompany>("UserCompanies");
                }
                return _UserCompanies;
            }
        }
        private ObjectSet<UserCompany> _UserCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MasterPeople> MasterPeoples
        {
            get
            {
                if ((_MasterPeoples == null))
                {
                    _MasterPeoples = base.CreateObjectSet<MasterPeople>("MasterPeoples");
                }
                return _MasterPeoples;
            }
        }
        private ObjectSet<MasterPeople> _MasterPeoples;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Associations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssociations(Association association)
        {
            base.AddObject("Associations", association);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatAdmins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatAdmins(ChatAdmin chatAdmin)
        {
            base.AddObject("ChatAdmins", chatAdmin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatBans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatBans(ChatBan chatBan)
        {
            base.AddObject("ChatBans", chatBan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatIgnoredUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatIgnoredUsers(ChatIgnoredUser chatIgnoredUser)
        {
            base.AddObject("ChatIgnoredUsers", chatIgnoredUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatMessages(ChatMessage chatMessage)
        {
            base.AddObject("ChatMessages", chatMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatPresences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatPresences(ChatPresence chatPresence)
        {
            base.AddObject("ChatPresences", chatPresence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatRoomActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatRoomActivities(ChatRoomActivity chatRoomActivity)
        {
            base.AddObject("ChatRoomActivities", chatRoomActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatRoomAdmins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatRoomAdmins(ChatRoomAdmin chatRoomAdmin)
        {
            base.AddObject("ChatRoomAdmins", chatRoomAdmin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatRooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatRooms(ChatRoom chatRoom)
        {
            base.AddObject("ChatRooms", chatRoom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatSettings(ChatSetting chatSetting)
        {
            base.AddObject("ChatSettings", chatSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatTranslations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatTranslations(ChatTranslation chatTranslation)
        {
            base.AddObject("ChatTranslations", chatTranslation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatUsers(ChatUser chatUser)
        {
            base.AddObject("ChatUsers", chatUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyArticles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyArticles(CompanyArticle companyArticle)
        {
            base.AddObject("CompanyArticles", companyArticle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyPortfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyPortfolios(CompanyPortfolio companyPortfolio)
        {
            base.AddObject("CompanyPortfolios", companyPortfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyProducts(CompanyProduct companyProduct)
        {
            base.AddObject("CompanyProducts", companyProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyProfileVisitedHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyProfileVisitedHistories(CompanyProfileVisitedHistory companyProfileVisitedHistory)
        {
            base.AddObject("CompanyProfileVisitedHistories", companyProfileVisitedHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyVideos(CompanyVideo companyVideo)
        {
            base.AddObject("CompanyVideos", companyVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomInvitationDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomInvitationDetails(CustomInvitationDetail customInvitationDetail)
        {
            base.AddObject("CustomInvitationDetails", customInvitationDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EducationHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducationHistories(EducationHistory educationHistory)
        {
            base.AddObject("EducationHistories", educationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplate emailTemplate)
        {
            base.AddObject("EmailTemplates", emailTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmploymentHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmploymentHistories(EmploymentHistory employmentHistory)
        {
            base.AddObject("EmploymentHistories", employmentHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmploymentHistoryAchievements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmploymentHistoryAchievements(EmploymentHistoryAchievement employmentHistoryAchievement)
        {
            base.AddObject("EmploymentHistoryAchievements", employmentHistoryAchievement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmploymentHistoryPortfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmploymentHistoryPortfolios(EmploymentHistoryPortfolio employmentHistoryPortfolio)
        {
            base.AddObject("EmploymentHistoryPortfolios", employmentHistoryPortfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmploymentHistoryVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmploymentHistoryVideos(EmploymentHistoryVideo employmentHistoryVideo)
        {
            base.AddObject("EmploymentHistoryVideos", employmentHistoryVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedCountries(FeaturedCountry featuredCountry)
        {
            base.AddObject("FeaturedCountries", featuredCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedIndustries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedIndustries(FeaturedIndustry featuredIndustry)
        {
            base.AddObject("FeaturedIndustries", featuredIndustry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedInterests(FeaturedInterest featuredInterest)
        {
            base.AddObject("FeaturedInterests", featuredInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedSkills(FeaturedSkill featuredSkill)
        {
            base.AddObject("FeaturedSkills", featuredSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedUserCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedUserCompanies(FeaturedUserCompany featuredUserCompany)
        {
            base.AddObject("FeaturedUserCompanies", featuredUserCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserAlertReads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserAlertReads(FeedUserAlertRead feedUserAlertRead)
        {
            base.AddObject("FeedUserAlertReads", feedUserAlertRead);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserCompanyPhotoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserCompanyPhotoes(FeedUserCompanyPhoto feedUserCompanyPhoto)
        {
            base.AddObject("FeedUserCompanyPhotoes", feedUserCompanyPhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserCompanyProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserCompanyProducts(FeedUserCompanyProduct feedUserCompanyProduct)
        {
            base.AddObject("FeedUserCompanyProducts", feedUserCompanyProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserCompanyVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserCompanyVideos(FeedUserCompanyVideo feedUserCompanyVideo)
        {
            base.AddObject("FeedUserCompanyVideos", feedUserCompanyVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserDerivedUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserDerivedUsers(FeedUserDerivedUser feedUserDerivedUser)
        {
            base.AddObject("FeedUserDerivedUsers", feedUserDerivedUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserEducationSchools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserEducationSchools(FeedUserEducationSchool feedUserEducationSchool)
        {
            base.AddObject("FeedUserEducationSchools", feedUserEducationSchool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserEmployementHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserEmployementHistories(FeedUserEmployementHistory feedUserEmployementHistory)
        {
            base.AddObject("FeedUserEmployementHistories", feedUserEmployementHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserFollows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserFollows(FeedUserFollow feedUserFollow)
        {
            base.AddObject("FeedUserFollows", feedUserFollow);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserInterests(FeedUserInterest feedUserInterest)
        {
            base.AddObject("FeedUserInterests", feedUserInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserJobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserJobs(FeedUserJob feedUserJob)
        {
            base.AddObject("FeedUserJobs", feedUserJob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserMains EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserMains(FeedUserMain feedUserMain)
        {
            base.AddObject("FeedUserMains", feedUserMain);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserMainFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserMainFeeds(FeedUserMainFeed feedUserMainFeed)
        {
            base.AddObject("FeedUserMainFeeds", feedUserMainFeed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserMainHiddenFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserMainHiddenFeeds(FeedUserMainHiddenFeed feedUserMainHiddenFeed)
        {
            base.AddObject("FeedUserMainHiddenFeeds", feedUserMainHiddenFeed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserPhotoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserPhotoes(FeedUserPhoto feedUserPhoto)
        {
            base.AddObject("FeedUserPhotoes", feedUserPhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserPorfolioPhotoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserPorfolioPhotoes(FeedUserPorfolioPhoto feedUserPorfolioPhoto)
        {
            base.AddObject("FeedUserPorfolioPhotoes", feedUserPorfolioPhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserPortfolioVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserPortfolioVideos(FeedUserPortfolioVideo feedUserPortfolioVideo)
        {
            base.AddObject("FeedUserPortfolioVideos", feedUserPortfolioVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserProfiles(FeedUserProfile feedUserProfile)
        {
            base.AddObject("FeedUserProfiles", feedUserProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserSkills(FeedUserSkill feedUserSkill)
        {
            base.AddObject("FeedUserSkills", feedUserSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserUserFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserUserFeeds(FeedUserUserFeed feedUserUserFeed)
        {
            base.AddObject("FeedUserUserFeeds", feedUserUserFeed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserVideos(FeedUserVideo feedUserVideo)
        {
            base.AddObject("FeedUserVideos", feedUserVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedUserVisitors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedUserVisitors(FeedUserVisitor feedUserVisitor)
        {
            base.AddObject("FeedUserVisitors", feedUserVisitor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FriendsToInvites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFriendsToInvites(FriendsToInvite friendsToInvite)
        {
            base.AddObject("FriendsToInvites", friendsToInvite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IpAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIpAddresses(IpAddress ipAddress)
        {
            base.AddObject("IpAddresses", ipAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobApplications(JobApplication jobApplication)
        {
            base.AddObject("JobApplications", jobApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobCreditsPurchaseds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobCreditsPurchaseds(JobCreditsPurchased jobCreditsPurchased)
        {
            base.AddObject("JobCreditsPurchaseds", jobCreditsPurchased);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobFeeds(JobFeed jobFeed)
        {
            base.AddObject("JobFeeds", jobFeed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogins(Login login)
        {
            base.AddObject("Logins", login);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterCities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterCities(MasterCity masterCity)
        {
            base.AddObject("MasterCities", masterCity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterCompanies(MasterCompany masterCompany)
        {
            base.AddObject("MasterCompanies", masterCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterCountries(MasterCountry masterCountry)
        {
            base.AddObject("MasterCountries", masterCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterCurrencyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterCurrencyTypes(MasterCurrencyType masterCurrencyType)
        {
            base.AddObject("MasterCurrencyTypes", masterCurrencyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterEmployees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterEmployees(MasterEmployee masterEmployee)
        {
            base.AddObject("MasterEmployees", masterEmployee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterExpYears EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterExpYears(MasterExpYear masterExpYear)
        {
            base.AddObject("MasterExpYears", masterExpYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterGenders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterGenders(MasterGender masterGender)
        {
            base.AddObject("MasterGenders", masterGender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterHours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterHours(MasterHour masterHour)
        {
            base.AddObject("MasterHours", masterHour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterIndustries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterIndustries(MasterIndustry masterIndustry)
        {
            base.AddObject("MasterIndustries", masterIndustry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterInterests(MasterInterest masterInterest)
        {
            base.AddObject("MasterInterests", masterInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the masterinterest_BK EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomasterinterest_BK(masterinterest_BK masterinterest_BK)
        {
            base.AddObject("masterinterest_BK", masterinterest_BK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterInvitationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterInvitationTypes(MasterInvitationType masterInvitationType)
        {
            base.AddObject("MasterInvitationTypes", masterInvitationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterJobPackages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterJobPackages(MasterJobPackage masterJobPackage)
        {
            base.AddObject("MasterJobPackages", masterJobPackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterJobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterJobTypes(MasterJobType masterJobType)
        {
            base.AddObject("MasterJobTypes", masterJobType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterLanguages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterLanguages(MasterLanguage masterLanguage)
        {
            base.AddObject("MasterLanguages", masterLanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterLevels(MasterLevel masterLevel)
        {
            base.AddObject("MasterLevels", masterLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterMaximumSalaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterMaximumSalaries(MasterMaximumSalary masterMaximumSalary)
        {
            base.AddObject("MasterMaximumSalaries", masterMaximumSalary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterMessageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterMessageTypes(MasterMessageType masterMessageType)
        {
            base.AddObject("MasterMessageTypes", masterMessageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterMinimumSalaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterMinimumSalaries(MasterMinimumSalary masterMinimumSalary)
        {
            base.AddObject("MasterMinimumSalaries", masterMinimumSalary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterMonths(MasterMonth masterMonth)
        {
            base.AddObject("MasterMonths", masterMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterNationalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterNationalities(MasterNationality masterNationality)
        {
            base.AddObject("MasterNationalities", masterNationality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPaymentTypes(MasterPaymentType masterPaymentType)
        {
            base.AddObject("MasterPaymentTypes", masterPaymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterProfileImportSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterProfileImportSources(MasterProfileImportSource masterProfileImportSource)
        {
            base.AddObject("MasterProfileImportSources", masterProfileImportSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterSalaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterSalaries(MasterSalary masterSalary)
        {
            base.AddObject("MasterSalaries", masterSalary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterSectors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterSectors(MasterSector masterSector)
        {
            base.AddObject("MasterSectors", masterSector);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterSkills(MasterSkill masterSkill)
        {
            base.AddObject("MasterSkills", masterSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterStates(MasterState masterState)
        {
            base.AddObject("MasterStates", masterState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterTitles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterTitles(MasterTitle masterTitle)
        {
            base.AddObject("MasterTitles", masterTitle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterYears EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterYears(MasterYear masterYear)
        {
            base.AddObject("MasterYears", masterYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserCompaniesFollwers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserCompaniesFollwers(PreferredFeedUserCompaniesFollwer preferredFeedUserCompaniesFollwer)
        {
            base.AddObject("PreferredFeedUserCompaniesFollwers", preferredFeedUserCompaniesFollwer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserCountries(PreferredFeedUserCountry preferredFeedUserCountry)
        {
            base.AddObject("PreferredFeedUserCountries", preferredFeedUserCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserIndustries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserIndustries(PreferredFeedUserIndustry preferredFeedUserIndustry)
        {
            base.AddObject("PreferredFeedUserIndustries", preferredFeedUserIndustry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserInterests(PreferredFeedUserInterest preferredFeedUserInterest)
        {
            base.AddObject("PreferredFeedUserInterests", preferredFeedUserInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserSkills(PreferredFeedUserSkill preferredFeedUserSkill)
        {
            base.AddObject("PreferredFeedUserSkills", preferredFeedUserSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserUsers(PreferredFeedUserUser preferredFeedUserUser)
        {
            base.AddObject("PreferredFeedUserUsers", preferredFeedUserUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredFeedUserUserDeriveds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredFeedUserUserDeriveds(PreferredFeedUserUserDerived preferredFeedUserUserDerived)
        {
            base.AddObject("PreferredFeedUserUserDeriveds", preferredFeedUserUserDerived);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserCompanies(PreferredJobUserCompany preferredJobUserCompany)
        {
            base.AddObject("PreferredJobUserCompanies", preferredJobUserCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserCountries(PreferredJobUserCountry preferredJobUserCountry)
        {
            base.AddObject("PreferredJobUserCountries", preferredJobUserCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserIndustries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserIndustries(PreferredJobUserIndustry preferredJobUserIndustry)
        {
            base.AddObject("PreferredJobUserIndustries", preferredJobUserIndustry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserInterests(PreferredJobUserInterest preferredJobUserInterest)
        {
            base.AddObject("PreferredJobUserInterests", preferredJobUserInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserJobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserJobTypes(PreferredJobUserJobType preferredJobUserJobType)
        {
            base.AddObject("PreferredJobUserJobTypes", preferredJobUserJobType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserSalaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserSalaries(PreferredJobUserSalary preferredJobUserSalary)
        {
            base.AddObject("PreferredJobUserSalaries", preferredJobUserSalary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserSkills(PreferredJobUserSkill preferredJobUserSkill)
        {
            base.AddObject("PreferredJobUserSkills", preferredJobUserSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredJobUserUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredJobUserUsers(PreferredJobUserUser preferredJobUserUser)
        {
            base.AddObject("PreferredJobUserUsers", preferredJobUserUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferredUserCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferredUserCompanies(PreferredUserCompany preferredUserCompany)
        {
            base.AddObject("PreferredUserCompanies", preferredUserCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SeoInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeoInfoes(SeoInfo seoInfo)
        {
            base.AddObject("SeoInfoes", seoInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserBlockLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserBlockLists(UserBlockList userBlockList)
        {
            base.AddObject("UserBlockLists", userBlockList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEmailPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEmailPreferences(UserEmailPreference userEmailPreference)
        {
            base.AddObject("UserEmailPreferences", userEmailPreference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEmploymentSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEmploymentSkills(UserEmploymentSkill userEmploymentSkill)
        {
            base.AddObject("UserEmploymentSkills", userEmploymentSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEndorseLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEndorseLists(UserEndorseList userEndorseList)
        {
            base.AddObject("UserEndorseLists", userEndorseList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFeeds(UserFeed userFeed)
        {
            base.AddObject("UserFeeds", userFeed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserInterests(UserInterest userInterest)
        {
            base.AddObject("UserInterests", userInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserInvoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserInvoices(UserInvoice userInvoice)
        {
            base.AddObject("UserInvoices", userInvoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLanguages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLanguages(UserLanguage userLanguage)
        {
            base.AddObject("UserLanguages", userLanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserMessages(UserMessage userMessage)
        {
            base.AddObject("UserMessages", userMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserMessageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserMessageTypes(UserMessageType userMessageType)
        {
            base.AddObject("UserMessageTypes", userMessageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPaymentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPaymentInfoes(UserPaymentInfo userPaymentInfo)
        {
            base.AddObject("UserPaymentInfoes", userPaymentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPortfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPortfolios(UserPortfolio userPortfolio)
        {
            base.AddObject("UserPortfolios", userPortfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfileVisitedHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfileVisitedHistories(UserProfileVisitedHistory userProfileVisitedHistory)
        {
            base.AddObject("UserProfileVisitedHistories", userProfileVisitedHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSkills(UserSkill userSkill)
        {
            base.AddObject("UserSkills", userSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTransactions(UserTransaction userTransaction)
        {
            base.AddObject("UserTransactions", userTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserVideos(UserVideo userVideo)
        {
            base.AddObject("UserVideos", userVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OAuthTokens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOAuthTokens(OAuthToken oAuthToken)
        {
            base.AddObject("OAuthTokens", oAuthToken);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobsStatusDailies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobsStatusDailies(JobsStatusDaily jobsStatusDaily)
        {
            base.AddObject("JobsStatusDailies", jobsStatusDaily);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCompanies(UserCompany userCompany)
        {
            base.AddObject("UserCompanies", userCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MasterPeoples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasterPeoples(MasterPeople masterPeople)
        {
            base.AddObject("MasterPeoples", masterPeople);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pageType">No Metadata Documentation available.</param>
        /// <param name="currentUserId">No Metadata Documentation available.</param>
        /// <param name="profileUserId">No Metadata Documentation available.</param>
        /// <param name="latestFeedId">No Metadata Documentation available.</param>
        /// <param name="oldestFeedId">No Metadata Documentation available.</param>
        /// <param name="pagesize">No Metadata Documentation available.</param>
        /// <param name="totalRecords">No Metadata Documentation available.</param>
        public ObjectResult<GetFeedList_Result> GetFeedList(Nullable<global::System.Int32> pageType, Nullable<global::System.Int32> currentUserId, Nullable<global::System.Int32> profileUserId, Nullable<global::System.Int32> latestFeedId, Nullable<global::System.Int32> oldestFeedId, Nullable<global::System.Int32> pagesize, ObjectParameter totalRecords)
        {
            ObjectParameter pageTypeParameter;
            if (pageType.HasValue)
            {
                pageTypeParameter = new ObjectParameter("PageType", pageType);
            }
            else
            {
                pageTypeParameter = new ObjectParameter("PageType", typeof(global::System.Int32));
            }
    
            ObjectParameter currentUserIdParameter;
            if (currentUserId.HasValue)
            {
                currentUserIdParameter = new ObjectParameter("CurrentUserId", currentUserId);
            }
            else
            {
                currentUserIdParameter = new ObjectParameter("CurrentUserId", typeof(global::System.Int32));
            }
    
            ObjectParameter profileUserIdParameter;
            if (profileUserId.HasValue)
            {
                profileUserIdParameter = new ObjectParameter("ProfileUserId", profileUserId);
            }
            else
            {
                profileUserIdParameter = new ObjectParameter("ProfileUserId", typeof(global::System.Int32));
            }
    
            ObjectParameter latestFeedIdParameter;
            if (latestFeedId.HasValue)
            {
                latestFeedIdParameter = new ObjectParameter("LatestFeedId", latestFeedId);
            }
            else
            {
                latestFeedIdParameter = new ObjectParameter("LatestFeedId", typeof(global::System.Int32));
            }
    
            ObjectParameter oldestFeedIdParameter;
            if (oldestFeedId.HasValue)
            {
                oldestFeedIdParameter = new ObjectParameter("OldestFeedId", oldestFeedId);
            }
            else
            {
                oldestFeedIdParameter = new ObjectParameter("OldestFeedId", typeof(global::System.Int32));
            }
    
            ObjectParameter pagesizeParameter;
            if (pagesize.HasValue)
            {
                pagesizeParameter = new ObjectParameter("Pagesize", pagesize);
            }
            else
            {
                pagesizeParameter = new ObjectParameter("Pagesize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetFeedList_Result>("GetFeedList", pageTypeParameter, currentUserIdParameter, profileUserIdParameter, latestFeedIdParameter, oldestFeedIdParameter, pagesizeParameter, totalRecords);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="currentUserId">No Metadata Documentation available.</param>
        /// <param name="pageIndex">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public ObjectResult<GetFeedAlertList_Result> GetFeedAlertList(Nullable<global::System.Int32> currentUserId, Nullable<global::System.Int32> pageIndex, Nullable<global::System.Int32> pageSize)
        {
            ObjectParameter currentUserIdParameter;
            if (currentUserId.HasValue)
            {
                currentUserIdParameter = new ObjectParameter("CurrentUserId", currentUserId);
            }
            else
            {
                currentUserIdParameter = new ObjectParameter("CurrentUserId", typeof(global::System.Int32));
            }
    
            ObjectParameter pageIndexParameter;
            if (pageIndex.HasValue)
            {
                pageIndexParameter = new ObjectParameter("PageIndex", pageIndex);
            }
            else
            {
                pageIndexParameter = new ObjectParameter("PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetFeedAlertList_Result>("GetFeedAlertList", currentUserIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="currentUserId">No Metadata Documentation available.</param>
        public ObjectResult<GetFeedAlertListCount_Result1> GetFeedAlertListCount(Nullable<global::System.Int32> currentUserId)
        {
            ObjectParameter currentUserIdParameter;
            if (currentUserId.HasValue)
            {
                currentUserIdParameter = new ObjectParameter("CurrentUserId", currentUserId);
            }
            else
            {
                currentUserIdParameter = new ObjectParameter("CurrentUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetFeedAlertListCount_Result1>("GetFeedAlertListCount", currentUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int Countofrssnaukri()
        {
            return base.ExecuteFunction("Countofrssnaukri");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int CountofShine()
        {
            return base.ExecuteFunction("CountofShine");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        public ObjectResult<Job> ListofJobs(Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate)
        {
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("fromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("fromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("toDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("toDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Job>("ListofJobs", fromDateParameter, toDateParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        public ObjectResult<Job> ListofJobs(Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, MergeOption mergeOption)
        {
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("fromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("fromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("toDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("toDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Job>("ListofJobs", mergeOption, fromDateParameter, toDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        public ObjectResult<ListofJobsSiteMap_Result2> ListofJobsSiteMap(Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate)
        {
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("fromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("fromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("toDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("toDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<ListofJobsSiteMap_Result2>("ListofJobsSiteMap", fromDateParameter, toDateParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Address CreateAddress(global::System.Int32 id)
        {
            Address address = new Address();
            address.ID = id;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line1
        {
            get
            {
                return _Line1;
            }
            set
            {
                OnLine1Changing(value);
                ReportPropertyChanging("Line1");
                _Line1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line1");
                OnLine1Changed();
            }
        }
        private global::System.String _Line1;
        partial void OnLine1Changing(global::System.String value);
        partial void OnLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line2
        {
            get
            {
                return _Line2;
            }
            set
            {
                OnLine2Changing(value);
                ReportPropertyChanging("Line2");
                _Line2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line2");
                OnLine2Changed();
            }
        }
        private global::System.String _Line2;
        partial void OnLine2Changing(global::System.String value);
        partial void OnLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line3
        {
            get
            {
                return _Line3;
            }
            set
            {
                OnLine3Changing(value);
                ReportPropertyChanging("Line3");
                _Line3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line3");
                OnLine3Changed();
            }
        }
        private global::System.String _Line3;
        partial void OnLine3Changing(global::System.String value);
        partial void OnLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Address_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Address_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Address_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Address_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_Address_MasterCountry", "MasterCountry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Association")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Association : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Association object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="stillMember">Initial value of the StillMember property.</param>
        public static Association CreateAssociation(global::System.Int32 id, global::System.Int32 userId, global::System.Boolean stillMember)
        {
            Association association = new Association();
            association.ID = id;
            association.UserId = userId;
            association.StillMember = stillMember;
            return association;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Association1
        {
            get
            {
                return _Association1;
            }
            set
            {
                OnAssociation1Changing(value);
                ReportPropertyChanging("Association1");
                _Association1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Association1");
                OnAssociation1Changed();
            }
        }
        private global::System.String _Association1;
        partial void OnAssociation1Changing(global::System.String value);
        partial void OnAssociation1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromMonthID
        {
            get
            {
                return _FromMonthID;
            }
            set
            {
                OnFromMonthIDChanging(value);
                ReportPropertyChanging("FromMonthID");
                _FromMonthID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromMonthID");
                OnFromMonthIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromMonthID;
        partial void OnFromMonthIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromYearID
        {
            get
            {
                return _FromYearID;
            }
            set
            {
                OnFromYearIDChanging(value);
                ReportPropertyChanging("FromYearID");
                _FromYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromYearID");
                OnFromYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromYearID;
        partial void OnFromYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToMonthID
        {
            get
            {
                return _ToMonthID;
            }
            set
            {
                OnToMonthIDChanging(value);
                ReportPropertyChanging("ToMonthID");
                _ToMonthID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToMonthID");
                OnToMonthIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToMonthID;
        partial void OnToMonthIDChanging(Nullable<global::System.Int32> value);
        partial void OnToMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToYearID
        {
            get
            {
                return _ToYearID;
            }
            set
            {
                OnToYearIDChanging(value);
                ReportPropertyChanging("ToYearID");
                _ToYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToYearID");
                OnToYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToYearID;
        partial void OnToYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnToYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean StillMember
        {
            get
            {
                return _StillMember;
            }
            set
            {
                OnStillMemberChanging(value);
                ReportPropertyChanging("StillMember");
                _StillMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StillMember");
                OnStillMemberChanged();
            }
        }
        private global::System.Boolean _StillMember;
        partial void OnStillMemberChanging(global::System.Boolean value);
        partial void OnStillMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Month", "MasterMonth")]
        public MasterMonth MasterMonth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_Association_Month", "MasterMonth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_Association_Month", "MasterMonth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMonth> MasterMonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_Association_Month", "MasterMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMonth>("huntableModel.FK_Association_Month", "MasterMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Month1", "MasterMonth")]
        public MasterMonth MasterMonth1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_Association_Month1", "MasterMonth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_Association_Month1", "MasterMonth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMonth> MasterMonth1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_Association_Month1", "MasterMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMonth>("huntableModel.FK_Association_Month1", "MasterMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Year", "MasterYear")]
        public MasterYear MasterYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_Association_Year", "MasterYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_Association_Year", "MasterYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterYear> MasterYearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_Association_Year", "MasterYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterYear>("huntableModel.FK_Association_Year", "MasterYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Year1", "MasterYear")]
        public MasterYear MasterYear1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_Association_Year1", "MasterYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_Association_Year1", "MasterYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterYear> MasterYear1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_Association_Year1", "MasterYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterYear>("huntableModel.FK_Association_Year1", "MasterYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Association_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Association_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Association_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_Association_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatAdmin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatAdmin object.
        /// </summary>
        /// <param name="ca_username">Initial value of the ca_username property.</param>
        /// <param name="ca_password">Initial value of the ca_password property.</param>
        /// <param name="ca_lastlogin">Initial value of the ca_lastlogin property.</param>
        /// <param name="ca_lastsessionid">Initial value of the ca_lastsessionid property.</param>
        public static ChatAdmin CreateChatAdmin(global::System.String ca_username, global::System.String ca_password, global::System.DateTime ca_lastlogin, global::System.String ca_lastsessionid)
        {
            ChatAdmin chatAdmin = new ChatAdmin();
            chatAdmin.ca_username = ca_username;
            chatAdmin.ca_password = ca_password;
            chatAdmin.ca_lastlogin = ca_lastlogin;
            chatAdmin.ca_lastsessionid = ca_lastsessionid;
            return chatAdmin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ca_username
        {
            get
            {
                return _ca_username;
            }
            set
            {
                if (_ca_username != value)
                {
                    Onca_usernameChanging(value);
                    ReportPropertyChanging("ca_username");
                    _ca_username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ca_username");
                    Onca_usernameChanged();
                }
            }
        }
        private global::System.String _ca_username;
        partial void Onca_usernameChanging(global::System.String value);
        partial void Onca_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ca_password
        {
            get
            {
                return _ca_password;
            }
            set
            {
                Onca_passwordChanging(value);
                ReportPropertyChanging("ca_password");
                _ca_password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ca_password");
                Onca_passwordChanged();
            }
        }
        private global::System.String _ca_password;
        partial void Onca_passwordChanging(global::System.String value);
        partial void Onca_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ca_lastlogin
        {
            get
            {
                return _ca_lastlogin;
            }
            set
            {
                Onca_lastloginChanging(value);
                ReportPropertyChanging("ca_lastlogin");
                _ca_lastlogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ca_lastlogin");
                Onca_lastloginChanged();
            }
        }
        private global::System.DateTime _ca_lastlogin;
        partial void Onca_lastloginChanging(global::System.DateTime value);
        partial void Onca_lastloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ca_lastsessionid
        {
            get
            {
                return _ca_lastsessionid;
            }
            set
            {
                Onca_lastsessionidChanging(value);
                ReportPropertyChanging("ca_lastsessionid");
                _ca_lastsessionid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ca_lastsessionid");
                Onca_lastsessionidChanged();
            }
        }
        private global::System.String _ca_lastsessionid;
        partial void Onca_lastsessionidChanging(global::System.String value);
        partial void Onca_lastsessionidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatBan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatBan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatBan object.
        /// </summary>
        /// <param name="cb_id">Initial value of the cb_id property.</param>
        /// <param name="cb_date">Initial value of the cb_date property.</param>
        public static ChatBan CreateChatBan(global::System.Int32 cb_id, global::System.DateTime cb_date)
        {
            ChatBan chatBan = new ChatBan();
            chatBan.cb_id = cb_id;
            chatBan.cb_date = cb_date;
            return chatBan;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cb_id
        {
            get
            {
                return _cb_id;
            }
            set
            {
                if (_cb_id != value)
                {
                    Oncb_idChanging(value);
                    ReportPropertyChanging("cb_id");
                    _cb_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cb_id");
                    Oncb_idChanged();
                }
            }
        }
        private global::System.Int32 _cb_id;
        partial void Oncb_idChanging(global::System.Int32 value);
        partial void Oncb_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cr_id
        {
            get
            {
                return _cr_id;
            }
            set
            {
                Oncr_idChanging(value);
                ReportPropertyChanging("cr_id");
                _cr_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cr_id");
                Oncr_idChanged();
            }
        }
        private Nullable<global::System.Int32> _cr_id;
        partial void Oncr_idChanging(Nullable<global::System.Int32> value);
        partial void Oncr_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cu_id
        {
            get
            {
                return _cu_id;
            }
            set
            {
                Oncu_idChanging(value);
                ReportPropertyChanging("cu_id");
                _cu_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cu_id");
                Oncu_idChanged();
            }
        }
        private Nullable<global::System.Int32> _cu_id;
        partial void Oncu_idChanging(Nullable<global::System.Int32> value);
        partial void Oncu_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cb_ip
        {
            get
            {
                return _cb_ip;
            }
            set
            {
                Oncb_ipChanging(value);
                ReportPropertyChanging("cb_ip");
                _cb_ip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cb_ip");
                Oncb_ipChanged();
            }
        }
        private global::System.String _cb_ip;
        partial void Oncb_ipChanging(global::System.String value);
        partial void Oncb_ipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cb_date
        {
            get
            {
                return _cb_date;
            }
            set
            {
                if (_cb_date != value)
                {
                    Oncb_dateChanging(value);
                    ReportPropertyChanging("cb_date");
                    _cb_date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cb_date");
                    Oncb_dateChanged();
                }
            }
        }
        private global::System.DateTime _cb_date;
        partial void Oncb_dateChanging(global::System.DateTime value);
        partial void Oncb_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> cb_dateexpires
        {
            get
            {
                return _cb_dateexpires;
            }
            set
            {
                Oncb_dateexpiresChanging(value);
                ReportPropertyChanging("cb_dateexpires");
                _cb_dateexpires = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cb_dateexpires");
                Oncb_dateexpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _cb_dateexpires;
        partial void Oncb_dateexpiresChanging(Nullable<global::System.DateTime> value);
        partial void Oncb_dateexpiresChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatIgnoredUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatIgnoredUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatIgnoredUser object.
        /// </summary>
        /// <param name="cu_id">Initial value of the cu_id property.</param>
        /// <param name="ciu_ignoreduserid">Initial value of the ciu_ignoreduserid property.</param>
        /// <param name="ciu_ignoredate">Initial value of the ciu_ignoredate property.</param>
        public static ChatIgnoredUser CreateChatIgnoredUser(global::System.Int32 cu_id, global::System.Int32 ciu_ignoreduserid, global::System.DateTime ciu_ignoredate)
        {
            ChatIgnoredUser chatIgnoredUser = new ChatIgnoredUser();
            chatIgnoredUser.cu_id = cu_id;
            chatIgnoredUser.ciu_ignoreduserid = ciu_ignoreduserid;
            chatIgnoredUser.ciu_ignoredate = ciu_ignoredate;
            return chatIgnoredUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cu_id
        {
            get
            {
                return _cu_id;
            }
            set
            {
                if (_cu_id != value)
                {
                    Oncu_idChanging(value);
                    ReportPropertyChanging("cu_id");
                    _cu_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cu_id");
                    Oncu_idChanged();
                }
            }
        }
        private global::System.Int32 _cu_id;
        partial void Oncu_idChanging(global::System.Int32 value);
        partial void Oncu_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ciu_ignoreduserid
        {
            get
            {
                return _ciu_ignoreduserid;
            }
            set
            {
                if (_ciu_ignoreduserid != value)
                {
                    Onciu_ignoreduseridChanging(value);
                    ReportPropertyChanging("ciu_ignoreduserid");
                    _ciu_ignoreduserid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ciu_ignoreduserid");
                    Onciu_ignoreduseridChanged();
                }
            }
        }
        private global::System.Int32 _ciu_ignoreduserid;
        partial void Onciu_ignoreduseridChanging(global::System.Int32 value);
        partial void Onciu_ignoreduseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ciu_ignoredate
        {
            get
            {
                return _ciu_ignoredate;
            }
            set
            {
                Onciu_ignoredateChanging(value);
                ReportPropertyChanging("ciu_ignoredate");
                _ciu_ignoredate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ciu_ignoredate");
                Onciu_ignoredateChanged();
            }
        }
        private global::System.DateTime _ciu_ignoredate;
        partial void Onciu_ignoredateChanging(global::System.DateTime value);
        partial void Onciu_ignoredateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatUser")]
        public ChatUser ChatUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChatUser> ChatUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_ChatIgnoredUsers_ChatUsers", "ChatUser")]
        public ChatUser ChatUser1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatUsers", "ChatUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatUsers", "ChatUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChatUser> ChatUser1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatUsers", "ChatUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChatUser>("huntableModel.FK_ChatIgnoredUsers_ChatUsers", "ChatUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatMessage object.
        /// </summary>
        /// <param name="cm_id">Initial value of the cm_id property.</param>
        /// <param name="cm_type">Initial value of the cm_type property.</param>
        /// <param name="cm_time">Initial value of the cm_time property.</param>
        /// <param name="cm_senderdisplayname">Initial value of the cm_senderdisplayname property.</param>
        /// <param name="cm_text">Initial value of the cm_text property.</param>
        /// <param name="cm_texthtml">Initial value of the cm_texthtml property.</param>
        public static ChatMessage CreateChatMessage(global::System.Int32 cm_id, global::System.Int32 cm_type, global::System.DateTime cm_time, global::System.String cm_senderdisplayname, global::System.String cm_text, global::System.String cm_texthtml)
        {
            ChatMessage chatMessage = new ChatMessage();
            chatMessage.cm_id = cm_id;
            chatMessage.cm_type = cm_type;
            chatMessage.cm_time = cm_time;
            chatMessage.cm_senderdisplayname = cm_senderdisplayname;
            chatMessage.cm_text = cm_text;
            chatMessage.cm_texthtml = cm_texthtml;
            return chatMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cm_id
        {
            get
            {
                return _cm_id;
            }
            set
            {
                if (_cm_id != value)
                {
                    Oncm_idChanging(value);
                    ReportPropertyChanging("cm_id");
                    _cm_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cm_id");
                    Oncm_idChanged();
                }
            }
        }
        private global::System.Int32 _cm_id;
        partial void Oncm_idChanging(global::System.Int32 value);
        partial void Oncm_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cm_type
        {
            get
            {
                return _cm_type;
            }
            set
            {
                Oncm_typeChanging(value);
                ReportPropertyChanging("cm_type");
                _cm_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cm_type");
                Oncm_typeChanged();
            }
        }
        private global::System.Int32 _cm_type;
        partial void Oncm_typeChanging(global::System.Int32 value);
        partial void Oncm_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cm_time
        {
            get
            {
                return _cm_time;
            }
            set
            {
                Oncm_timeChanging(value);
                ReportPropertyChanging("cm_time");
                _cm_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cm_time");
                Oncm_timeChanged();
            }
        }
        private global::System.DateTime _cm_time;
        partial void Oncm_timeChanging(global::System.DateTime value);
        partial void Oncm_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cr_id
        {
            get
            {
                return _cr_id;
            }
            set
            {
                Oncr_idChanging(value);
                ReportPropertyChanging("cr_id");
                _cr_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cr_id");
                Oncr_idChanged();
            }
        }
        private Nullable<global::System.Int32> _cr_id;
        partial void Oncr_idChanging(Nullable<global::System.Int32> value);
        partial void Oncr_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cu_id_sender
        {
            get
            {
                return _cu_id_sender;
            }
            set
            {
                Oncu_id_senderChanging(value);
                ReportPropertyChanging("cu_id_sender");
                _cu_id_sender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cu_id_sender");
                Oncu_id_senderChanged();
            }
        }
        private Nullable<global::System.Int32> _cu_id_sender;
        partial void Oncu_id_senderChanging(Nullable<global::System.Int32> value);
        partial void Oncu_id_senderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cm_senderdisplayname
        {
            get
            {
                return _cm_senderdisplayname;
            }
            set
            {
                Oncm_senderdisplaynameChanging(value);
                ReportPropertyChanging("cm_senderdisplayname");
                _cm_senderdisplayname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cm_senderdisplayname");
                Oncm_senderdisplaynameChanged();
            }
        }
        private global::System.String _cm_senderdisplayname;
        partial void Oncm_senderdisplaynameChanging(global::System.String value);
        partial void Oncm_senderdisplaynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cu_id_target
        {
            get
            {
                return _cu_id_target;
            }
            set
            {
                Oncu_id_targetChanging(value);
                ReportPropertyChanging("cu_id_target");
                _cu_id_target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cu_id_target");
                Oncu_id_targetChanged();
            }
        }
        private Nullable<global::System.Int32> _cu_id_target;
        partial void Oncu_id_targetChanging(Nullable<global::System.Int32> value);
        partial void Oncu_id_targetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cm_text
        {
            get
            {
                return _cm_text;
            }
            set
            {
                Oncm_textChanging(value);
                ReportPropertyChanging("cm_text");
                _cm_text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cm_text");
                Oncm_textChanged();
            }
        }
        private global::System.String _cm_text;
        partial void Oncm_textChanging(global::System.String value);
        partial void Oncm_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cm_texthtml
        {
            get
            {
                return _cm_texthtml;
            }
            set
            {
                Oncm_texthtmlChanging(value);
                ReportPropertyChanging("cm_texthtml");
                _cm_texthtml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cm_texthtml");
                Oncm_texthtmlChanged();
            }
        }
        private global::System.String _cm_texthtml;
        partial void Oncm_texthtmlChanging(global::System.String value);
        partial void Oncm_texthtmlChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatPresence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatPresence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatPresence object.
        /// </summary>
        /// <param name="cp_username">Initial value of the cp_username property.</param>
        /// <param name="cp_lastonline">Initial value of the cp_lastonline property.</param>
        public static ChatPresence CreateChatPresence(global::System.String cp_username, global::System.DateTime cp_lastonline)
        {
            ChatPresence chatPresence = new ChatPresence();
            chatPresence.cp_username = cp_username;
            chatPresence.cp_lastonline = cp_lastonline;
            return chatPresence;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cp_username
        {
            get
            {
                return _cp_username;
            }
            set
            {
                if (_cp_username != value)
                {
                    Oncp_usernameChanging(value);
                    ReportPropertyChanging("cp_username");
                    _cp_username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cp_username");
                    Oncp_usernameChanged();
                }
            }
        }
        private global::System.String _cp_username;
        partial void Oncp_usernameChanging(global::System.String value);
        partial void Oncp_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cp_lastonline
        {
            get
            {
                return _cp_lastonline;
            }
            set
            {
                Oncp_lastonlineChanging(value);
                ReportPropertyChanging("cp_lastonline");
                _cp_lastonline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cp_lastonline");
                Oncp_lastonlineChanged();
            }
        }
        private global::System.DateTime _cp_lastonline;
        partial void Oncp_lastonlineChanging(global::System.DateTime value);
        partial void Oncp_lastonlineChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatRoom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatRoom object.
        /// </summary>
        /// <param name="cr_id">Initial value of the cr_id property.</param>
        /// <param name="cr_name">Initial value of the cr_name property.</param>
        /// <param name="cr_topic">Initial value of the cr_topic property.</param>
        /// <param name="cr_visible">Initial value of the cr_visible property.</param>
        public static ChatRoom CreateChatRoom(global::System.Int32 cr_id, global::System.String cr_name, global::System.String cr_topic, global::System.Boolean cr_visible)
        {
            ChatRoom chatRoom = new ChatRoom();
            chatRoom.cr_id = cr_id;
            chatRoom.cr_name = cr_name;
            chatRoom.cr_topic = cr_topic;
            chatRoom.cr_visible = cr_visible;
            return chatRoom;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cr_id
        {
            get
            {
                return _cr_id;
            }
            set
            {
                if (_cr_id != value)
                {
                    Oncr_idChanging(value);
                    ReportPropertyChanging("cr_id");
                    _cr_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cr_id");
                    Oncr_idChanged();
                }
            }
        }
        private global::System.Int32 _cr_id;
        partial void Oncr_idChanging(global::System.Int32 value);
        partial void Oncr_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cr_name
        {
            get
            {
                return _cr_name;
            }
            set
            {
                Oncr_nameChanging(value);
                ReportPropertyChanging("cr_name");
                _cr_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cr_name");
                Oncr_nameChanged();
            }
        }
        private global::System.String _cr_name;
        partial void Oncr_nameChanging(global::System.String value);
        partial void Oncr_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cr_topic
        {
            get
            {
                return _cr_topic;
            }
            set
            {
                Oncr_topicChanging(value);
                ReportPropertyChanging("cr_topic");
                _cr_topic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cr_topic");
                Oncr_topicChanged();
            }
        }
        private global::System.String _cr_topic;
        partial void Oncr_topicChanging(global::System.String value);
        partial void Oncr_topicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cr_password
        {
            get
            {
                return _cr_password;
            }
            set
            {
                Oncr_passwordChanging(value);
                ReportPropertyChanging("cr_password");
                _cr_password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cr_password");
                Oncr_passwordChanged();
            }
        }
        private global::System.String _cr_password;
        partial void Oncr_passwordChanging(global::System.String value);
        partial void Oncr_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cr_maxusers
        {
            get
            {
                return _cr_maxusers;
            }
            set
            {
                Oncr_maxusersChanging(value);
                ReportPropertyChanging("cr_maxusers");
                _cr_maxusers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cr_maxusers");
                Oncr_maxusersChanged();
            }
        }
        private Nullable<global::System.Int32> _cr_maxusers;
        partial void Oncr_maxusersChanging(Nullable<global::System.Int32> value);
        partial void Oncr_maxusersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean cr_visible
        {
            get
            {
                return _cr_visible;
            }
            set
            {
                Oncr_visibleChanging(value);
                ReportPropertyChanging("cr_visible");
                _cr_visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cr_visible");
                Oncr_visibleChanged();
            }
        }
        private global::System.Boolean _cr_visible;
        partial void Oncr_visibleChanging(global::System.Boolean value);
        partial void Oncr_visibleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatRoomActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatRoomActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatRoomActivity object.
        /// </summary>
        /// <param name="cra_userid">Initial value of the cra_userid property.</param>
        /// <param name="cra_roomid">Initial value of the cra_roomid property.</param>
        /// <param name="cra_username">Initial value of the cra_username property.</param>
        /// <param name="cra_displayname">Initial value of the cra_displayname property.</param>
        /// <param name="cra_lastonline">Initial value of the cra_lastonline property.</param>
        public static ChatRoomActivity CreateChatRoomActivity(global::System.Int32 cra_userid, global::System.Int32 cra_roomid, global::System.String cra_username, global::System.String cra_displayname, global::System.DateTime cra_lastonline)
        {
            ChatRoomActivity chatRoomActivity = new ChatRoomActivity();
            chatRoomActivity.cra_userid = cra_userid;
            chatRoomActivity.cra_roomid = cra_roomid;
            chatRoomActivity.cra_username = cra_username;
            chatRoomActivity.cra_displayname = cra_displayname;
            chatRoomActivity.cra_lastonline = cra_lastonline;
            return chatRoomActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cra_userid
        {
            get
            {
                return _cra_userid;
            }
            set
            {
                if (_cra_userid != value)
                {
                    Oncra_useridChanging(value);
                    ReportPropertyChanging("cra_userid");
                    _cra_userid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cra_userid");
                    Oncra_useridChanged();
                }
            }
        }
        private global::System.Int32 _cra_userid;
        partial void Oncra_useridChanging(global::System.Int32 value);
        partial void Oncra_useridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cra_roomid
        {
            get
            {
                return _cra_roomid;
            }
            set
            {
                if (_cra_roomid != value)
                {
                    Oncra_roomidChanging(value);
                    ReportPropertyChanging("cra_roomid");
                    _cra_roomid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cra_roomid");
                    Oncra_roomidChanged();
                }
            }
        }
        private global::System.Int32 _cra_roomid;
        partial void Oncra_roomidChanging(global::System.Int32 value);
        partial void Oncra_roomidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cra_username
        {
            get
            {
                return _cra_username;
            }
            set
            {
                Oncra_usernameChanging(value);
                ReportPropertyChanging("cra_username");
                _cra_username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cra_username");
                Oncra_usernameChanged();
            }
        }
        private global::System.String _cra_username;
        partial void Oncra_usernameChanging(global::System.String value);
        partial void Oncra_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cra_displayname
        {
            get
            {
                return _cra_displayname;
            }
            set
            {
                Oncra_displaynameChanging(value);
                ReportPropertyChanging("cra_displayname");
                _cra_displayname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cra_displayname");
                Oncra_displaynameChanged();
            }
        }
        private global::System.String _cra_displayname;
        partial void Oncra_displaynameChanging(global::System.String value);
        partial void Oncra_displaynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cra_lastonline
        {
            get
            {
                return _cra_lastonline;
            }
            set
            {
                Oncra_lastonlineChanging(value);
                ReportPropertyChanging("cra_lastonline");
                _cra_lastonline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cra_lastonline");
                Oncra_lastonlineChanged();
            }
        }
        private global::System.DateTime _cra_lastonline;
        partial void Oncra_lastonlineChanging(global::System.DateTime value);
        partial void Oncra_lastonlineChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatRoomAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatRoomAdmin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatRoomAdmin object.
        /// </summary>
        /// <param name="cu_id">Initial value of the cu_id property.</param>
        /// <param name="cr_id">Initial value of the cr_id property.</param>
        public static ChatRoomAdmin CreateChatRoomAdmin(global::System.Int32 cu_id, global::System.Int32 cr_id)
        {
            ChatRoomAdmin chatRoomAdmin = new ChatRoomAdmin();
            chatRoomAdmin.cu_id = cu_id;
            chatRoomAdmin.cr_id = cr_id;
            return chatRoomAdmin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cu_id
        {
            get
            {
                return _cu_id;
            }
            set
            {
                if (_cu_id != value)
                {
                    Oncu_idChanging(value);
                    ReportPropertyChanging("cu_id");
                    _cu_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cu_id");
                    Oncu_idChanged();
                }
            }
        }
        private global::System.Int32 _cu_id;
        partial void Oncu_idChanging(global::System.Int32 value);
        partial void Oncu_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cr_id
        {
            get
            {
                return _cr_id;
            }
            set
            {
                if (_cr_id != value)
                {
                    Oncr_idChanging(value);
                    ReportPropertyChanging("cr_id");
                    _cr_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cr_id");
                    Oncr_idChanged();
                }
            }
        }
        private global::System.Int32 _cr_id;
        partial void Oncr_idChanging(global::System.Int32 value);
        partial void Oncr_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatSetting object.
        /// </summary>
        /// <param name="cs_key">Initial value of the cs_key property.</param>
        /// <param name="cs_value">Initial value of the cs_value property.</param>
        public static ChatSetting CreateChatSetting(global::System.String cs_key, global::System.String cs_value)
        {
            ChatSetting chatSetting = new ChatSetting();
            chatSetting.cs_key = cs_key;
            chatSetting.cs_value = cs_value;
            return chatSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cs_key
        {
            get
            {
                return _cs_key;
            }
            set
            {
                if (_cs_key != value)
                {
                    Oncs_keyChanging(value);
                    ReportPropertyChanging("cs_key");
                    _cs_key = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cs_key");
                    Oncs_keyChanged();
                }
            }
        }
        private global::System.String _cs_key;
        partial void Oncs_keyChanging(global::System.String value);
        partial void Oncs_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cs_value
        {
            get
            {
                return _cs_value;
            }
            set
            {
                Oncs_valueChanging(value);
                ReportPropertyChanging("cs_value");
                _cs_value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cs_value");
                Oncs_valueChanged();
            }
        }
        private global::System.String _cs_value;
        partial void Oncs_valueChanging(global::System.String value);
        partial void Oncs_valueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatTranslation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatTranslation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatTranslation object.
        /// </summary>
        /// <param name="ct_key">Initial value of the ct_key property.</param>
        /// <param name="l_id">Initial value of the l_id property.</param>
        /// <param name="ct_value">Initial value of the ct_value property.</param>
        /// <param name="ct_clientside">Initial value of the ct_clientside property.</param>
        public static ChatTranslation CreateChatTranslation(global::System.String ct_key, global::System.Int32 l_id, global::System.String ct_value, global::System.Boolean ct_clientside)
        {
            ChatTranslation chatTranslation = new ChatTranslation();
            chatTranslation.ct_key = ct_key;
            chatTranslation.l_id = l_id;
            chatTranslation.ct_value = ct_value;
            chatTranslation.ct_clientside = ct_clientside;
            return chatTranslation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ct_key
        {
            get
            {
                return _ct_key;
            }
            set
            {
                if (_ct_key != value)
                {
                    Onct_keyChanging(value);
                    ReportPropertyChanging("ct_key");
                    _ct_key = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ct_key");
                    Onct_keyChanged();
                }
            }
        }
        private global::System.String _ct_key;
        partial void Onct_keyChanging(global::System.String value);
        partial void Onct_keyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 l_id
        {
            get
            {
                return _l_id;
            }
            set
            {
                if (_l_id != value)
                {
                    Onl_idChanging(value);
                    ReportPropertyChanging("l_id");
                    _l_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("l_id");
                    Onl_idChanged();
                }
            }
        }
        private global::System.Int32 _l_id;
        partial void Onl_idChanging(global::System.Int32 value);
        partial void Onl_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ct_value
        {
            get
            {
                return _ct_value;
            }
            set
            {
                Onct_valueChanging(value);
                ReportPropertyChanging("ct_value");
                _ct_value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ct_value");
                Onct_valueChanged();
            }
        }
        private global::System.String _ct_value;
        partial void Onct_valueChanging(global::System.String value);
        partial void Onct_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ct_clientside
        {
            get
            {
                return _ct_clientside;
            }
            set
            {
                Onct_clientsideChanging(value);
                ReportPropertyChanging("ct_clientside");
                _ct_clientside = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ct_clientside");
                Onct_clientsideChanged();
            }
        }
        private global::System.Boolean _ct_clientside;
        partial void Onct_clientsideChanging(global::System.Boolean value);
        partial void Onct_clientsideChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="ChatUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatUser object.
        /// </summary>
        /// <param name="cu_id">Initial value of the cu_id property.</param>
        /// <param name="cu_username">Initial value of the cu_username property.</param>
        /// <param name="cu_begintime">Initial value of the cu_begintime property.</param>
        /// <param name="cu_lastactive">Initial value of the cu_lastactive property.</param>
        public static ChatUser CreateChatUser(global::System.Int32 cu_id, global::System.String cu_username, global::System.DateTime cu_begintime, global::System.DateTime cu_lastactive)
        {
            ChatUser chatUser = new ChatUser();
            chatUser.cu_id = cu_id;
            chatUser.cu_username = cu_username;
            chatUser.cu_begintime = cu_begintime;
            chatUser.cu_lastactive = cu_lastactive;
            return chatUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cu_id
        {
            get
            {
                return _cu_id;
            }
            set
            {
                if (_cu_id != value)
                {
                    Oncu_idChanging(value);
                    ReportPropertyChanging("cu_id");
                    _cu_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cu_id");
                    Oncu_idChanged();
                }
            }
        }
        private global::System.Int32 _cu_id;
        partial void Oncu_idChanging(global::System.Int32 value);
        partial void Oncu_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cu_username
        {
            get
            {
                return _cu_username;
            }
            set
            {
                Oncu_usernameChanging(value);
                ReportPropertyChanging("cu_username");
                _cu_username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cu_username");
                Oncu_usernameChanged();
            }
        }
        private global::System.String _cu_username;
        partial void Oncu_usernameChanging(global::System.String value);
        partial void Oncu_usernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cu_password
        {
            get
            {
                return _cu_password;
            }
            set
            {
                Oncu_passwordChanging(value);
                ReportPropertyChanging("cu_password");
                _cu_password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cu_password");
                Oncu_passwordChanged();
            }
        }
        private global::System.String _cu_password;
        partial void Oncu_passwordChanging(global::System.String value);
        partial void Oncu_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cu_displayname
        {
            get
            {
                return _cu_displayname;
            }
            set
            {
                Oncu_displaynameChanging(value);
                ReportPropertyChanging("cu_displayname");
                _cu_displayname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cu_displayname");
                Oncu_displaynameChanged();
            }
        }
        private global::System.String _cu_displayname;
        partial void Oncu_displaynameChanging(global::System.String value);
        partial void Oncu_displaynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cu_gender
        {
            get
            {
                return _cu_gender;
            }
            set
            {
                Oncu_genderChanging(value);
                ReportPropertyChanging("cu_gender");
                _cu_gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cu_gender");
                Oncu_genderChanged();
            }
        }
        private Nullable<global::System.Int32> _cu_gender;
        partial void Oncu_genderChanging(Nullable<global::System.Int32> value);
        partial void Oncu_genderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cu_begintime
        {
            get
            {
                return _cu_begintime;
            }
            set
            {
                Oncu_begintimeChanging(value);
                ReportPropertyChanging("cu_begintime");
                _cu_begintime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cu_begintime");
                Oncu_begintimeChanged();
            }
        }
        private global::System.DateTime _cu_begintime;
        partial void Oncu_begintimeChanging(global::System.DateTime value);
        partial void Oncu_begintimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cu_lastactive
        {
            get
            {
                return _cu_lastactive;
            }
            set
            {
                Oncu_lastactiveChanging(value);
                ReportPropertyChanging("cu_lastactive");
                _cu_lastactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cu_lastactive");
                Oncu_lastactiveChanged();
            }
        }
        private global::System.DateTime _cu_lastactive;
        partial void Oncu_lastactiveChanging(global::System.DateTime value);
        partial void Oncu_lastactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cu_ip
        {
            get
            {
                return _cu_ip;
            }
            set
            {
                Oncu_ipChanging(value);
                ReportPropertyChanging("cu_ip");
                _cu_ip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cu_ip");
                Oncu_ipChanged();
            }
        }
        private global::System.String _cu_ip;
        partial void Oncu_ipChanging(global::System.String value);
        partial void Oncu_ipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cu_lastactiveguid
        {
            get
            {
                return _cu_lastactiveguid;
            }
            set
            {
                Oncu_lastactiveguidChanging(value);
                ReportPropertyChanging("cu_lastactiveguid");
                _cu_lastactiveguid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cu_lastactiveguid");
                Oncu_lastactiveguidChanged();
            }
        }
        private global::System.String _cu_lastactiveguid;
        partial void Oncu_lastactiveguidChanging(global::System.String value);
        partial void Oncu_lastactiveguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cu_thumbimage
        {
            get
            {
                return _cu_thumbimage;
            }
            set
            {
                Oncu_thumbimageChanging(value);
                ReportPropertyChanging("cu_thumbimage");
                _cu_thumbimage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cu_thumbimage");
                Oncu_thumbimageChanged();
            }
        }
        private global::System.String _cu_thumbimage;
        partial void Oncu_thumbimageChanging(global::System.String value);
        partial void Oncu_thumbimageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatIgnoredUser")]
        public EntityCollection<ChatIgnoredUser> ChatIgnoredUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChatIgnoredUser>("huntableModel.FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatIgnoredUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChatIgnoredUser>("huntableModel.FK_ChatIgnoredUsers_ChatIgnoredUsers", "ChatIgnoredUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_ChatIgnoredUsers_ChatUsers", "ChatIgnoredUser")]
        public EntityCollection<ChatIgnoredUser> ChatIgnoredUsers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChatIgnoredUser>("huntableModel.FK_ChatIgnoredUsers_ChatUsers", "ChatIgnoredUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChatIgnoredUser>("huntableModel.FK_ChatIgnoredUsers_ChatUsers", "ChatIgnoredUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_ChatUsers", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("huntableModel.FK_User_ChatUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("huntableModel.FK_User_ChatUsers", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Company CreateCompany(global::System.Int32 id)
        {
            Company company = new Company();
            company.Id = id;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyWebsite
        {
            get
            {
                return _CompanyWebsite;
            }
            set
            {
                OnCompanyWebsiteChanging(value);
                ReportPropertyChanging("CompanyWebsite");
                _CompanyWebsite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyWebsite");
                OnCompanyWebsiteChanged();
            }
        }
        private global::System.String _CompanyWebsite;
        partial void OnCompanyWebsiteChanging(global::System.String value);
        partial void OnCompanyWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyEmail
        {
            get
            {
                return _CompanyEmail;
            }
            set
            {
                OnCompanyEmailChanging(value);
                ReportPropertyChanging("CompanyEmail");
                _CompanyEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyEmail");
                OnCompanyEmailChanged();
            }
        }
        private global::System.String _CompanyEmail;
        partial void OnCompanyEmailChanging(global::System.String value);
        partial void OnCompanyEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AgreeTerms
        {
            get
            {
                return _AgreeTerms;
            }
            set
            {
                OnAgreeTermsChanging(value);
                ReportPropertyChanging("AgreeTerms");
                _AgreeTerms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreeTerms");
                OnAgreeTermsChanged();
            }
        }
        private Nullable<global::System.Boolean> _AgreeTerms;
        partial void OnAgreeTermsChanging(Nullable<global::System.Boolean> value);
        partial void OnAgreeTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyLogoId
        {
            get
            {
                return _CompanyLogoId;
            }
            set
            {
                OnCompanyLogoIdChanging(value);
                ReportPropertyChanging("CompanyLogoId");
                _CompanyLogoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyLogoId");
                OnCompanyLogoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyLogoId;
        partial void OnCompanyLogoIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyLogoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyHeading
        {
            get
            {
                return _CompanyHeading;
            }
            set
            {
                OnCompanyHeadingChanging(value);
                ReportPropertyChanging("CompanyHeading");
                _CompanyHeading = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyHeading");
                OnCompanyHeadingChanged();
            }
        }
        private global::System.String _CompanyHeading;
        partial void OnCompanyHeadingChanging(global::System.String value);
        partial void OnCompanyHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyDescription
        {
            get
            {
                return _CompanyDescription;
            }
            set
            {
                OnCompanyDescriptionChanging(value);
                ReportPropertyChanging("CompanyDescription");
                _CompanyDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyDescription");
                OnCompanyDescriptionChanged();
            }
        }
        private global::System.String _CompanyDescription;
        partial void OnCompanyDescriptionChanging(global::System.String value);
        partial void OnCompanyDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyIndustry
        {
            get
            {
                return _CompanyIndustry;
            }
            set
            {
                OnCompanyIndustryChanging(value);
                ReportPropertyChanging("CompanyIndustry");
                _CompanyIndustry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyIndustry");
                OnCompanyIndustryChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyIndustry;
        partial void OnCompanyIndustryChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoofEmployees
        {
            get
            {
                return _NoofEmployees;
            }
            set
            {
                OnNoofEmployeesChanging(value);
                ReportPropertyChanging("NoofEmployees");
                _NoofEmployees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoofEmployees");
                OnNoofEmployeesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoofEmployees;
        partial void OnNoofEmployeesChanging(Nullable<global::System.Int32> value);
        partial void OnNoofEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNo
        {
            get
            {
                return _PhoneNo;
            }
            set
            {
                OnPhoneNoChanging(value);
                ReportPropertyChanging("PhoneNo");
                _PhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNo");
                OnPhoneNoChanged();
            }
        }
        private global::System.String _PhoneNo;
        partial void OnPhoneNoChanging(global::System.String value);
        partial void OnPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAdress
        {
            get
            {
                return _EmailAdress;
            }
            set
            {
                OnEmailAdressChanging(value);
                ReportPropertyChanging("EmailAdress");
                _EmailAdress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAdress");
                OnEmailAdressChanged();
            }
        }
        private global::System.String _EmailAdress;
        partial void OnEmailAdressChanging(global::System.String value);
        partial void OnEmailAdressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TownCity
        {
            get
            {
                return _TownCity;
            }
            set
            {
                OnTownCityChanging(value);
                ReportPropertyChanging("TownCity");
                _TownCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TownCity");
                OnTownCityChanged();
            }
        }
        private global::System.String _TownCity;
        partial void OnTownCityChanging(global::System.String value);
        partial void OnTownCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortfolioImageId
        {
            get
            {
                return _PortfolioImageId;
            }
            set
            {
                OnPortfolioImageIdChanging(value);
                ReportPropertyChanging("PortfolioImageId");
                _PortfolioImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioImageId");
                OnPortfolioImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PortfolioImageId;
        partial void OnPortfolioImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnPortfolioImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioDescription
        {
            get
            {
                return _PortfolioDescription;
            }
            set
            {
                OnPortfolioDescriptionChanging(value);
                ReportPropertyChanging("PortfolioDescription");
                _PortfolioDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioDescription");
                OnPortfolioDescriptionChanged();
            }
        }
        private global::System.String _PortfolioDescription;
        partial void OnPortfolioDescriptionChanging(global::System.String value);
        partial void OnPortfolioDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoUrl
        {
            get
            {
                return _VideoUrl;
            }
            set
            {
                OnVideoUrlChanging(value);
                ReportPropertyChanging("VideoUrl");
                _VideoUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoUrl");
                OnVideoUrlChanged();
            }
        }
        private global::System.String _VideoUrl;
        partial void OnVideoUrlChanging(global::System.String value);
        partial void OnVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductImageId
        {
            get
            {
                return _ProductImageId;
            }
            set
            {
                OnProductImageIdChanging(value);
                ReportPropertyChanging("ProductImageId");
                _ProductImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductImageId");
                OnProductImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductImageId;
        partial void OnProductImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductDescription
        {
            get
            {
                return _ProductDescription;
            }
            set
            {
                OnProductDescriptionChanging(value);
                ReportPropertyChanging("ProductDescription");
                _ProductDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductDescription");
                OnProductDescriptionChanged();
            }
        }
        private global::System.String _ProductDescription;
        partial void OnProductDescriptionChanging(global::System.String value);
        partial void OnProductDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Articletitle
        {
            get
            {
                return _Articletitle;
            }
            set
            {
                OnArticletitleChanging(value);
                ReportPropertyChanging("Articletitle");
                _Articletitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Articletitle");
                OnArticletitleChanged();
            }
        }
        private global::System.String _Articletitle;
        partial void OnArticletitleChanging(global::System.String value);
        partial void OnArticletitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArticleDescritption
        {
            get
            {
                return _ArticleDescritption;
            }
            set
            {
                OnArticleDescritptionChanging(value);
                ReportPropertyChanging("ArticleDescritption");
                _ArticleDescritption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArticleDescritption");
                OnArticleDescritptionChanged();
            }
        }
        private global::System.String _ArticleDescritption;
        partial void OnArticleDescritptionChanging(global::System.String value);
        partial void OnArticleDescritptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyCarrersLink
        {
            get
            {
                return _CompanyCarrersLink;
            }
            set
            {
                OnCompanyCarrersLinkChanging(value);
                ReportPropertyChanging("CompanyCarrersLink");
                _CompanyCarrersLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyCarrersLink");
                OnCompanyCarrersLinkChanged();
            }
        }
        private global::System.String _CompanyCarrersLink;
        partial void OnCompanyCarrersLinkChanging(global::System.String value);
        partial void OnCompanyCarrersLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyBlogLink
        {
            get
            {
                return _CompanyBlogLink;
            }
            set
            {
                OnCompanyBlogLinkChanging(value);
                ReportPropertyChanging("CompanyBlogLink");
                _CompanyBlogLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyBlogLink");
                OnCompanyBlogLinkChanged();
            }
        }
        private global::System.String _CompanyBlogLink;
        partial void OnCompanyBlogLinkChanging(global::System.String value);
        partial void OnCompanyBlogLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                OnUseridChanging(value);
                ReportPropertyChanging("Userid");
                _Userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Userid");
                OnUseridChanged();
            }
        }
        private Nullable<global::System.Int32> _Userid;
        partial void OnUseridChanging(Nullable<global::System.Int32> value);
        partial void OnUseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVerified
        {
            get
            {
                return _IsVerified;
            }
            set
            {
                OnIsVerifiedChanging(value);
                ReportPropertyChanging("IsVerified");
                _IsVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerified");
                OnIsVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVerified;
        partial void OnIsVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Postcode
        {
            get
            {
                return _Postcode;
            }
            set
            {
                OnPostcodeChanging(value);
                ReportPropertyChanging("Postcode");
                _Postcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Postcode");
                OnPostcodeChanged();
            }
        }
        private global::System.String _Postcode;
        partial void OnPostcodeChanging(global::System.String value);
        partial void OnPostcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Company_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Company_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Company_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_Company_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterEmployees", "MasterEmployee")]
        public MasterEmployee MasterEmployee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees", "MasterEmployee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees", "MasterEmployee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterEmployee> MasterEmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees", "MasterEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees", "MasterEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterEmployees1", "MasterEmployee")]
        public MasterEmployee MasterEmployee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees1", "MasterEmployee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees1", "MasterEmployee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterEmployee> MasterEmployee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees1", "MasterEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterEmployee>("huntableModel.FK_Company_MasterEmployees1", "MasterEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterIndustry", "MasterIndustry")]
        public MasterIndustry MasterIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_Company_MasterIndustry", "MasterIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_Company_MasterIndustry", "MasterIndustry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIndustry> MasterIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_Company_MasterIndustry", "MasterIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIndustry>("huntableModel.FK_Company_MasterIndustry", "MasterIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyArticle_Company1", "CompanyArticle")]
        public EntityCollection<CompanyArticle> CompanyArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyArticle>("huntableModel.FK_CompanyArticle_Company1", "CompanyArticle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyArticle>("huntableModel.FK_CompanyArticle_Company1", "CompanyArticle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyPortfolio_Company", "CompanyPortfolio")]
        public EntityCollection<CompanyPortfolio> CompanyPortfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPortfolio>("huntableModel.FK_CompanyPortfolio_Company", "CompanyPortfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPortfolio>("huntableModel.FK_CompanyPortfolio_Company", "CompanyPortfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyPortfolio_Company1", "CompanyPortfolio")]
        public EntityCollection<CompanyPortfolio> CompanyPortfolios1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPortfolio>("huntableModel.FK_CompanyPortfolio_Company1", "CompanyPortfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPortfolio>("huntableModel.FK_CompanyPortfolio_Company1", "CompanyPortfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyProducts_Company", "CompanyProduct")]
        public EntityCollection<CompanyProduct> CompanyProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyProduct>("huntableModel.FK_CompanyProducts_Company", "CompanyProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyProduct>("huntableModel.FK_CompanyProducts_Company", "CompanyProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyProfileVisitedHistory_Company1", "CompanyProfileVisitedHistory")]
        public EntityCollection<CompanyProfileVisitedHistory> CompanyProfileVisitedHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company1", "CompanyProfileVisitedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company1", "CompanyProfileVisitedHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyVideo_Company", "CompanyVideo")]
        public EntityCollection<CompanyVideo> CompanyVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyVideo>("huntableModel.FK_CompanyVideo_Company", "CompanyVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyVideo>("huntableModel.FK_CompanyVideo_Company", "CompanyVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCompaniesFollwers_Company", "PreferredFeedUserCompaniesFollwer")]
        public EntityCollection<PreferredFeedUserCompaniesFollwer> PreferredFeedUserCompaniesFollwers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserCompaniesFollwer>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_Company", "PreferredFeedUserCompaniesFollwer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserCompaniesFollwer>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_Company", "PreferredFeedUserCompaniesFollwer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserCompany_Company", "UserCompany")]
        public EntityCollection<UserCompany> UserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCompany>("huntableModel.FK_UserCompany_Company", "UserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCompany>("huntableModel.FK_UserCompany_Company", "UserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Company_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Company_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Company_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_Company_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="CompanyArticle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyArticle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyArticle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CompanyArticle CreateCompanyArticle(global::System.Int32 id)
        {
            CompanyArticle companyArticle = new CompanyArticle();
            companyArticle.Id = id;
            return companyArticle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArticleDescription
        {
            get
            {
                return _ArticleDescription;
            }
            set
            {
                OnArticleDescriptionChanging(value);
                ReportPropertyChanging("ArticleDescription");
                _ArticleDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArticleDescription");
                OnArticleDescriptionChanged();
            }
        }
        private global::System.String _ArticleDescription;
        partial void OnArticleDescriptionChanging(global::System.String value);
        partial void OnArticleDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Article
        {
            get
            {
                return _Article;
            }
            set
            {
                OnArticleChanging(value);
                ReportPropertyChanging("Article");
                _Article = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Article");
                OnArticleChanged();
            }
        }
        private global::System.String _Article;
        partial void OnArticleChanging(global::System.String value);
        partial void OnArticleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyArticle_Company1", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyArticle_Company1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyArticle_Company1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyArticle_Company1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_CompanyArticle_Company1", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="CompanyPortfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyPortfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPortfolio object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CompanyPortfolio CreateCompanyPortfolio(global::System.Int32 id)
        {
            CompanyPortfolio companyPortfolio = new CompanyPortfolio();
            companyPortfolio.Id = id;
            return companyPortfolio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortfolioImageid
        {
            get
            {
                return _PortfolioImageid;
            }
            set
            {
                OnPortfolioImageidChanging(value);
                ReportPropertyChanging("PortfolioImageid");
                _PortfolioImageid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioImageid");
                OnPortfolioImageidChanged();
            }
        }
        private Nullable<global::System.Int32> _PortfolioImageid;
        partial void OnPortfolioImageidChanging(Nullable<global::System.Int32> value);
        partial void OnPortfolioImageidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioDescription
        {
            get
            {
                return _PortfolioDescription;
            }
            set
            {
                OnPortfolioDescriptionChanging(value);
                ReportPropertyChanging("PortfolioDescription");
                _PortfolioDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioDescription");
                OnPortfolioDescriptionChanged();
            }
        }
        private global::System.String _PortfolioDescription;
        partial void OnPortfolioDescriptionChanging(global::System.String value);
        partial void OnPortfolioDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyPortfolio_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyPortfolio_Company1", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_CompanyPortfolio_Company1", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyPhoto_CompanyPortfolio", "FeedUserCompanyPhoto")]
        public EntityCollection<FeedUserCompanyPhoto> FeedUserCompanyPhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserCompanyPhoto>("huntableModel.FK_FeedUserCompanyPhoto_CompanyPortfolio", "FeedUserCompanyPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserCompanyPhoto>("huntableModel.FK_FeedUserCompanyPhoto_CompanyPortfolio", "FeedUserCompanyPhoto", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="CompanyProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyProduct object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CompanyProduct CreateCompanyProduct(global::System.Int32 id)
        {
            CompanyProduct companyProduct = new CompanyProduct();
            companyProduct.Id = id;
            return companyProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComapnyId
        {
            get
            {
                return _ComapnyId;
            }
            set
            {
                OnComapnyIdChanging(value);
                ReportPropertyChanging("ComapnyId");
                _ComapnyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComapnyId");
                OnComapnyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ComapnyId;
        partial void OnComapnyIdChanging(Nullable<global::System.Int32> value);
        partial void OnComapnyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductImageId
        {
            get
            {
                return _ProductImageId;
            }
            set
            {
                OnProductImageIdChanging(value);
                ReportPropertyChanging("ProductImageId");
                _ProductImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductImageId");
                OnProductImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductImageId;
        partial void OnProductImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductDescription
        {
            get
            {
                return _ProductDescription;
            }
            set
            {
                OnProductDescriptionChanging(value);
                ReportPropertyChanging("ProductDescription");
                _ProductDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductDescription");
                OnProductDescriptionChanged();
            }
        }
        private global::System.String _ProductDescription;
        partial void OnProductDescriptionChanging(global::System.String value);
        partial void OnProductDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyProducts_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyProducts_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyProducts_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyProducts_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_CompanyProducts_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyProduct_CompanyProducts", "FeedUserCompanyProduct")]
        public EntityCollection<FeedUserCompanyProduct> FeedUserCompanyProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserCompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_CompanyProducts", "FeedUserCompanyProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserCompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_CompanyProducts", "FeedUserCompanyProduct", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="CompanyProfileVisitedHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyProfileVisitedHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyProfileVisitedHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        public static CompanyProfileVisitedHistory CreateCompanyProfileVisitedHistory(global::System.Int32 id, global::System.Int32 companyId, global::System.DateTime date, global::System.String iPAddress)
        {
            CompanyProfileVisitedHistory companyProfileVisitedHistory = new CompanyProfileVisitedHistory();
            companyProfileVisitedHistory.Id = id;
            companyProfileVisitedHistory.CompanyId = companyId;
            companyProfileVisitedHistory.Date = date;
            companyProfileVisitedHistory.IPAddress = iPAddress;
            return companyProfileVisitedHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VisitorCompanyId
        {
            get
            {
                return _VisitorCompanyId;
            }
            set
            {
                OnVisitorCompanyIdChanging(value);
                ReportPropertyChanging("VisitorCompanyId");
                _VisitorCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisitorCompanyId");
                OnVisitorCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VisitorCompanyId;
        partial void OnVisitorCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnVisitorCompanyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyProfileVisitedHistory_Company1", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyProfileVisitedHistory_Company1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyProfileVisitedHistory_Company1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyProfileVisitedHistory_Company1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_CompanyProfileVisitedHistory_Company1", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory1")]
        public CompanyProfileVisitedHistory CompanyProfileVisitedHistory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyProfileVisitedHistory> CompanyProfileVisitedHistory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory")]
        public CompanyProfileVisitedHistory CompanyProfileVisitedHistory2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyProfileVisitedHistory> CompanyProfileVisitedHistory2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyProfileVisitedHistory>("huntableModel.FK_CompanyProfileVisitedHistory_Company", "CompanyProfileVisitedHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="CompanyVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyVideo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CompanyVideo CreateCompanyVideo(global::System.Int32 id)
        {
            CompanyVideo companyVideo = new CompanyVideo();
            companyVideo.Id = id;
            return companyVideo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoUrl
        {
            get
            {
                return _VideoUrl;
            }
            set
            {
                OnVideoUrlChanging(value);
                ReportPropertyChanging("VideoUrl");
                _VideoUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoUrl");
                OnVideoUrlChanged();
            }
        }
        private global::System.String _VideoUrl;
        partial void OnVideoUrlChanging(global::System.String value);
        partial void OnVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDatetime
        {
            get
            {
                return _CreatedDatetime;
            }
            set
            {
                OnCreatedDatetimeChanging(value);
                ReportPropertyChanging("CreatedDatetime");
                _CreatedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDatetime");
                OnCreatedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDatetime;
        partial void OnCreatedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDatetimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_CompanyVideo_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyVideo_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyVideo_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_CompanyVideo_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_CompanyVideo_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyVideo_CompanyVideo", "FeedUserCompanyVideo")]
        public EntityCollection<FeedUserCompanyVideo> FeedUserCompanyVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserCompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_CompanyVideo", "FeedUserCompanyVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserCompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_CompanyVideo", "FeedUserCompanyVideo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="CustomInvitationDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomInvitationDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomInvitationDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="photoFileStoreId">Initial value of the PhotoFileStoreId property.</param>
        public static CustomInvitationDetail CreateCustomInvitationDetail(global::System.Int32 id, global::System.String message, global::System.Int32 photoFileStoreId)
        {
            CustomInvitationDetail customInvitationDetail = new CustomInvitationDetail();
            customInvitationDetail.Id = id;
            customInvitationDetail.Message = message;
            customInvitationDetail.PhotoFileStoreId = photoFileStoreId;
            return customInvitationDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoFileStoreId
        {
            get
            {
                return _PhotoFileStoreId;
            }
            set
            {
                OnPhotoFileStoreIdChanging(value);
                ReportPropertyChanging("PhotoFileStoreId");
                _PhotoFileStoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoFileStoreId");
                OnPhotoFileStoreIdChanged();
            }
        }
        private global::System.Int32 _PhotoFileStoreId;
        partial void OnPhotoFileStoreIdChanging(global::System.Int32 value);
        partial void OnPhotoFileStoreIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Invitation_CustomInvitationDetails", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("huntableModel.FK_Invitation_CustomInvitationDetails", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("huntableModel.FK_Invitation_CustomInvitationDetails", "Invitation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="EducationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EducationHistory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="institution">Initial value of the Institution property.</param>
        /// <param name="isSchool">Initial value of the IsSchool property.</param>
        public static EducationHistory CreateEducationHistory(global::System.Int32 id, global::System.Int32 userId, global::System.String institution, global::System.Boolean isSchool)
        {
            EducationHistory educationHistory = new EducationHistory();
            educationHistory.ID = id;
            educationHistory.UserId = userId;
            educationHistory.Institution = institution;
            educationHistory.IsSchool = isSchool;
            return educationHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Institution
        {
            get
            {
                return _Institution;
            }
            set
            {
                OnInstitutionChanging(value);
                ReportPropertyChanging("Institution");
                _Institution = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Institution");
                OnInstitutionChanged();
            }
        }
        private global::System.String _Institution;
        partial void OnInstitutionChanging(global::System.String value);
        partial void OnInstitutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Degree
        {
            get
            {
                return _Degree;
            }
            set
            {
                OnDegreeChanging(value);
                ReportPropertyChanging("Degree");
                _Degree = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Degree");
                OnDegreeChanged();
            }
        }
        private global::System.String _Degree;
        partial void OnDegreeChanging(global::System.String value);
        partial void OnDegreeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSchool
        {
            get
            {
                return _IsSchool;
            }
            set
            {
                OnIsSchoolChanging(value);
                ReportPropertyChanging("IsSchool");
                _IsSchool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSchool");
                OnIsSchoolChanged();
            }
        }
        private global::System.Boolean _IsSchool;
        partial void OnIsSchoolChanging(global::System.Boolean value);
        partial void OnIsSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromMonthID
        {
            get
            {
                return _FromMonthID;
            }
            set
            {
                OnFromMonthIDChanging(value);
                ReportPropertyChanging("FromMonthID");
                _FromMonthID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromMonthID");
                OnFromMonthIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromMonthID;
        partial void OnFromMonthIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromYearID
        {
            get
            {
                return _FromYearID;
            }
            set
            {
                OnFromYearIDChanging(value);
                ReportPropertyChanging("FromYearID");
                _FromYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromYearID");
                OnFromYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromYearID;
        partial void OnFromYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToMonthID
        {
            get
            {
                return _ToMonthID;
            }
            set
            {
                OnToMonthIDChanging(value);
                ReportPropertyChanging("ToMonthID");
                _ToMonthID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToMonthID");
                OnToMonthIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToMonthID;
        partial void OnToMonthIDChanging(Nullable<global::System.Int32> value);
        partial void OnToMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToYearID
        {
            get
            {
                return _ToYearID;
            }
            set
            {
                OnToYearIDChanging(value);
                ReportPropertyChanging("ToYearID");
                _ToYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToYearID");
                OnToYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToYearID;
        partial void OnToYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnToYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TownOrCity
        {
            get
            {
                return _TownOrCity;
            }
            set
            {
                OnTownOrCityChanging(value);
                ReportPropertyChanging("TownOrCity");
                _TownOrCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TownOrCity");
                OnTownOrCityChanged();
            }
        }
        private global::System.String _TownOrCity;
        partial void OnTownOrCityChanging(global::System.String value);
        partial void OnTownOrCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CurrentEducation
        {
            get
            {
                return _CurrentEducation;
            }
            set
            {
                OnCurrentEducationChanging(value);
                ReportPropertyChanging("CurrentEducation");
                _CurrentEducation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentEducation");
                OnCurrentEducationChanged();
            }
        }
        private Nullable<global::System.Boolean> _CurrentEducation;
        partial void OnCurrentEducationChanging(Nullable<global::System.Boolean> value);
        partial void OnCurrentEducationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_EducationHistory_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_EducationHistory_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_EducationHistory_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_EducationHistory_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Month", "MasterMonth")]
        public MasterMonth MasterMonth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month", "MasterMonth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month", "MasterMonth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMonth> MasterMonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month", "MasterMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month", "MasterMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Month1", "MasterMonth")]
        public MasterMonth MasterMonth1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month1", "MasterMonth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month1", "MasterMonth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMonth> MasterMonth1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month1", "MasterMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMonth>("huntableModel.FK_EducationHistory_Month1", "MasterMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Year", "MasterYear")]
        public MasterYear MasterYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year", "MasterYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year", "MasterYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterYear> MasterYearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year", "MasterYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year", "MasterYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Year1", "MasterYear")]
        public MasterYear MasterYear1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year1", "MasterYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year1", "MasterYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterYear> MasterYear1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year1", "MasterYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterYear>("huntableModel.FK_EducationHistory_Year1", "MasterYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEducationSchool_EducationHistory", "FeedUserEducationSchool")]
        public EntityCollection<FeedUserEducationSchool> FeedUserEducationSchools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserEducationSchool>("huntableModel.FK_FeedUserEducationSchool_EducationHistory", "FeedUserEducationSchool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserEducationSchool>("huntableModel.FK_FeedUserEducationSchool_EducationHistory", "FeedUserEducationSchool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_EducationHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_EducationHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_EducationHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_EducationHistory_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="EmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="templateText">Initial value of the TemplateText property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static EmailTemplate CreateEmailTemplate(global::System.Int32 id, global::System.String name, global::System.String description, global::System.String templateText, global::System.String subject, global::System.Boolean isActive)
        {
            EmailTemplate emailTemplate = new EmailTemplate();
            emailTemplate.Id = id;
            emailTemplate.Name = name;
            emailTemplate.Description = description;
            emailTemplate.TemplateText = templateText;
            emailTemplate.Subject = subject;
            emailTemplate.IsActive = isActive;
            return emailTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TemplateText
        {
            get
            {
                return _TemplateText;
            }
            set
            {
                OnTemplateTextChanging(value);
                ReportPropertyChanging("TemplateText");
                _TemplateText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TemplateText");
                OnTemplateTextChanged();
            }
        }
        private global::System.String _TemplateText;
        partial void OnTemplateTextChanging(global::System.String value);
        partial void OnTemplateTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="EmploymentHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmploymentHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmploymentHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isCurrent">Initial value of the IsCurrent property.</param>
        public static EmploymentHistory CreateEmploymentHistory(global::System.Int32 id, global::System.Int32 userId, global::System.Boolean isCurrent)
        {
            EmploymentHistory employmentHistory = new EmploymentHistory();
            employmentHistory.Id = id;
            employmentHistory.UserId = userId;
            employmentHistory.IsCurrent = isCurrent;
            return employmentHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromMonthID
        {
            get
            {
                return _FromMonthID;
            }
            set
            {
                OnFromMonthIDChanging(value);
                ReportPropertyChanging("FromMonthID");
                _FromMonthID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromMonthID");
                OnFromMonthIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromMonthID;
        partial void OnFromMonthIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromYearID
        {
            get
            {
                return _FromYearID;
            }
            set
            {
                OnFromYearIDChanging(value);
                ReportPropertyChanging("FromYearID");
                _FromYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromYearID");
                OnFromYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromYearID;
        partial void OnFromYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToMonthID
        {
            get
            {
                return _ToMonthID;
            }
            set
            {
                OnToMonthIDChanging(value);
                ReportPropertyChanging("ToMonthID");
                _ToMonthID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToMonthID");
                OnToMonthIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToMonthID;
        partial void OnToMonthIDChanging(Nullable<global::System.Int32> value);
        partial void OnToMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToYearID
        {
            get
            {
                return _ToYearID;
            }
            set
            {
                OnToYearIDChanging(value);
                ReportPropertyChanging("ToYearID");
                _ToYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToYearID");
                OnToYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToYearID;
        partial void OnToYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnToYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EmploymentPresent
        {
            get
            {
                return _EmploymentPresent;
            }
            set
            {
                OnEmploymentPresentChanging(value);
                ReportPropertyChanging("EmploymentPresent");
                _EmploymentPresent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmploymentPresent");
                OnEmploymentPresentChanged();
            }
        }
        private Nullable<global::System.Boolean> _EmploymentPresent;
        partial void OnEmploymentPresentChanging(Nullable<global::System.Boolean> value);
        partial void OnEmploymentPresentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractId
        {
            get
            {
                return _ContractId;
            }
            set
            {
                OnContractIdChanging(value);
                ReportPropertyChanging("ContractId");
                _ContractId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractId");
                OnContractIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractId;
        partial void OnContractIdChanging(Nullable<global::System.Int32> value);
        partial void OnContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HoursId
        {
            get
            {
                return _HoursId;
            }
            set
            {
                OnHoursIdChanging(value);
                ReportPropertyChanging("HoursId");
                _HoursId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoursId");
                OnHoursIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HoursId;
        partial void OnHoursIdChanging(Nullable<global::System.Int32> value);
        partial void OnHoursIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentModeId
        {
            get
            {
                return _PaymentModeId;
            }
            set
            {
                OnPaymentModeIdChanging(value);
                ReportPropertyChanging("PaymentModeId");
                _PaymentModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentModeId");
                OnPaymentModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentModeId;
        partial void OnPaymentModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AmountCurrencyId
        {
            get
            {
                return _AmountCurrencyId;
            }
            set
            {
                OnAmountCurrencyIdChanging(value);
                ReportPropertyChanging("AmountCurrencyId");
                _AmountCurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountCurrencyId");
                OnAmountCurrencyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AmountCurrencyId;
        partial void OnAmountCurrencyIdChanging(Nullable<global::System.Int32> value);
        partial void OnAmountCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrent
        {
            get
            {
                return _IsCurrent;
            }
            set
            {
                OnIsCurrentChanging(value);
                ReportPropertyChanging("IsCurrent");
                _IsCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrent");
                OnIsCurrentChanged();
            }
        }
        private global::System.Boolean _IsCurrent;
        partial void OnIsCurrentChanging(global::System.Boolean value);
        partial void OnIsCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryId;
        partial void OnIndustryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SkillId;
        partial void OnSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_CurrencyType", "MasterCurrencyType")]
        public MasterCurrencyType MasterCurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_EmploymentHistory_CurrencyType", "MasterCurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_EmploymentHistory_CurrencyType", "MasterCurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCurrencyType> MasterCurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_EmploymentHistory_CurrencyType", "MasterCurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCurrencyType>("huntableModel.FK_EmploymentHistory_CurrencyType", "MasterCurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Hours", "MasterHour")]
        public MasterHour MasterHour
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterHour>("huntableModel.FK_EmploymentHistory_Hours", "MasterHour").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterHour>("huntableModel.FK_EmploymentHistory_Hours", "MasterHour").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterHour> MasterHourReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterHour>("huntableModel.FK_EmploymentHistory_Hours", "MasterHour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterHour>("huntableModel.FK_EmploymentHistory_Hours", "MasterHour", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterCompany", "MasterCompany")]
        public MasterCompany MasterCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_EmploymentHistory_MasterCompany", "MasterCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_EmploymentHistory_MasterCompany", "MasterCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCompany> MasterCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_EmploymentHistory_MasterCompany", "MasterCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCompany>("huntableModel.FK_EmploymentHistory_MasterCompany", "MasterCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_EmploymentHistory_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_EmploymentHistory_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_EmploymentHistory_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_EmploymentHistory_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterIndustry", "MasterIndustry")]
        public MasterIndustry MasterIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_EmploymentHistory_MasterIndustry", "MasterIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_EmploymentHistory_MasterIndustry", "MasterIndustry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIndustry> MasterIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_EmploymentHistory_MasterIndustry", "MasterIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIndustry>("huntableModel.FK_EmploymentHistory_MasterIndustry", "MasterIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterLevel", "MasterLevel")]
        public MasterLevel MasterLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLevel>("huntableModel.FK_EmploymentHistory_MasterLevel", "MasterLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLevel>("huntableModel.FK_EmploymentHistory_MasterLevel", "MasterLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterLevel> MasterLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLevel>("huntableModel.FK_EmploymentHistory_MasterLevel", "MasterLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterLevel>("huntableModel.FK_EmploymentHistory_MasterLevel", "MasterLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Month", "MasterMonth")]
        public MasterMonth MasterMonth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month", "MasterMonth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month", "MasterMonth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMonth> MasterMonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month", "MasterMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month", "MasterMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Month1", "MasterMonth")]
        public MasterMonth MasterMonth1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month1", "MasterMonth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month1", "MasterMonth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMonth> MasterMonth1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month1", "MasterMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMonth>("huntableModel.FK_EmploymentHistory_Month1", "MasterMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_PaymentType", "MasterPaymentType")]
        public MasterPaymentType MasterPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPaymentType>("huntableModel.FK_EmploymentHistory_PaymentType", "MasterPaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPaymentType>("huntableModel.FK_EmploymentHistory_PaymentType", "MasterPaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterPaymentType> MasterPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterPaymentType>("huntableModel.FK_EmploymentHistory_PaymentType", "MasterPaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterPaymentType>("huntableModel.FK_EmploymentHistory_PaymentType", "MasterPaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Year", "MasterYear")]
        public MasterYear MasterYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year", "MasterYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year", "MasterYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterYear> MasterYearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year", "MasterYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year", "MasterYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Year1", "MasterYear")]
        public MasterYear MasterYear1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year1", "MasterYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year1", "MasterYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterYear> MasterYear1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year1", "MasterYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterYear>("huntableModel.FK_EmploymentHistory_Year1", "MasterYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistoryAchievement")]
        public EntityCollection<EmploymentHistoryAchievement> EmploymentHistoryAchievements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistoryAchievement>("huntableModel.FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistoryAchievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistoryAchievement>("huntableModel.FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistoryAchievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistoryPortfolio")]
        public EntityCollection<EmploymentHistoryPortfolio> EmploymentHistoryPortfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistoryPortfolio>("huntableModel.FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistoryPortfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistoryPortfolio>("huntableModel.FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistoryPortfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistoryVideo")]
        public EntityCollection<EmploymentHistoryVideo> EmploymentHistoryVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistoryVideo>("huntableModel.FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistoryVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistoryVideo>("huntableModel.FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistoryVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEmployementHistory_EmploymentHistory", "FeedUserEmployementHistory")]
        public EntityCollection<FeedUserEmployementHistory> FeedUserEmployementHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserEmployementHistory>("huntableModel.FK_FeedUserEmployementHistory_EmploymentHistory", "FeedUserEmployementHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserEmployementHistory>("huntableModel.FK_FeedUserEmployementHistory_EmploymentHistory", "FeedUserEmployementHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEmploymentSkill_EmploymentHistory", "UserEmploymentSkill")]
        public EntityCollection<UserEmploymentSkill> UserEmploymentSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEmploymentSkill>("huntableModel.FK_UserEmploymentSkill_EmploymentHistory", "UserEmploymentSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEmploymentSkill>("huntableModel.FK_UserEmploymentSkill_EmploymentHistory", "UserEmploymentSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEndorseList_EmploymentHistory", "UserEndorseList")]
        public EntityCollection<UserEndorseList> UserEndorseLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEndorseList>("huntableModel.FK_UserEndorseList_EmploymentHistory", "UserEndorseList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEndorseList>("huntableModel.FK_UserEndorseList_EmploymentHistory", "UserEndorseList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_EmploymentHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_EmploymentHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_EmploymentHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_EmploymentHistory_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="EmploymentHistoryAchievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmploymentHistoryAchievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmploymentHistoryAchievement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emplementHistoryId">Initial value of the EmplementHistoryId property.</param>
        public static EmploymentHistoryAchievement CreateEmploymentHistoryAchievement(global::System.Int32 id, global::System.Int32 emplementHistoryId)
        {
            EmploymentHistoryAchievement employmentHistoryAchievement = new EmploymentHistoryAchievement();
            employmentHistoryAchievement.Id = id;
            employmentHistoryAchievement.EmplementHistoryId = emplementHistoryId;
            return employmentHistoryAchievement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmplementHistoryId
        {
            get
            {
                return _EmplementHistoryId;
            }
            set
            {
                OnEmplementHistoryIdChanging(value);
                ReportPropertyChanging("EmplementHistoryId");
                _EmplementHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmplementHistoryId");
                OnEmplementHistoryIdChanged();
            }
        }
        private global::System.Int32 _EmplementHistoryId;
        partial void OnEmplementHistoryIdChanging(global::System.Int32 value);
        partial void OnEmplementHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistory")]
        public EmploymentHistory EmploymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistory> EmploymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryAchievement_EmploymentHistory", "EmploymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="EmploymentHistoryPortfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmploymentHistoryPortfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmploymentHistoryPortfolio object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emplementHistoryId">Initial value of the EmplementHistoryId property.</param>
        /// <param name="fileId">Initial value of the FileId property.</param>
        public static EmploymentHistoryPortfolio CreateEmploymentHistoryPortfolio(global::System.Int32 id, global::System.Int32 emplementHistoryId, global::System.Int32 fileId)
        {
            EmploymentHistoryPortfolio employmentHistoryPortfolio = new EmploymentHistoryPortfolio();
            employmentHistoryPortfolio.Id = id;
            employmentHistoryPortfolio.EmplementHistoryId = emplementHistoryId;
            employmentHistoryPortfolio.FileId = fileId;
            return employmentHistoryPortfolio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmplementHistoryId
        {
            get
            {
                return _EmplementHistoryId;
            }
            set
            {
                OnEmplementHistoryIdChanging(value);
                ReportPropertyChanging("EmplementHistoryId");
                _EmplementHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmplementHistoryId");
                OnEmplementHistoryIdChanged();
            }
        }
        private global::System.Int32 _EmplementHistoryId;
        partial void OnEmplementHistoryIdChanging(global::System.Int32 value);
        partial void OnEmplementHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistory")]
        public EmploymentHistory EmploymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistory> EmploymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryPortfolio_EmploymentHistory", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "FeedUserPorfolioPhoto")]
        public EntityCollection<FeedUserPorfolioPhoto> FeedUserPorfolioPhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserPorfolioPhoto>("huntableModel.FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "FeedUserPorfolioPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserPorfolioPhoto>("huntableModel.FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "FeedUserPorfolioPhoto", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="EmploymentHistoryVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmploymentHistoryVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmploymentHistoryVideo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emplementHistoryId">Initial value of the EmplementHistoryId property.</param>
        /// <param name="videoURL">Initial value of the VideoURL property.</param>
        public static EmploymentHistoryVideo CreateEmploymentHistoryVideo(global::System.Int32 id, global::System.Int32 emplementHistoryId, global::System.String videoURL)
        {
            EmploymentHistoryVideo employmentHistoryVideo = new EmploymentHistoryVideo();
            employmentHistoryVideo.Id = id;
            employmentHistoryVideo.EmplementHistoryId = emplementHistoryId;
            employmentHistoryVideo.VideoURL = videoURL;
            return employmentHistoryVideo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmplementHistoryId
        {
            get
            {
                return _EmplementHistoryId;
            }
            set
            {
                OnEmplementHistoryIdChanging(value);
                ReportPropertyChanging("EmplementHistoryId");
                _EmplementHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmplementHistoryId");
                OnEmplementHistoryIdChanged();
            }
        }
        private global::System.Int32 _EmplementHistoryId;
        partial void OnEmplementHistoryIdChanging(global::System.Int32 value);
        partial void OnEmplementHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VideoURL
        {
            get
            {
                return _VideoURL;
            }
            set
            {
                OnVideoURLChanging(value);
                ReportPropertyChanging("VideoURL");
                _VideoURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VideoURL");
                OnVideoURLChanged();
            }
        }
        private global::System.String _VideoURL;
        partial void OnVideoURLChanging(global::System.String value);
        partial void OnVideoURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistory")]
        public EmploymentHistory EmploymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistory> EmploymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistory>("huntableModel.FK_EmploymentHistoryVideo_EmploymentHistory", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "FeedUserPortfolioVideo")]
        public EntityCollection<FeedUserPortfolioVideo> FeedUserPortfolioVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserPortfolioVideo>("huntableModel.FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "FeedUserPortfolioVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserPortfolioVideo>("huntableModel.FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "FeedUserPortfolioVideo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeaturedCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedCountry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeaturedCountry CreateFeaturedCountry(global::System.Int32 id)
        {
            FeaturedCountry featuredCountry = new FeaturedCountry();
            featuredCountry.Id = id;
            return featuredCountry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterCountryId
        {
            get
            {
                return _MasterCountryId;
            }
            set
            {
                OnMasterCountryIdChanging(value);
                ReportPropertyChanging("MasterCountryId");
                _MasterCountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterCountryId");
                OnMasterCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterCountryId;
        partial void OnMasterCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnMasterCountryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedCountry_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_FeaturedCountry_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_FeaturedCountry_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_FeaturedCountry_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_FeaturedCountry_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedCountry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedCountry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedCountry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedCountry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeaturedCountry_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeaturedIndustry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedIndustry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedIndustry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeaturedIndustry CreateFeaturedIndustry(global::System.Int32 id)
        {
            FeaturedIndustry featuredIndustry = new FeaturedIndustry();
            featuredIndustry.Id = id;
            return featuredIndustry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterIndustryId
        {
            get
            {
                return _MasterIndustryId;
            }
            set
            {
                OnMasterIndustryIdChanging(value);
                ReportPropertyChanging("MasterIndustryId");
                _MasterIndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterIndustryId");
                OnMasterIndustryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterIndustryId;
        partial void OnMasterIndustryIdChanging(Nullable<global::System.Int32> value);
        partial void OnMasterIndustryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedIndustry_MasterIndustry", "MasterIndustry")]
        public MasterIndustry MasterIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_FeaturedIndustry_MasterIndustry", "MasterIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_FeaturedIndustry_MasterIndustry", "MasterIndustry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIndustry> MasterIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_FeaturedIndustry_MasterIndustry", "MasterIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIndustry>("huntableModel.FK_FeaturedIndustry_MasterIndustry", "MasterIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedIndustry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedIndustry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedIndustry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedIndustry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeaturedIndustry_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeaturedInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeaturedInterest CreateFeaturedInterest(global::System.Int32 id)
        {
            FeaturedInterest featuredInterest = new FeaturedInterest();
            featuredInterest.Id = id;
            return featuredInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterInterestId
        {
            get
            {
                return _MasterInterestId;
            }
            set
            {
                OnMasterInterestIdChanging(value);
                ReportPropertyChanging("MasterInterestId");
                _MasterInterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterInterestId");
                OnMasterInterestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterInterestId;
        partial void OnMasterInterestIdChanging(Nullable<global::System.Int32> value);
        partial void OnMasterInterestIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedInterest_MasterInterest", "MasterInterest")]
        public MasterInterest MasterInterest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_FeaturedInterest_MasterInterest", "MasterInterest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_FeaturedInterest_MasterInterest", "MasterInterest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterInterest> MasterInterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_FeaturedInterest_MasterInterest", "MasterInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterInterest>("huntableModel.FK_FeaturedInterest_MasterInterest", "MasterInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedInterest_User1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedInterest_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedInterest_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedInterest_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeaturedInterest_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeaturedSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static FeaturedSkill CreateFeaturedSkill(global::System.Int32 id, global::System.Int32 userId)
        {
            FeaturedSkill featuredSkill = new FeaturedSkill();
            featuredSkill.Id = id;
            featuredSkill.UserId = userId;
            return featuredSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterSkillId
        {
            get
            {
                return _MasterSkillId;
            }
            set
            {
                OnMasterSkillIdChanging(value);
                ReportPropertyChanging("MasterSkillId");
                _MasterSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSkillId");
                OnMasterSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterSkillId;
        partial void OnMasterSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnMasterSkillIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedSkill_MasterSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_FeaturedSkill_MasterSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_FeaturedSkill_MasterSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_FeaturedSkill_MasterSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_FeaturedSkill_MasterSkill", "MasterSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedSkill_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedSkill_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedSkill_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedSkill_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeaturedSkill_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeaturedUserCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedUserCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedUserCompany object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        public static FeaturedUserCompany CreateFeaturedUserCompany(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 companyId, global::System.DateTime createdDateTime)
        {
            FeaturedUserCompany featuredUserCompany = new FeaturedUserCompany();
            featuredUserCompany.Id = id;
            featuredUserCompany.UserId = userId;
            featuredUserCompany.CompanyId = companyId;
            featuredUserCompany.CreatedDateTime = createdDateTime;
            return featuredUserCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyLogoStoreId
        {
            get
            {
                return _CompanyLogoStoreId;
            }
            set
            {
                OnCompanyLogoStoreIdChanging(value);
                ReportPropertyChanging("CompanyLogoStoreId");
                _CompanyLogoStoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyLogoStoreId");
                OnCompanyLogoStoreIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyLogoStoreId;
        partial void OnCompanyLogoStoreIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyLogoStoreIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedUserCompanies_MasterCompany", "MasterCompany")]
        public MasterCompany MasterCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_FeaturedUserCompanies_MasterCompany", "MasterCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_FeaturedUserCompanies_MasterCompany", "MasterCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCompany> MasterCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_FeaturedUserCompanies_MasterCompany", "MasterCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCompany>("huntableModel.FK_FeaturedUserCompanies_MasterCompany", "MasterCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedUserCompanies_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedUserCompanies_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedUserCompanies_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeaturedUserCompanies_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeaturedUserCompanies_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserAlertRead")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserAlertRead : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserAlertRead object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserAlertRead CreateFeedUserAlertRead(global::System.Int32 id)
        {
            FeedUserAlertRead feedUserAlertRead = new FeedUserAlertRead();
            feedUserAlertRead.Id = id;
            return feedUserAlertRead;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedUserMainId
        {
            get
            {
                return _FeedUserMainId;
            }
            set
            {
                OnFeedUserMainIdChanging(value);
                ReportPropertyChanging("FeedUserMainId");
                _FeedUserMainId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedUserMainId");
                OnFeedUserMainIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedUserMainId;
        partial void OnFeedUserMainIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedUserMainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserAlertRead_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserAlertRead_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserAlertRead_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserAlertRead_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserAlertRead_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserAlertRead_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserAlertRead_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserAlertRead_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserAlertRead_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserAlertRead_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserCompanyPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserCompanyPhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserCompanyPhoto object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserCompanyPhoto CreateFeedUserCompanyPhoto(global::System.Int32 id)
        {
            FeedUserCompanyPhoto feedUserCompanyPhoto = new FeedUserCompanyPhoto();
            feedUserCompanyPhoto.Id = id;
            return feedUserCompanyPhoto;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyPhotoId
        {
            get
            {
                return _CompanyPhotoId;
            }
            set
            {
                OnCompanyPhotoIdChanging(value);
                ReportPropertyChanging("CompanyPhotoId");
                _CompanyPhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyPhotoId");
                OnCompanyPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyPhotoId;
        partial void OnCompanyPhotoIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyPhoto_CompanyPortfolio", "CompanyPortfolio")]
        public CompanyPortfolio CompanyPortfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPortfolio>("huntableModel.FK_FeedUserCompanyPhoto_CompanyPortfolio", "CompanyPortfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPortfolio>("huntableModel.FK_FeedUserCompanyPhoto_CompanyPortfolio", "CompanyPortfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyPortfolio> CompanyPortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPortfolio>("huntableModel.FK_FeedUserCompanyPhoto_CompanyPortfolio", "CompanyPortfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyPortfolio>("huntableModel.FK_FeedUserCompanyPhoto_CompanyPortfolio", "CompanyPortfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserCompanyProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserCompanyProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserCompanyProduct object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserCompanyProduct CreateFeedUserCompanyProduct(global::System.Int32 id)
        {
            FeedUserCompanyProduct feedUserCompanyProduct = new FeedUserCompanyProduct();
            feedUserCompanyProduct.Id = id;
            return feedUserCompanyProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyProductId
        {
            get
            {
                return _CompanyProductId;
            }
            set
            {
                OnCompanyProductIdChanging(value);
                ReportPropertyChanging("CompanyProductId");
                _CompanyProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyProductId");
                OnCompanyProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyProductId;
        partial void OnCompanyProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyProduct_CompanyProducts", "CompanyProduct")]
        public CompanyProduct CompanyProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_CompanyProducts", "CompanyProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_CompanyProducts", "CompanyProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyProduct> CompanyProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_CompanyProducts", "CompanyProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_CompanyProducts", "CompanyProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserCompanyVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserCompanyVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserCompanyVideo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserCompanyVideo CreateFeedUserCompanyVideo(global::System.Int32 id)
        {
            FeedUserCompanyVideo feedUserCompanyVideo = new FeedUserCompanyVideo();
            feedUserCompanyVideo.Id = id;
            return feedUserCompanyVideo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyVideoId
        {
            get
            {
                return _CompanyVideoId;
            }
            set
            {
                OnCompanyVideoIdChanging(value);
                ReportPropertyChanging("CompanyVideoId");
                _CompanyVideoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyVideoId");
                OnCompanyVideoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyVideoId;
        partial void OnCompanyVideoIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyVideoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyVideo_CompanyVideo", "CompanyVideo")]
        public CompanyVideo CompanyVideo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_CompanyVideo", "CompanyVideo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_CompanyVideo", "CompanyVideo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyVideo> CompanyVideoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_CompanyVideo", "CompanyVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_CompanyVideo", "CompanyVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserDerivedUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserDerivedUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserDerivedUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserDerivedUser CreateFeedUserDerivedUser(global::System.Int32 id)
        {
            FeedUserDerivedUser feedUserDerivedUser = new FeedUserDerivedUser();
            feedUserDerivedUser.Id = id;
            return feedUserDerivedUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DerivedUserId
        {
            get
            {
                return _DerivedUserId;
            }
            set
            {
                OnDerivedUserIdChanging(value);
                ReportPropertyChanging("DerivedUserId");
                _DerivedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DerivedUserId");
                OnDerivedUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DerivedUserId;
        partial void OnDerivedUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDerivedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserDerivedUser_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserDerivedUser_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserDerivedUser_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserEducationSchool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserEducationSchool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserEducationSchool object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserEducationSchool CreateFeedUserEducationSchool(global::System.Int32 id)
        {
            FeedUserEducationSchool feedUserEducationSchool = new FeedUserEducationSchool();
            feedUserEducationSchool.Id = id;
            return feedUserEducationSchool;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationHistoryId
        {
            get
            {
                return _EducationHistoryId;
            }
            set
            {
                OnEducationHistoryIdChanging(value);
                ReportPropertyChanging("EducationHistoryId");
                _EducationHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationHistoryId");
                OnEducationHistoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationHistoryId;
        partial void OnEducationHistoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducationHistoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEducationSchool_EducationHistory", "EducationHistory")]
        public EducationHistory EducationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationHistory>("huntableModel.FK_FeedUserEducationSchool_EducationHistory", "EducationHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationHistory>("huntableModel.FK_FeedUserEducationSchool_EducationHistory", "EducationHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationHistory> EducationHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationHistory>("huntableModel.FK_FeedUserEducationSchool_EducationHistory", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationHistory>("huntableModel.FK_FeedUserEducationSchool_EducationHistory", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEducationSchool_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEducationSchool_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEducationSchool_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEducationSchool_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEducationSchool_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserEmployementHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserEmployementHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserEmployementHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserEmployementHistory CreateFeedUserEmployementHistory(global::System.Int32 id)
        {
            FeedUserEmployementHistory feedUserEmployementHistory = new FeedUserEmployementHistory();
            feedUserEmployementHistory.Id = id;
            return feedUserEmployementHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmploymentHistoryId
        {
            get
            {
                return _EmploymentHistoryId;
            }
            set
            {
                OnEmploymentHistoryIdChanging(value);
                ReportPropertyChanging("EmploymentHistoryId");
                _EmploymentHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmploymentHistoryId");
                OnEmploymentHistoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmploymentHistoryId;
        partial void OnEmploymentHistoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmploymentHistoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEmployementHistory_EmploymentHistory", "EmploymentHistory")]
        public EmploymentHistory EmploymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_FeedUserEmployementHistory_EmploymentHistory", "EmploymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_FeedUserEmployementHistory_EmploymentHistory", "EmploymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistory> EmploymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_FeedUserEmployementHistory_EmploymentHistory", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistory>("huntableModel.FK_FeedUserEmployementHistory_EmploymentHistory", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserFollow")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserFollow : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserFollow object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserFollow CreateFeedUserFollow(global::System.Int32 id)
        {
            FeedUserFollow feedUserFollow = new FeedUserFollow();
            feedUserFollow.Id = id;
            return feedUserFollow;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FollowingUserId
        {
            get
            {
                return _FollowingUserId;
            }
            set
            {
                OnFollowingUserIdChanging(value);
                ReportPropertyChanging("FollowingUserId");
                _FollowingUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowingUserId");
                OnFollowingUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FollowingUserId;
        partial void OnFollowingUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnFollowingUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserFollow_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserFollow_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserFollow_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserFollow_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserFollow_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserFollow_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserFollow_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserFollow_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserFollow_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserFollow_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserInterest CreateFeedUserInterest(global::System.Int32 id)
        {
            FeedUserInterest feedUserInterest = new FeedUserInterest();
            feedUserInterest.Id = id;
            return feedUserInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterInterestId
        {
            get
            {
                return _MasterInterestId;
            }
            set
            {
                OnMasterInterestIdChanging(value);
                ReportPropertyChanging("MasterInterestId");
                _MasterInterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterInterestId");
                OnMasterInterestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterInterestId;
        partial void OnMasterInterestIdChanging(Nullable<global::System.Int32> value);
        partial void OnMasterInterestIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserInterest_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserInterest_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserInterest_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserInterest_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserInterest_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserInterest_MasterInterest", "MasterInterest")]
        public MasterInterest MasterInterest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_FeedUserInterest_MasterInterest", "MasterInterest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_FeedUserInterest_MasterInterest", "MasterInterest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterInterest> MasterInterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_FeedUserInterest_MasterInterest", "MasterInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterInterest>("huntableModel.FK_FeedUserInterest_MasterInterest", "MasterInterest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserJob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserJob object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserJob CreateFeedUserJob(global::System.Int32 id)
        {
            FeedUserJob feedUserJob = new FeedUserJob();
            feedUserJob.Id = id;
            return feedUserJob;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserJob_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserJob_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserJob_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserJob_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserJob_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserJob_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("huntableModel.FK_FeedUserJob_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("huntableModel.FK_FeedUserJob_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("huntableModel.FK_FeedUserJob_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("huntableModel.FK_FeedUserJob_Job", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserMain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserMain : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserMain object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static FeedUserMain CreateFeedUserMain(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime date, global::System.String type)
        {
            FeedUserMain feedUserMain = new FeedUserMain();
            feedUserMain.Id = id;
            feedUserMain.UserId = userId;
            feedUserMain.Date = date;
            feedUserMain.Type = type;
            return feedUserMain;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RefFeedId
        {
            get
            {
                return _RefFeedId;
            }
            set
            {
                OnRefFeedIdChanging(value);
                ReportPropertyChanging("RefFeedId");
                _RefFeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefFeedId");
                OnRefFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RefFeedId;
        partial void OnRefFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnRefFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerUserId
        {
            get
            {
                return _OwnerUserId;
            }
            set
            {
                OnOwnerUserIdChanging(value);
                ReportPropertyChanging("OwnerUserId");
                _OwnerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerUserId");
                OnOwnerUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerUserId;
        partial void OnOwnerUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserAlertRead_FeedUserMain", "FeedUserAlertRead")]
        public EntityCollection<FeedUserAlertRead> FeedUserAlertReads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserAlertRead>("huntableModel.FK_FeedUserAlertRead_FeedUserMain", "FeedUserAlertRead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserAlertRead>("huntableModel.FK_FeedUserAlertRead_FeedUserMain", "FeedUserAlertRead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserCompanyPhoto")]
        public EntityCollection<FeedUserCompanyPhoto> FeedUserCompanyPhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserCompanyPhoto>("huntableModel.FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserCompanyPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserCompanyPhoto>("huntableModel.FK_FeedUserCompanyPhoto_FeedUserMain", "FeedUserCompanyPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserCompanyProduct")]
        public EntityCollection<FeedUserCompanyProduct> FeedUserCompanyProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserCompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserCompanyProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserCompanyProduct>("huntableModel.FK_FeedUserCompanyProduct_FeedUserMain", "FeedUserCompanyProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserCompanyVideo")]
        public EntityCollection<FeedUserCompanyVideo> FeedUserCompanyVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserCompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserCompanyVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserCompanyVideo>("huntableModel.FK_FeedUserCompanyVideo_FeedUserMain", "FeedUserCompanyVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEducationSchool_FeedUserMain", "FeedUserEducationSchool")]
        public EntityCollection<FeedUserEducationSchool> FeedUserEducationSchools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserEducationSchool>("huntableModel.FK_FeedUserEducationSchool_FeedUserMain", "FeedUserEducationSchool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserEducationSchool>("huntableModel.FK_FeedUserEducationSchool_FeedUserMain", "FeedUserEducationSchool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserEmployementHistory")]
        public EntityCollection<FeedUserEmployementHistory> FeedUserEmployementHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserEmployementHistory>("huntableModel.FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserEmployementHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserEmployementHistory>("huntableModel.FK_FeedUserEmployementHistory_FeedUserMain", "FeedUserEmployementHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserFollow_FeedUserMain", "FeedUserFollow")]
        public EntityCollection<FeedUserFollow> FeedUserFollows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserFollow>("huntableModel.FK_FeedUserFollow_FeedUserMain", "FeedUserFollow");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserFollow>("huntableModel.FK_FeedUserFollow_FeedUserMain", "FeedUserFollow", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserInterest_FeedUserMain", "FeedUserInterest")]
        public EntityCollection<FeedUserInterest> FeedUserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserInterest>("huntableModel.FK_FeedUserInterest_FeedUserMain", "FeedUserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserInterest>("huntableModel.FK_FeedUserInterest_FeedUserMain", "FeedUserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserJob_FeedUserMain", "FeedUserJob")]
        public EntityCollection<FeedUserJob> FeedUserJobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserJob>("huntableModel.FK_FeedUserJob_FeedUserMain", "FeedUserJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserJob>("huntableModel.FK_FeedUserJob_FeedUserMain", "FeedUserJob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMain_FeedUserMain", "FeedUserMain1")]
        public EntityCollection<FeedUserMain> FeedUserMain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserMain>("huntableModel.FK_FeedUserMain_FeedUserMain", "FeedUserMain1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserMain>("huntableModel.FK_FeedUserMain_FeedUserMain", "FeedUserMain1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMain_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMain_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMain_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMain2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMain_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMain_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMainFeed_FeedUserMain", "FeedUserMainFeed")]
        public EntityCollection<FeedUserMainFeed> FeedUserMainFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserMainFeed>("huntableModel.FK_FeedUserMainFeed_FeedUserMain", "FeedUserMainFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserMainFeed>("huntableModel.FK_FeedUserMainFeed_FeedUserMain", "FeedUserMainFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMainFeed")]
        public EntityCollection<FeedUserMainFeed> FeedUserMainFeeds1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserMainFeed>("huntableModel.FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMainFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserMainFeed>("huntableModel.FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMainFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPhoto_FeedUserMain", "FeedUserPhoto")]
        public EntityCollection<FeedUserPhoto> FeedUserPhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserPhoto>("huntableModel.FK_FeedUserPhoto_FeedUserMain", "FeedUserPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserPhoto>("huntableModel.FK_FeedUserPhoto_FeedUserMain", "FeedUserPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserPorfolioPhoto")]
        public EntityCollection<FeedUserPorfolioPhoto> FeedUserPorfolioPhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserPorfolioPhoto>("huntableModel.FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserPorfolioPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserPorfolioPhoto>("huntableModel.FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserPorfolioPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserPortfolioVideo")]
        public EntityCollection<FeedUserPortfolioVideo> FeedUserPortfolioVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserPortfolioVideo>("huntableModel.FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserPortfolioVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserPortfolioVideo>("huntableModel.FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserPortfolioVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserProfile_FeedUserMain", "FeedUserProfile")]
        public EntityCollection<FeedUserProfile> FeedUserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserProfile>("huntableModel.FK_FeedUserProfile_FeedUserMain", "FeedUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserProfile>("huntableModel.FK_FeedUserProfile_FeedUserMain", "FeedUserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserSkill_FeedUserMain", "FeedUserSkill")]
        public EntityCollection<FeedUserSkill> FeedUserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserSkill>("huntableModel.FK_FeedUserSkill_FeedUserMain", "FeedUserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserSkill>("huntableModel.FK_FeedUserSkill_FeedUserMain", "FeedUserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserUserFeed_FeedUserMain", "FeedUserUserFeed")]
        public EntityCollection<FeedUserUserFeed> FeedUserUserFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserUserFeed>("huntableModel.FK_FeedUserUserFeed_FeedUserMain", "FeedUserUserFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserUserFeed>("huntableModel.FK_FeedUserUserFeed_FeedUserMain", "FeedUserUserFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVideo_FeedUserMain", "FeedUserVideo")]
        public EntityCollection<FeedUserVideo> FeedUserVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserVideo>("huntableModel.FK_FeedUserVideo_FeedUserMain", "FeedUserVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserVideo>("huntableModel.FK_FeedUserVideo_FeedUserMain", "FeedUserVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVisitor_FeedUserMain", "FeedUserVisitor")]
        public EntityCollection<FeedUserVisitor> FeedUserVisitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserVisitor>("huntableModel.FK_FeedUserVisitor_FeedUserMain", "FeedUserVisitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserVisitor>("huntableModel.FK_FeedUserVisitor_FeedUserMain", "FeedUserVisitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMain_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserMain_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserMain_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserMain_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserMain_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMain_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserMain_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserMain_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserMain_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserMain_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserMainFeed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserMainFeed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserMainFeed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserMainFeed CreateFeedUserMainFeed(global::System.Int32 id)
        {
            FeedUserMainFeed feedUserMainFeed = new FeedUserMainFeed();
            feedUserMainFeed.Id = id;
            return feedUserMainFeed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferencedFeedId
        {
            get
            {
                return _ReferencedFeedId;
            }
            set
            {
                OnReferencedFeedIdChanging(value);
                ReportPropertyChanging("ReferencedFeedId");
                _ReferencedFeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferencedFeedId");
                OnReferencedFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferencedFeedId;
        partial void OnReferencedFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnReferencedFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMainFeed_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMain")]
        public FeedUserMain FeedUserMain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserMainFeed_ReferenceFeedUserMainFeed", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserMainHiddenFeed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserMainHiddenFeed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserMainHiddenFeed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserMainHiddenFeed CreateFeedUserMainHiddenFeed(global::System.Int32 id)
        {
            FeedUserMainHiddenFeed feedUserMainHiddenFeed = new FeedUserMainHiddenFeed();
            feedUserMainHiddenFeed.Id = id;
            return feedUserMainHiddenFeed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HiddenFeedId
        {
            get
            {
                return _HiddenFeedId;
            }
            set
            {
                OnHiddenFeedIdChanging(value);
                ReportPropertyChanging("HiddenFeedId");
                _HiddenFeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HiddenFeedId");
                OnHiddenFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HiddenFeedId;
        partial void OnHiddenFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnHiddenFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserPhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserPhoto object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserPhoto CreateFeedUserPhoto(global::System.Int32 id)
        {
            FeedUserPhoto feedUserPhoto = new FeedUserPhoto();
            feedUserPhoto.Id = id;
            return feedUserPhoto;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserPhotoId
        {
            get
            {
                return _UserPhotoId;
            }
            set
            {
                OnUserPhotoIdChanging(value);
                ReportPropertyChanging("UserPhotoId");
                _UserPhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserPhotoId");
                OnUserPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserPhotoId;
        partial void OnUserPhotoIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPhoto_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPhoto_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPhoto_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPhoto_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPhoto_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPhoto_UserPortfolio", "UserPortfolio")]
        public UserPortfolio UserPortfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserPortfolio>("huntableModel.FK_FeedUserPhoto_UserPortfolio", "UserPortfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserPortfolio>("huntableModel.FK_FeedUserPhoto_UserPortfolio", "UserPortfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserPortfolio> UserPortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserPortfolio>("huntableModel.FK_FeedUserPhoto_UserPortfolio", "UserPortfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserPortfolio>("huntableModel.FK_FeedUserPhoto_UserPortfolio", "UserPortfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserPorfolioPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserPorfolioPhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserPorfolioPhoto object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserPorfolioPhoto CreateFeedUserPorfolioPhoto(global::System.Int32 id)
        {
            FeedUserPorfolioPhoto feedUserPorfolioPhoto = new FeedUserPorfolioPhoto();
            feedUserPorfolioPhoto.Id = id;
            return feedUserPorfolioPhoto;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortfolioPhotoId
        {
            get
            {
                return _PortfolioPhotoId;
            }
            set
            {
                OnPortfolioPhotoIdChanging(value);
                ReportPropertyChanging("PortfolioPhotoId");
                _PortfolioPhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioPhotoId");
                OnPortfolioPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PortfolioPhotoId;
        partial void OnPortfolioPhotoIdChanging(Nullable<global::System.Int32> value);
        partial void OnPortfolioPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "EmploymentHistoryPortfolio")]
        public EmploymentHistoryPortfolio EmploymentHistoryPortfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistoryPortfolio>("huntableModel.FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "EmploymentHistoryPortfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistoryPortfolio>("huntableModel.FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "EmploymentHistoryPortfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistoryPortfolio> EmploymentHistoryPortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistoryPortfolio>("huntableModel.FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "EmploymentHistoryPortfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistoryPortfolio>("huntableModel.FK_FeedUserPorfolioPhoto_EmploymentHistoryPortfolio", "EmploymentHistoryPortfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPorfolioPhoto_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserPortfolioVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserPortfolioVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserPortfolioVideo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserPortfolioVideo CreateFeedUserPortfolioVideo(global::System.Int32 id)
        {
            FeedUserPortfolioVideo feedUserPortfolioVideo = new FeedUserPortfolioVideo();
            feedUserPortfolioVideo.Id = id;
            return feedUserPortfolioVideo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortfolioVideoId
        {
            get
            {
                return _PortfolioVideoId;
            }
            set
            {
                OnPortfolioVideoIdChanging(value);
                ReportPropertyChanging("PortfolioVideoId");
                _PortfolioVideoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioVideoId");
                OnPortfolioVideoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PortfolioVideoId;
        partial void OnPortfolioVideoIdChanging(Nullable<global::System.Int32> value);
        partial void OnPortfolioVideoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "EmploymentHistoryVideo")]
        public EmploymentHistoryVideo EmploymentHistoryVideo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistoryVideo>("huntableModel.FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "EmploymentHistoryVideo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistoryVideo>("huntableModel.FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "EmploymentHistoryVideo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistoryVideo> EmploymentHistoryVideoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistoryVideo>("huntableModel.FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "EmploymentHistoryVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistoryVideo>("huntableModel.FK_FeedUserPortfolioVideo_EmploymentHistoryVideo", "EmploymentHistoryVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserPortfolioVideo_FeedUserMain", "FeedUserMain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserProfile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserProfile CreateFeedUserProfile(global::System.Int32 id)
        {
            FeedUserProfile feedUserProfile = new FeedUserProfile();
            feedUserProfile.Id = id;
            return feedUserProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProfileUserId
        {
            get
            {
                return _ProfileUserId;
            }
            set
            {
                OnProfileUserIdChanging(value);
                ReportPropertyChanging("ProfileUserId");
                _ProfileUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileUserId");
                OnProfileUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProfileUserId;
        partial void OnProfileUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnProfileUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserProfile_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserProfile_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserProfile_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserProfile_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserProfile_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserProfile_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserProfile_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserProfile_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserProfile_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserProfile_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserSkill CreateFeedUserSkill(global::System.Int32 id)
        {
            FeedUserSkill feedUserSkill = new FeedUserSkill();
            feedUserSkill.Id = id;
            return feedUserSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterSkillId
        {
            get
            {
                return _MasterSkillId;
            }
            set
            {
                OnMasterSkillIdChanging(value);
                ReportPropertyChanging("MasterSkillId");
                _MasterSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSkillId");
                OnMasterSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterSkillId;
        partial void OnMasterSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnMasterSkillIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserSkill_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserSkill_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserSkill_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserSkill_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserSkill_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserSkill_MasterSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_FeedUserSkill_MasterSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_FeedUserSkill_MasterSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_FeedUserSkill_MasterSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_FeedUserSkill_MasterSkill", "MasterSkill", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserUserFeed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserUserFeed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserUserFeed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserUserFeed CreateFeedUserUserFeed(global::System.Int32 id)
        {
            FeedUserUserFeed feedUserUserFeed = new FeedUserUserFeed();
            feedUserUserFeed.Id = id;
            return feedUserUserFeed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserFeedId
        {
            get
            {
                return _UserFeedId;
            }
            set
            {
                OnUserFeedIdChanging(value);
                ReportPropertyChanging("UserFeedId");
                _UserFeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFeedId");
                OnUserFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserFeedId;
        partial void OnUserFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserUserFeed_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserUserFeed_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserUserFeed_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserUserFeed_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserUserFeed_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserUserFeed_UserFeeds", "UserFeed")]
        public UserFeed UserFeed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserFeed>("huntableModel.FK_FeedUserUserFeed_UserFeeds", "UserFeed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserFeed>("huntableModel.FK_FeedUserUserFeed_UserFeeds", "UserFeed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserFeed> UserFeedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserFeed>("huntableModel.FK_FeedUserUserFeed_UserFeeds", "UserFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserFeed>("huntableModel.FK_FeedUserUserFeed_UserFeeds", "UserFeed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserVideo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserVideo CreateFeedUserVideo(global::System.Int32 id)
        {
            FeedUserVideo feedUserVideo = new FeedUserVideo();
            feedUserVideo.Id = id;
            return feedUserVideo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserVideoId
        {
            get
            {
                return _UserVideoId;
            }
            set
            {
                OnUserVideoIdChanging(value);
                ReportPropertyChanging("UserVideoId");
                _UserVideoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserVideoId");
                OnUserVideoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserVideoId;
        partial void OnUserVideoIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserVideoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVideo_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVideo_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVideo_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVideo_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVideo_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVideo_UserVideos", "UserVideo")]
        public UserVideo UserVideo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserVideo>("huntableModel.FK_FeedUserVideo_UserVideos", "UserVideo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserVideo>("huntableModel.FK_FeedUserVideo_UserVideos", "UserVideo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserVideo> UserVideoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserVideo>("huntableModel.FK_FeedUserVideo_UserVideos", "UserVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserVideo>("huntableModel.FK_FeedUserVideo_UserVideos", "UserVideo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FeedUserVisitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedUserVisitor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedUserVisitor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedUserVisitor CreateFeedUserVisitor(global::System.Int32 id)
        {
            FeedUserVisitor feedUserVisitor = new FeedUserVisitor();
            feedUserVisitor.Id = id;
            return feedUserVisitor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VisitorUserId
        {
            get
            {
                return _VisitorUserId;
            }
            set
            {
                OnVisitorUserIdChanging(value);
                ReportPropertyChanging("VisitorUserId");
                _VisitorUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisitorUserId");
                OnVisitorUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VisitorUserId;
        partial void OnVisitorUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnVisitorUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVisitor_FeedUserMain", "FeedUserMain")]
        public FeedUserMain FeedUserMain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVisitor_FeedUserMain", "FeedUserMain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVisitor_FeedUserMain", "FeedUserMain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedUserMain> FeedUserMainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVisitor_FeedUserMain", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedUserMain>("huntableModel.FK_FeedUserVisitor_FeedUserMain", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVisitor_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserVisitor_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserVisitor_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FeedUserVisitor_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FeedUserVisitor_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="FriendsToInvite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FriendsToInvite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FriendsToInvite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="friendInvitationId">Initial value of the FriendInvitationId property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="invited">Initial value of the Invited property.</param>
        /// <param name="cancelled">Initial value of the Cancelled property.</param>
        public static FriendsToInvite CreateFriendsToInvite(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 friendInvitationId, global::System.DateTime createdDateTime, global::System.Boolean invited, global::System.Boolean cancelled)
        {
            FriendsToInvite friendsToInvite = new FriendsToInvite();
            friendsToInvite.Id = id;
            friendsToInvite.UserId = userId;
            friendsToInvite.FriendInvitationId = friendInvitationId;
            friendsToInvite.CreatedDateTime = createdDateTime;
            friendsToInvite.Invited = invited;
            friendsToInvite.Cancelled = cancelled;
            return friendsToInvite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FriendInvitationId
        {
            get
            {
                return _FriendInvitationId;
            }
            set
            {
                OnFriendInvitationIdChanging(value);
                ReportPropertyChanging("FriendInvitationId");
                _FriendInvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendInvitationId");
                OnFriendInvitationIdChanged();
            }
        }
        private global::System.Int32 _FriendInvitationId;
        partial void OnFriendInvitationIdChanging(global::System.Int32 value);
        partial void OnFriendInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Invited
        {
            get
            {
                return _Invited;
            }
            set
            {
                OnInvitedChanging(value);
                ReportPropertyChanging("Invited");
                _Invited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Invited");
                OnInvitedChanged();
            }
        }
        private global::System.Boolean _Invited;
        partial void OnInvitedChanging(global::System.Boolean value);
        partial void OnInvitedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Cancelled
        {
            get
            {
                return _Cancelled;
            }
            set
            {
                OnCancelledChanging(value);
                ReportPropertyChanging("Cancelled");
                _Cancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cancelled");
                OnCancelledChanged();
            }
        }
        private global::System.Boolean _Cancelled;
        partial void OnCancelledChanging(global::System.Boolean value);
        partial void OnCancelledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FriendsToInvite_Invitation", "Invitation")]
        public Invitation Invitation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("huntableModel.FK_FriendsToInvite_Invitation", "Invitation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("huntableModel.FK_FriendsToInvite_Invitation", "Invitation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invitation> InvitationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("huntableModel.FK_FriendsToInvite_Invitation", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invitation>("huntableModel.FK_FriendsToInvite_Invitation", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FriendsToInvite_FriendsToInvite", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FriendsToInvite_FriendsToInvite", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FriendsToInvite_FriendsToInvite", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_FriendsToInvite_FriendsToInvite", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_FriendsToInvite_FriendsToInvite", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="invitationSentDateTime">Initial value of the InvitationSentDateTime property.</param>
        /// <param name="isJoined">Initial value of the IsJoined property.</param>
        public static Invitation CreateInvitation(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime invitationSentDateTime, global::System.Boolean isJoined)
        {
            Invitation invitation = new Invitation();
            invitation.Id = id;
            invitation.UserId = userId;
            invitation.InvitationSentDateTime = invitationSentDateTime;
            invitation.IsJoined = isJoined;
            return invitation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TokenId
        {
            get
            {
                return _TokenId;
            }
            set
            {
                OnTokenIdChanging(value);
                ReportPropertyChanging("TokenId");
                _TokenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TokenId");
                OnTokenIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TokenId;
        partial void OnTokenIdChanging(Nullable<global::System.Int32> value);
        partial void OnTokenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.String _UniqueId;
        partial void OnUniqueIdChanging(global::System.String value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomInvitationId
        {
            get
            {
                return _CustomInvitationId;
            }
            set
            {
                OnCustomInvitationIdChanging(value);
                ReportPropertyChanging("CustomInvitationId");
                _CustomInvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomInvitationId");
                OnCustomInvitationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomInvitationId;
        partial void OnCustomInvitationIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvitationSentDateTime
        {
            get
            {
                return _InvitationSentDateTime;
            }
            set
            {
                OnInvitationSentDateTimeChanging(value);
                ReportPropertyChanging("InvitationSentDateTime");
                _InvitationSentDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationSentDateTime");
                OnInvitationSentDateTimeChanged();
            }
        }
        private global::System.DateTime _InvitationSentDateTime;
        partial void OnInvitationSentDateTimeChanging(global::System.DateTime value);
        partial void OnInvitationSentDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> JoinedDateTime
        {
            get
            {
                return _JoinedDateTime;
            }
            set
            {
                OnJoinedDateTimeChanging(value);
                ReportPropertyChanging("JoinedDateTime");
                _JoinedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinedDateTime");
                OnJoinedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _JoinedDateTime;
        partial void OnJoinedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnJoinedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsJoined
        {
            get
            {
                return _IsJoined;
            }
            set
            {
                OnIsJoinedChanging(value);
                ReportPropertyChanging("IsJoined");
                _IsJoined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsJoined");
                OnIsJoinedChanged();
            }
        }
        private global::System.Boolean _IsJoined;
        partial void OnIsJoinedChanging(global::System.Boolean value);
        partial void OnIsJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvitationTypeId
        {
            get
            {
                return _InvitationTypeId;
            }
            set
            {
                OnInvitationTypeIdChanging(value);
                ReportPropertyChanging("InvitationTypeId");
                _InvitationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationTypeId");
                OnInvitationTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InvitationTypeId;
        partial void OnInvitationTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnInvitationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegisteredUserID
        {
            get
            {
                return _RegisteredUserID;
            }
            set
            {
                OnRegisteredUserIDChanging(value);
                ReportPropertyChanging("RegisteredUserID");
                _RegisteredUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteredUserID");
                OnRegisteredUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegisteredUserID;
        partial void OnRegisteredUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegisteredUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReminderEmailSentDate
        {
            get
            {
                return _ReminderEmailSentDate;
            }
            set
            {
                OnReminderEmailSentDateChanging(value);
                ReportPropertyChanging("ReminderEmailSentDate");
                _ReminderEmailSentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReminderEmailSentDate");
                OnReminderEmailSentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReminderEmailSentDate;
        partial void OnReminderEmailSentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReminderEmailSentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvitedId
        {
            get
            {
                return _InvitedId;
            }
            set
            {
                OnInvitedIdChanging(value);
                ReportPropertyChanging("InvitedId");
                _InvitedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedId");
                OnInvitedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InvitedId;
        partial void OnInvitedIdChanging(Nullable<global::System.Int32> value);
        partial void OnInvitedIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Invitation_CustomInvitationDetails", "CustomInvitationDetail")]
        public CustomInvitationDetail CustomInvitationDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomInvitationDetail>("huntableModel.FK_Invitation_CustomInvitationDetails", "CustomInvitationDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomInvitationDetail>("huntableModel.FK_Invitation_CustomInvitationDetails", "CustomInvitationDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomInvitationDetail> CustomInvitationDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomInvitationDetail>("huntableModel.FK_Invitation_CustomInvitationDetails", "CustomInvitationDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomInvitationDetail>("huntableModel.FK_Invitation_CustomInvitationDetails", "CustomInvitationDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FriendsToInvite_Invitation", "FriendsToInvite")]
        public EntityCollection<FriendsToInvite> FriendsToInvites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FriendsToInvite>("huntableModel.FK_FriendsToInvite_Invitation", "FriendsToInvite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FriendsToInvite>("huntableModel.FK_FriendsToInvite_Invitation", "FriendsToInvite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Invitation_MasterInvitationType", "MasterInvitationType")]
        public MasterInvitationType MasterInvitationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInvitationType>("huntableModel.FK_Invitation_MasterInvitationType", "MasterInvitationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInvitationType>("huntableModel.FK_Invitation_MasterInvitationType", "MasterInvitationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterInvitationType> MasterInvitationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInvitationType>("huntableModel.FK_Invitation_MasterInvitationType", "MasterInvitationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterInvitationType>("huntableModel.FK_Invitation_MasterInvitationType", "MasterInvitationType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="level1Count">Initial value of the Level1Count property.</param>
        /// <param name="level2Count">Initial value of the Level2Count property.</param>
        /// <param name="level3Count">Initial value of the Level3Count property.</param>
        /// <param name="withdrawnDateTime">Initial value of the WithdrawnDateTime property.</param>
        /// <param name="transactionComplete">Initial value of the TransactionComplete property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="invoicePathId">Initial value of the InvoicePathId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Invoice CreateInvoice(global::System.Int32 id, global::System.Int32 level1Count, global::System.Int32 level2Count, global::System.Int32 level3Count, global::System.DateTime withdrawnDateTime, global::System.Boolean transactionComplete, global::System.Int32 userId, global::System.Int32 invoicePathId, global::System.Decimal amount)
        {
            Invoice invoice = new Invoice();
            invoice.Id = id;
            invoice.Level1Count = level1Count;
            invoice.Level2Count = level2Count;
            invoice.Level3Count = level3Count;
            invoice.WithdrawnDateTime = withdrawnDateTime;
            invoice.TransactionComplete = transactionComplete;
            invoice.UserId = userId;
            invoice.InvoicePathId = invoicePathId;
            invoice.Amount = amount;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level1Count
        {
            get
            {
                return _Level1Count;
            }
            set
            {
                OnLevel1CountChanging(value);
                ReportPropertyChanging("Level1Count");
                _Level1Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level1Count");
                OnLevel1CountChanged();
            }
        }
        private global::System.Int32 _Level1Count;
        partial void OnLevel1CountChanging(global::System.Int32 value);
        partial void OnLevel1CountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level2Count
        {
            get
            {
                return _Level2Count;
            }
            set
            {
                OnLevel2CountChanging(value);
                ReportPropertyChanging("Level2Count");
                _Level2Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level2Count");
                OnLevel2CountChanged();
            }
        }
        private global::System.Int32 _Level2Count;
        partial void OnLevel2CountChanging(global::System.Int32 value);
        partial void OnLevel2CountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level3Count
        {
            get
            {
                return _Level3Count;
            }
            set
            {
                OnLevel3CountChanging(value);
                ReportPropertyChanging("Level3Count");
                _Level3Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level3Count");
                OnLevel3CountChanged();
            }
        }
        private global::System.Int32 _Level3Count;
        partial void OnLevel3CountChanging(global::System.Int32 value);
        partial void OnLevel3CountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WithdrawnDateTime
        {
            get
            {
                return _WithdrawnDateTime;
            }
            set
            {
                OnWithdrawnDateTimeChanging(value);
                ReportPropertyChanging("WithdrawnDateTime");
                _WithdrawnDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WithdrawnDateTime");
                OnWithdrawnDateTimeChanged();
            }
        }
        private global::System.DateTime _WithdrawnDateTime;
        partial void OnWithdrawnDateTimeChanging(global::System.DateTime value);
        partial void OnWithdrawnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TransactionComplete
        {
            get
            {
                return _TransactionComplete;
            }
            set
            {
                OnTransactionCompleteChanging(value);
                ReportPropertyChanging("TransactionComplete");
                _TransactionComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionComplete");
                OnTransactionCompleteChanged();
            }
        }
        private global::System.Boolean _TransactionComplete;
        partial void OnTransactionCompleteChanging(global::System.Boolean value);
        partial void OnTransactionCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionCompletedDateTime
        {
            get
            {
                return _TransactionCompletedDateTime;
            }
            set
            {
                OnTransactionCompletedDateTimeChanging(value);
                ReportPropertyChanging("TransactionCompletedDateTime");
                _TransactionCompletedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCompletedDateTime");
                OnTransactionCompletedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionCompletedDateTime;
        partial void OnTransactionCompletedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionCompletedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoicePathId
        {
            get
            {
                return _InvoicePathId;
            }
            set
            {
                OnInvoicePathIdChanging(value);
                ReportPropertyChanging("InvoicePathId");
                _InvoicePathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicePathId");
                OnInvoicePathIdChanged();
            }
        }
        private global::System.Int32 _InvoicePathId;
        partial void OnInvoicePathIdChanging(global::System.Int32 value);
        partial void OnInvoicePathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalInvited
        {
            get
            {
                return _TotalInvited;
            }
            set
            {
                OnTotalInvitedChanging(value);
                ReportPropertyChanging("TotalInvited");
                _TotalInvited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalInvited");
                OnTotalInvitedChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalInvited;
        partial void OnTotalInvitedChanging(Nullable<global::System.Int32> value);
        partial void OnTotalInvitedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DrawnLevel1Count
        {
            get
            {
                return _DrawnLevel1Count;
            }
            set
            {
                OnDrawnLevel1CountChanging(value);
                ReportPropertyChanging("DrawnLevel1Count");
                _DrawnLevel1Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrawnLevel1Count");
                OnDrawnLevel1CountChanged();
            }
        }
        private Nullable<global::System.Int32> _DrawnLevel1Count;
        partial void OnDrawnLevel1CountChanging(Nullable<global::System.Int32> value);
        partial void OnDrawnLevel1CountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DrawnLevel2Count
        {
            get
            {
                return _DrawnLevel2Count;
            }
            set
            {
                OnDrawnLevel2CountChanging(value);
                ReportPropertyChanging("DrawnLevel2Count");
                _DrawnLevel2Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrawnLevel2Count");
                OnDrawnLevel2CountChanged();
            }
        }
        private Nullable<global::System.Int32> _DrawnLevel2Count;
        partial void OnDrawnLevel2CountChanging(Nullable<global::System.Int32> value);
        partial void OnDrawnLevel2CountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DrawnLevel3Count
        {
            get
            {
                return _DrawnLevel3Count;
            }
            set
            {
                OnDrawnLevel3CountChanging(value);
                ReportPropertyChanging("DrawnLevel3Count");
                _DrawnLevel3Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrawnLevel3Count");
                OnDrawnLevel3CountChanged();
            }
        }
        private Nullable<global::System.Int32> _DrawnLevel3Count;
        partial void OnDrawnLevel3CountChanging(Nullable<global::System.Int32> value);
        partial void OnDrawnLevel3CountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Invoice_Invoice", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Invoice_Invoice", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Invoice_Invoice", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Invoice_Invoice", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_Invoice_Invoice", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="IpAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IpAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IpAddress object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static IpAddress CreateIpAddress(global::System.Int32 id)
        {
            IpAddress ipAddress = new IpAddress();
            ipAddress.Id = id;
            return ipAddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IpAddress1
        {
            get
            {
                return _IpAddress1;
            }
            set
            {
                OnIpAddress1Changing(value);
                ReportPropertyChanging("IpAddress1");
                _IpAddress1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IpAddress1");
                OnIpAddress1Changed();
            }
        }
        private global::System.String _IpAddress1;
        partial void OnIpAddress1Changing(global::System.String value);
        partial void OnIpAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="jobDescription">Initial value of the JobDescription property.</param>
        /// <param name="minExperience">Initial value of the MinExperience property.</param>
        /// <param name="jobTypeId">Initial value of the JobTypeId property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="sectorId">Initial value of the SectorId property.</param>
        /// <param name="desiredCandidateProfile">Initial value of the DesiredCandidateProfile property.</param>
        /// <param name="isCompanyLogo">Initial value of the IsCompanyLogo property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Job CreateJob(global::System.Int32 id, global::System.String title, global::System.String companyName, global::System.Int32 salary, global::System.Int32 countryId, global::System.String jobDescription, global::System.Int32 minExperience, global::System.Int32 jobTypeId, global::System.Int32 industryId, global::System.Int32 sectorId, global::System.String desiredCandidateProfile, global::System.Boolean isCompanyLogo, global::System.Int32 userId)
        {
            Job job = new Job();
            job.Id = id;
            job.Title = title;
            job.CompanyName = companyName;
            job.Salary = salary;
            job.CountryId = countryId;
            job.JobDescription = jobDescription;
            job.MinExperience = minExperience;
            job.JobTypeId = jobTypeId;
            job.IndustryId = industryId;
            job.SectorId = sectorId;
            job.DesiredCandidateProfile = desiredCandidateProfile;
            job.IsCompanyLogo = isCompanyLogo;
            job.UserId = userId;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Int32 _Salary;
        partial void OnSalaryChanging(global::System.Int32 value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobDescription
        {
            get
            {
                return _JobDescription;
            }
            set
            {
                OnJobDescriptionChanging(value);
                ReportPropertyChanging("JobDescription");
                _JobDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobDescription");
                OnJobDescriptionChanged();
            }
        }
        private global::System.String _JobDescription;
        partial void OnJobDescriptionChanging(global::System.String value);
        partial void OnJobDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinExperience
        {
            get
            {
                return _MinExperience;
            }
            set
            {
                OnMinExperienceChanging(value);
                ReportPropertyChanging("MinExperience");
                _MinExperience = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinExperience");
                OnMinExperienceChanged();
            }
        }
        private global::System.Int32 _MinExperience;
        partial void OnMinExperienceChanging(global::System.Int32 value);
        partial void OnMinExperienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxExperience
        {
            get
            {
                return _MaxExperience;
            }
            set
            {
                OnMaxExperienceChanging(value);
                ReportPropertyChanging("MaxExperience");
                _MaxExperience = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxExperience");
                OnMaxExperienceChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxExperience;
        partial void OnMaxExperienceChanging(Nullable<global::System.Int32> value);
        partial void OnMaxExperienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeId
        {
            get
            {
                return _JobTypeId;
            }
            set
            {
                OnJobTypeIdChanging(value);
                ReportPropertyChanging("JobTypeId");
                _JobTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeId");
                OnJobTypeIdChanged();
            }
        }
        private global::System.Int32 _JobTypeId;
        partial void OnJobTypeIdChanging(global::System.Int32 value);
        partial void OnJobTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SectorId
        {
            get
            {
                return _SectorId;
            }
            set
            {
                OnSectorIdChanging(value);
                ReportPropertyChanging("SectorId");
                _SectorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SectorId");
                OnSectorIdChanged();
            }
        }
        private global::System.Int32 _SectorId;
        partial void OnSectorIdChanging(global::System.Int32 value);
        partial void OnSectorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DesiredCandidateProfile
        {
            get
            {
                return _DesiredCandidateProfile;
            }
            set
            {
                OnDesiredCandidateProfileChanging(value);
                ReportPropertyChanging("DesiredCandidateProfile");
                _DesiredCandidateProfile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DesiredCandidateProfile");
                OnDesiredCandidateProfileChanged();
            }
        }
        private global::System.String _DesiredCandidateProfile;
        partial void OnDesiredCandidateProfileChanging(global::System.String value);
        partial void OnDesiredCandidateProfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AboutYourCompany
        {
            get
            {
                return _AboutYourCompany;
            }
            set
            {
                OnAboutYourCompanyChanging(value);
                ReportPropertyChanging("AboutYourCompany");
                _AboutYourCompany = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AboutYourCompany");
                OnAboutYourCompanyChanged();
            }
        }
        private global::System.String _AboutYourCompany;
        partial void OnAboutYourCompanyChanging(global::System.String value);
        partial void OnAboutYourCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompanyLogo
        {
            get
            {
                return _IsCompanyLogo;
            }
            set
            {
                OnIsCompanyLogoChanging(value);
                ReportPropertyChanging("IsCompanyLogo");
                _IsCompanyLogo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompanyLogo");
                OnIsCompanyLogoChanged();
            }
        }
        private global::System.Boolean _IsCompanyLogo;
        partial void OnIsCompanyLogoChanging(global::System.Boolean value);
        partial void OnIsCompanyLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoPath1
        {
            get
            {
                return _PhotoPath1;
            }
            set
            {
                OnPhotoPath1Changing(value);
                ReportPropertyChanging("PhotoPath1");
                _PhotoPath1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoPath1");
                OnPhotoPath1Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoPath1;
        partial void OnPhotoPath1Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoPath1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoPath2
        {
            get
            {
                return _PhotoPath2;
            }
            set
            {
                OnPhotoPath2Changing(value);
                ReportPropertyChanging("PhotoPath2");
                _PhotoPath2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoPath2");
                OnPhotoPath2Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoPath2;
        partial void OnPhotoPath2Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoPath2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoPath3
        {
            get
            {
                return _PhotoPath3;
            }
            set
            {
                OnPhotoPath3Changing(value);
                ReportPropertyChanging("PhotoPath3");
                _PhotoPath3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoPath3");
                OnPhotoPath3Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoPath3;
        partial void OnPhotoPath3Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoPath3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoPath4
        {
            get
            {
                return _PhotoPath4;
            }
            set
            {
                OnPhotoPath4Changing(value);
                ReportPropertyChanging("PhotoPath4");
                _PhotoPath4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoPath4");
                OnPhotoPath4Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoPath4;
        partial void OnPhotoPath4Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoPath4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoPath5
        {
            get
            {
                return _PhotoPath5;
            }
            set
            {
                OnPhotoPath5Changing(value);
                ReportPropertyChanging("PhotoPath5");
                _PhotoPath5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoPath5");
                OnPhotoPath5Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoPath5;
        partial void OnPhotoPath5Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoPath5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoThumbPath1
        {
            get
            {
                return _PhotoThumbPath1;
            }
            set
            {
                OnPhotoThumbPath1Changing(value);
                ReportPropertyChanging("PhotoThumbPath1");
                _PhotoThumbPath1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoThumbPath1");
                OnPhotoThumbPath1Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoThumbPath1;
        partial void OnPhotoThumbPath1Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoThumbPath1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoThumbPath2
        {
            get
            {
                return _PhotoThumbPath2;
            }
            set
            {
                OnPhotoThumbPath2Changing(value);
                ReportPropertyChanging("PhotoThumbPath2");
                _PhotoThumbPath2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoThumbPath2");
                OnPhotoThumbPath2Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoThumbPath2;
        partial void OnPhotoThumbPath2Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoThumbPath2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoThumbPath3
        {
            get
            {
                return _PhotoThumbPath3;
            }
            set
            {
                OnPhotoThumbPath3Changing(value);
                ReportPropertyChanging("PhotoThumbPath3");
                _PhotoThumbPath3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoThumbPath3");
                OnPhotoThumbPath3Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoThumbPath3;
        partial void OnPhotoThumbPath3Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoThumbPath3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoThumbPath4
        {
            get
            {
                return _PhotoThumbPath4;
            }
            set
            {
                OnPhotoThumbPath4Changing(value);
                ReportPropertyChanging("PhotoThumbPath4");
                _PhotoThumbPath4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoThumbPath4");
                OnPhotoThumbPath4Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoThumbPath4;
        partial void OnPhotoThumbPath4Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoThumbPath4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoThumbPath5
        {
            get
            {
                return _PhotoThumbPath5;
            }
            set
            {
                OnPhotoThumbPath5Changing(value);
                ReportPropertyChanging("PhotoThumbPath5");
                _PhotoThumbPath5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoThumbPath5");
                OnPhotoThumbPath5Changed();
            }
        }
        private Nullable<global::System.Int32> _PhotoThumbPath5;
        partial void OnPhotoThumbPath5Changing(Nullable<global::System.Int32> value);
        partial void OnPhotoThumbPath5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiveApplicants
        {
            get
            {
                return _ReceiveApplicants;
            }
            set
            {
                OnReceiveApplicantsChanging(value);
                ReportPropertyChanging("ReceiveApplicants");
                _ReceiveApplicants = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiveApplicants");
                OnReceiveApplicantsChanged();
            }
        }
        private global::System.String _ReceiveApplicants;
        partial void OnReceiveApplicantsChanging(global::System.String value);
        partial void OnReceiveApplicantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalSiteApplicant
        {
            get
            {
                return _ExternalSiteApplicant;
            }
            set
            {
                OnExternalSiteApplicantChanging(value);
                ReportPropertyChanging("ExternalSiteApplicant");
                _ExternalSiteApplicant = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalSiteApplicant");
                OnExternalSiteApplicantChanged();
            }
        }
        private global::System.String _ExternalSiteApplicant;
        partial void OnExternalSiteApplicantChanging(global::System.String value);
        partial void OnExternalSiteApplicantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalViews
        {
            get
            {
                return _TotalViews;
            }
            set
            {
                OnTotalViewsChanging(value);
                ReportPropertyChanging("TotalViews");
                _TotalViews = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalViews");
                OnTotalViewsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalViews;
        partial void OnTotalViewsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalViewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SkillId;
        partial void OnSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalaryCurrencyId
        {
            get
            {
                return _SalaryCurrencyId;
            }
            set
            {
                OnSalaryCurrencyIdChanging(value);
                ReportPropertyChanging("SalaryCurrencyId");
                _SalaryCurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalaryCurrencyId");
                OnSalaryCurrencyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SalaryCurrencyId;
        partial void OnSalaryCurrencyIdChanging(Nullable<global::System.Int32> value);
        partial void OnSalaryCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRssJob
        {
            get
            {
                return _IsRssJob;
            }
            set
            {
                OnIsRssJobChanging(value);
                ReportPropertyChanging("IsRssJob");
                _IsRssJob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRssJob");
                OnIsRssJobChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRssJob;
        partial void OnIsRssJobChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRssJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.String _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.String value);
        partial void OnReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsShine
        {
            get
            {
                return _IsShine;
            }
            set
            {
                OnIsShineChanging(value);
                ReportPropertyChanging("IsShine");
                _IsShine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsShine");
                OnIsShineChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsShine;
        partial void OnIsShineChanging(Nullable<global::System.Boolean> value);
        partial void OnIsShineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNaukri
        {
            get
            {
                return _IsNaukri;
            }
            set
            {
                OnIsNaukriChanging(value);
                ReportPropertyChanging("IsNaukri");
                _IsNaukri = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNaukri");
                OnIsNaukriChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNaukri;
        partial void OnIsNaukriChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNaukriChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserJob_Job", "FeedUserJob")]
        public EntityCollection<FeedUserJob> FeedUserJobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserJob>("huntableModel.FK_FeedUserJob_Job", "FeedUserJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserJob>("huntableModel.FK_FeedUserJob_Job", "FeedUserJob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Job_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Job_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_Job_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_Job_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterCurrency", "MasterCurrencyType")]
        public MasterCurrencyType MasterCurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_Job_MasterCurrency", "MasterCurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_Job_MasterCurrency", "MasterCurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCurrencyType> MasterCurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_Job_MasterCurrency", "MasterCurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCurrencyType>("huntableModel.FK_Job_MasterCurrency", "MasterCurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterIndustry", "MasterIndustry")]
        public MasterIndustry MasterIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_Job_MasterIndustry", "MasterIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_Job_MasterIndustry", "MasterIndustry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIndustry> MasterIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_Job_MasterIndustry", "MasterIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIndustry>("huntableModel.FK_Job_MasterIndustry", "MasterIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterJobType", "MasterJobType")]
        public MasterJobType MasterJobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_Job_MasterJobType", "MasterJobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_Job_MasterJobType", "MasterJobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterJobType> MasterJobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_Job_MasterJobType", "MasterJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterJobType>("huntableModel.FK_Job_MasterJobType", "MasterJobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterSector", "MasterSector")]
        public MasterSector MasterSector
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSector>("huntableModel.FK_Job_MasterSector", "MasterSector").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSector>("huntableModel.FK_Job_MasterSector", "MasterSector").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSector> MasterSectorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSector>("huntableModel.FK_Job_MasterSector", "MasterSector");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSector>("huntableModel.FK_Job_MasterSector", "MasterSector", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_Job_MasterSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_Job_MasterSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_Job_MasterSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_Job_MasterSkill", "MasterSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_JobFeed_JobFeed", "JobFeed")]
        public EntityCollection<JobFeed> JobFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobFeed>("huntableModel.FK_JobFeed_JobFeed", "JobFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobFeed>("huntableModel.FK_JobFeed_JobFeed", "JobFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Job_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Job_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_Job_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_Job_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="JobApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobApplication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="appliedDateTime">Initial value of the AppliedDateTime property.</param>
        public static JobApplication CreateJobApplication(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 jobId, global::System.DateTime appliedDateTime)
        {
            JobApplication jobApplication = new JobApplication();
            jobApplication.Id = id;
            jobApplication.UserId = userId;
            jobApplication.JobId = jobId;
            jobApplication.AppliedDateTime = appliedDateTime;
            return jobApplication;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AppliedDateTime
        {
            get
            {
                return _AppliedDateTime;
            }
            set
            {
                OnAppliedDateTimeChanging(value);
                ReportPropertyChanging("AppliedDateTime");
                _AppliedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppliedDateTime");
                OnAppliedDateTimeChanged();
            }
        }
        private global::System.DateTime _AppliedDateTime;
        partial void OnAppliedDateTimeChanging(global::System.DateTime value);
        partial void OnAppliedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserComments
        {
            get
            {
                return _UserComments;
            }
            set
            {
                OnUserCommentsChanging(value);
                ReportPropertyChanging("UserComments");
                _UserComments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserComments");
                OnUserCommentsChanged();
            }
        }
        private global::System.String _UserComments;
        partial void OnUserCommentsChanging(global::System.String value);
        partial void OnUserCommentsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="JobCreditsPurchased")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobCreditsPurchased : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobCreditsPurchased object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="noOfCredits">Initial value of the NoOfCredits property.</param>
        public static JobCreditsPurchased CreateJobCreditsPurchased(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 noOfCredits)
        {
            JobCreditsPurchased jobCreditsPurchased = new JobCreditsPurchased();
            jobCreditsPurchased.Id = id;
            jobCreditsPurchased.UserId = userId;
            jobCreditsPurchased.NoOfCredits = noOfCredits;
            return jobCreditsPurchased;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfCredits
        {
            get
            {
                return _NoOfCredits;
            }
            set
            {
                OnNoOfCreditsChanging(value);
                ReportPropertyChanging("NoOfCredits");
                _NoOfCredits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfCredits");
                OnNoOfCreditsChanged();
            }
        }
        private global::System.Int32 _NoOfCredits;
        partial void OnNoOfCreditsChanging(global::System.Int32 value);
        partial void OnNoOfCreditsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AmountPaid
        {
            get
            {
                return _AmountPaid;
            }
            set
            {
                OnAmountPaidChanging(value);
                ReportPropertyChanging("AmountPaid");
                _AmountPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountPaid");
                OnAmountPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _AmountPaid;
        partial void OnAmountPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDateTime
        {
            get
            {
                return _PurchaseDateTime;
            }
            set
            {
                OnPurchaseDateTimeChanging(value);
                ReportPropertyChanging("PurchaseDateTime");
                _PurchaseDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDateTime");
                OnPurchaseDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDateTime;
        partial void OnPurchaseDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.String _Purpose;
        partial void OnPurposeChanging(global::System.String value);
        partial void OnPurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedIndustry
        {
            get
            {
                return _FeaturedIndustry;
            }
            set
            {
                OnFeaturedIndustryChanging(value);
                ReportPropertyChanging("FeaturedIndustry");
                _FeaturedIndustry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedIndustry");
                OnFeaturedIndustryChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedIndustry;
        partial void OnFeaturedIndustryChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedSkill
        {
            get
            {
                return _FeaturedSkill;
            }
            set
            {
                OnFeaturedSkillChanging(value);
                ReportPropertyChanging("FeaturedSkill");
                _FeaturedSkill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedSkill");
                OnFeaturedSkillChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedSkill;
        partial void OnFeaturedSkillChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedSkillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedCountry
        {
            get
            {
                return _FeaturedCountry;
            }
            set
            {
                OnFeaturedCountryChanging(value);
                ReportPropertyChanging("FeaturedCountry");
                _FeaturedCountry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedCountry");
                OnFeaturedCountryChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedCountry;
        partial void OnFeaturedCountryChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedInterests
        {
            get
            {
                return _FeaturedInterests;
            }
            set
            {
                OnFeaturedInterestsChanging(value);
                ReportPropertyChanging("FeaturedInterests");
                _FeaturedInterests = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedInterests");
                OnFeaturedInterestsChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedInterests;
        partial void OnFeaturedInterestsChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedInterestsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobPackage
        {
            get
            {
                return _JobPackage;
            }
            set
            {
                OnJobPackageChanging(value);
                ReportPropertyChanging("JobPackage");
                _JobPackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobPackage");
                OnJobPackageChanged();
            }
        }
        private Nullable<global::System.Int32> _JobPackage;
        partial void OnJobPackageChanging(Nullable<global::System.Int32> value);
        partial void OnJobPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalAmount;
        partial void OnTotalAmountChanging(Nullable<global::System.Int32> value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VatAmount
        {
            get
            {
                return _VatAmount;
            }
            set
            {
                OnVatAmountChanging(value);
                ReportPropertyChanging("VatAmount");
                _VatAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VatAmount");
                OnVatAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _VatAmount;
        partial void OnVatAmountChanging(Nullable<global::System.Int32> value);
        partial void OnVatAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalAmountAftervat
        {
            get
            {
                return _TotalAmountAftervat;
            }
            set
            {
                OnTotalAmountAftervatChanging(value);
                ReportPropertyChanging("TotalAmountAftervat");
                _TotalAmountAftervat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmountAftervat");
                OnTotalAmountAftervatChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalAmountAftervat;
        partial void OnTotalAmountAftervatChanging(Nullable<global::System.Int32> value);
        partial void OnTotalAmountAftervatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceNo
        {
            get
            {
                return _InvoiceNo;
            }
            set
            {
                OnInvoiceNoChanging(value);
                ReportPropertyChanging("InvoiceNo");
                _InvoiceNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceNo");
                OnInvoiceNoChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceNo;
        partial void OnInvoiceNoChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Premiumpackage
        {
            get
            {
                return _Premiumpackage;
            }
            set
            {
                OnPremiumpackageChanging(value);
                ReportPropertyChanging("Premiumpackage");
                _Premiumpackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Premiumpackage");
                OnPremiumpackageChanged();
            }
        }
        private Nullable<global::System.Int32> _Premiumpackage;
        partial void OnPremiumpackageChanging(Nullable<global::System.Int32> value);
        partial void OnPremiumpackageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="JobFeed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobFeed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobFeed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        public static JobFeed CreateJobFeed(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 jobId, global::System.DateTime createdDateTime)
        {
            JobFeed jobFeed = new JobFeed();
            jobFeed.Id = id;
            jobFeed.UserId = userId;
            jobFeed.JobId = jobId;
            jobFeed.CreatedDateTime = createdDateTime;
            return jobFeed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_JobFeed_JobFeed", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("huntableModel.FK_JobFeed_JobFeed", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("huntableModel.FK_JobFeed_JobFeed", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("huntableModel.FK_JobFeed_JobFeed", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("huntableModel.FK_JobFeed_JobFeed", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_JobFeed_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_JobFeed_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_JobFeed_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_JobFeed_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_JobFeed_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="JobsStatusDaily")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobsStatusDaily : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobsStatusDaily object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static JobsStatusDaily CreateJobsStatusDaily(global::System.Int32 id)
        {
            JobsStatusDaily jobsStatusDaily = new JobsStatusDaily();
            jobsStatusDaily.Id = id;
            return jobsStatusDaily;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfJobsUploaded
        {
            get
            {
                return _NoOfJobsUploaded;
            }
            set
            {
                OnNoOfJobsUploadedChanging(value);
                ReportPropertyChanging("NoOfJobsUploaded");
                _NoOfJobsUploaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfJobsUploaded");
                OnNoOfJobsUploadedChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfJobsUploaded;
        partial void OnNoOfJobsUploadedChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfJobsUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTime;
        partial void OnDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="Login")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Login : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Login object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Login CreateLogin(global::System.Int32 id)
        {
            Login login = new Login();
            login.Id = id;
            return login;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAdmin;
        partial void OnIsAdminChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRecuirter
        {
            get
            {
                return _IsRecuirter;
            }
            set
            {
                OnIsRecuirterChanging(value);
                ReportPropertyChanging("IsRecuirter");
                _IsRecuirter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRecuirter");
                OnIsRecuirterChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRecuirter;
        partial void OnIsRecuirterChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRecuirterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCompany
        {
            get
            {
                return _IsCompany;
            }
            set
            {
                OnIsCompanyChanging(value);
                ReportPropertyChanging("IsCompany");
                _IsCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompany");
                OnIsCompanyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCompany;
        partial void OnIsCompanyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVerified
        {
            get
            {
                return _IsVerified;
            }
            set
            {
                OnIsVerifiedChanging(value);
                ReportPropertyChanging("IsVerified");
                _IsVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerified");
                OnIsVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVerified;
        partial void OnIsVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsUser
        {
            get
            {
                return _IsUser;
            }
            set
            {
                OnIsUserChanging(value);
                ReportPropertyChanging("IsUser");
                _IsUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUser");
                OnIsUserChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsUser;
        partial void OnIsUserChanging(Nullable<global::System.Boolean> value);
        partial void OnIsUserChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterCity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterCity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterCity CreateMasterCity(global::System.Int32 id, global::System.String description)
        {
            MasterCity masterCity = new MasterCity();
            masterCity.Id = id;
            masterCity.Description = description;
            return masterCity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterCompany object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterCompany CreateMasterCompany(global::System.Int32 id, global::System.String description)
        {
            MasterCompany masterCompany = new MasterCompany();
            masterCompany.Id = id;
            masterCompany.Description = description;
            return masterCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_Logo);
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.Byte[] _Logo;
        partial void OnLogoChanging(global::System.Byte[] value);
        partial void OnLogoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterCompany", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterCompany", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterCompany", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedUserCompanies_MasterCompany", "FeaturedUserCompany")]
        public EntityCollection<FeaturedUserCompany> FeaturedUserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedUserCompany>("huntableModel.FK_FeaturedUserCompanies_MasterCompany", "FeaturedUserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedUserCompany>("huntableModel.FK_FeaturedUserCompanies_MasterCompany", "FeaturedUserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCompany_MasterCompany", "PreferredJobUserCompany")]
        public EntityCollection<PreferredJobUserCompany> PreferredJobUserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserCompany>("huntableModel.FK_PreferredJobUserCompany_MasterCompany", "PreferredJobUserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserCompany>("huntableModel.FK_PreferredJobUserCompany_MasterCompany", "PreferredJobUserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredUserCompanies_MasterCompany", "PreferredUserCompany")]
        public EntityCollection<PreferredUserCompany> PreferredUserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredUserCompany>("huntableModel.FK_PreferredUserCompanies_MasterCompany", "PreferredUserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredUserCompany>("huntableModel.FK_PreferredUserCompanies_MasterCompany", "PreferredUserCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterCountry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterCountry CreateMasterCountry(global::System.Int32 id, global::System.String description)
        {
            MasterCountry masterCountry = new MasterCountry();
            masterCountry.Id = id;
            masterCountry.Description = description;
            return masterCountry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Address_MasterCountry", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("huntableModel.FK_Address_MasterCountry", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("huntableModel.FK_Address_MasterCountry", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterCountry", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("huntableModel.FK_Company_MasterCountry", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("huntableModel.FK_Company_MasterCountry", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_MasterCountry", "EducationHistory")]
        public EntityCollection<EducationHistory> EducationHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_MasterCountry", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_MasterCountry", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterCountry", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterCountry", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterCountry", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedCountry_MasterCountry", "FeaturedCountry")]
        public EntityCollection<FeaturedCountry> FeaturedCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedCountry>("huntableModel.FK_FeaturedCountry_MasterCountry", "FeaturedCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedCountry>("huntableModel.FK_FeaturedCountry_MasterCountry", "FeaturedCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCountry_MasterCountry", "PreferredFeedUserCountry")]
        public EntityCollection<PreferredFeedUserCountry> PreferredFeedUserCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserCountry>("huntableModel.FK_PreferredFeedUserCountry_MasterCountry", "PreferredFeedUserCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserCountry>("huntableModel.FK_PreferredFeedUserCountry_MasterCountry", "PreferredFeedUserCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCountry_MasterCountry", "PreferredJobUserCountry")]
        public EntityCollection<PreferredJobUserCountry> PreferredJobUserCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserCountry>("huntableModel.FK_PreferredJobUserCountry_MasterCountry", "PreferredJobUserCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserCountry>("huntableModel.FK_PreferredJobUserCountry_MasterCountry", "PreferredJobUserCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterCountry", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_MasterCountry", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_MasterCountry", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_MasterCountry", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("huntableModel.FK_User_MasterCountry", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("huntableModel.FK_User_MasterCountry", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterCurrencyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterCurrencyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterCurrencyType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterCurrencyType CreateMasterCurrencyType(global::System.Int32 id, global::System.String description)
        {
            MasterCurrencyType masterCurrencyType = new MasterCurrencyType();
            masterCurrencyType.ID = id;
            masterCurrencyType.Description = description;
            return masterCurrencyType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_CurrencyType", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_CurrencyType", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_CurrencyType", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSalary_MasterCurrencyType", "PreferredJobUserSalary")]
        public EntityCollection<PreferredJobUserSalary> PreferredJobUserSalaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserSalary>("huntableModel.FK_PreferredJobUserSalary_MasterCurrencyType", "PreferredJobUserSalary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserSalary>("huntableModel.FK_PreferredJobUserSalary_MasterCurrencyType", "PreferredJobUserSalary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterCurrency", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_MasterCurrency", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_MasterCurrency", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterEmployee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterEmployee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterEmployee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="noofEmployess">Initial value of the NoofEmployess property.</param>
        /// <param name="min">Initial value of the Min property.</param>
        /// <param name="max">Initial value of the Max property.</param>
        public static MasterEmployee CreateMasterEmployee(global::System.Int32 id, global::System.String noofEmployess, global::System.Int32 min, global::System.Int32 max)
        {
            MasterEmployee masterEmployee = new MasterEmployee();
            masterEmployee.Id = id;
            masterEmployee.NoofEmployess = noofEmployess;
            masterEmployee.Min = min;
            masterEmployee.Max = max;
            return masterEmployee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoofEmployess
        {
            get
            {
                return _NoofEmployess;
            }
            set
            {
                OnNoofEmployessChanging(value);
                ReportPropertyChanging("NoofEmployess");
                _NoofEmployess = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoofEmployess");
                OnNoofEmployessChanged();
            }
        }
        private global::System.String _NoofEmployess;
        partial void OnNoofEmployessChanging(global::System.String value);
        partial void OnNoofEmployessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Min
        {
            get
            {
                return _Min;
            }
            set
            {
                OnMinChanging(value);
                ReportPropertyChanging("Min");
                _Min = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Min");
                OnMinChanged();
            }
        }
        private global::System.Int32 _Min;
        partial void OnMinChanging(global::System.Int32 value);
        partial void OnMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Max
        {
            get
            {
                return _Max;
            }
            set
            {
                OnMaxChanging(value);
                ReportPropertyChanging("Max");
                _Max = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Max");
                OnMaxChanged();
            }
        }
        private global::System.Int32 _Max;
        partial void OnMaxChanging(global::System.Int32 value);
        partial void OnMaxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterEmployees", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("huntableModel.FK_Company_MasterEmployees", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("huntableModel.FK_Company_MasterEmployees", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterEmployees1", "Company")]
        public EntityCollection<Company> Companies1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("huntableModel.FK_Company_MasterEmployees1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("huntableModel.FK_Company_MasterEmployees1", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterExpYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterExpYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterExpYear object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterExpYear CreateMasterExpYear(global::System.Int32 id, global::System.String description)
        {
            MasterExpYear masterExpYear = new MasterExpYear();
            masterExpYear.Id = id;
            masterExpYear.Description = description;
            return masterExpYear;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterGender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterGender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterGender object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterGender CreateMasterGender(global::System.Int32 id, global::System.String description)
        {
            MasterGender masterGender = new MasterGender();
            masterGender.Id = id;
            masterGender.Description = description;
            return masterGender;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterHour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterHour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterHour object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterHour CreateMasterHour(global::System.Int32 id, global::System.String description)
        {
            MasterHour masterHour = new MasterHour();
            masterHour.ID = id;
            masterHour.Description = description;
            return masterHour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Hours", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Hours", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Hours", "EmploymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterIndustry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterIndustry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterIndustry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterIndustry CreateMasterIndustry(global::System.Int32 id, global::System.String description)
        {
            MasterIndustry masterIndustry = new MasterIndustry();
            masterIndustry.Id = id;
            masterIndustry.Description = description;
            return masterIndustry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_MasterIndustry", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("huntableModel.FK_Company_MasterIndustry", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("huntableModel.FK_Company_MasterIndustry", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterIndustry", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterIndustry", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterIndustry", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedIndustry_MasterIndustry", "FeaturedIndustry")]
        public EntityCollection<FeaturedIndustry> FeaturedIndustries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedIndustry>("huntableModel.FK_FeaturedIndustry_MasterIndustry", "FeaturedIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedIndustry>("huntableModel.FK_FeaturedIndustry_MasterIndustry", "FeaturedIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserIndustry_MasterIndustry", "PreferredFeedUserIndustry")]
        public EntityCollection<PreferredFeedUserIndustry> PreferredFeedUserIndustries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserIndustry>("huntableModel.FK_PreferredFeedUserIndustry_MasterIndustry", "PreferredFeedUserIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserIndustry>("huntableModel.FK_PreferredFeedUserIndustry_MasterIndustry", "PreferredFeedUserIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserIndustry_MasterIndustry", "PreferredJobUserIndustry")]
        public EntityCollection<PreferredJobUserIndustry> PreferredJobUserIndustries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserIndustry>("huntableModel.FK_PreferredJobUserIndustry_MasterIndustry", "PreferredJobUserIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserIndustry>("huntableModel.FK_PreferredJobUserIndustry_MasterIndustry", "PreferredJobUserIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterIndustry", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_MasterIndustry", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_MasterIndustry", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterInterest CreateMasterInterest(global::System.Int32 id, global::System.String description)
        {
            MasterInterest masterInterest = new MasterInterest();
            masterInterest.Id = id;
            masterInterest.Description = description;
            return masterInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedInterest_MasterInterest", "FeaturedInterest")]
        public EntityCollection<FeaturedInterest> FeaturedInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedInterest>("huntableModel.FK_FeaturedInterest_MasterInterest", "FeaturedInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedInterest>("huntableModel.FK_FeaturedInterest_MasterInterest", "FeaturedInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserInterest_MasterInterest", "FeedUserInterest")]
        public EntityCollection<FeedUserInterest> FeedUserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserInterest>("huntableModel.FK_FeedUserInterest_MasterInterest", "FeedUserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserInterest>("huntableModel.FK_FeedUserInterest_MasterInterest", "FeedUserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserInterest_MasterInterest", "PreferredFeedUserInterest")]
        public EntityCollection<PreferredFeedUserInterest> PreferredFeedUserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserInterest>("huntableModel.FK_PreferredFeedUserInterest_MasterInterest", "PreferredFeedUserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserInterest>("huntableModel.FK_PreferredFeedUserInterest_MasterInterest", "PreferredFeedUserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserInterest_MasterInterest", "PreferredJobUserInterest")]
        public EntityCollection<PreferredJobUserInterest> PreferredJobUserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserInterest>("huntableModel.FK_PreferredJobUserInterest_MasterInterest", "PreferredJobUserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserInterest>("huntableModel.FK_PreferredJobUserInterest_MasterInterest", "PreferredJobUserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserInterest_MasterInterest", "UserInterest")]
        public EntityCollection<UserInterest> UserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("huntableModel.FK_UserInterest_MasterInterest", "UserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("huntableModel.FK_UserInterest_MasterInterest", "UserInterest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="masterinterest_BK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class masterinterest_BK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new masterinterest_BK object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static masterinterest_BK Createmasterinterest_BK(global::System.Int32 id, global::System.String description)
        {
            masterinterest_BK masterinterest_BK = new masterinterest_BK();
            masterinterest_BK.Id = id;
            masterinterest_BK.Description = description;
            return masterinterest_BK;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterInvitationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterInvitationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterInvitationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterInvitationType CreateMasterInvitationType(global::System.Int32 id, global::System.String description)
        {
            MasterInvitationType masterInvitationType = new MasterInvitationType();
            masterInvitationType.Id = id;
            masterInvitationType.Description = description;
            return masterInvitationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Invitation_MasterInvitationType", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("huntableModel.FK_Invitation_MasterInvitationType", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("huntableModel.FK_Invitation_MasterInvitationType", "Invitation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterJobPackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterJobPackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterJobPackage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="noOfJobs">Initial value of the NoOfJobs property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static MasterJobPackage CreateMasterJobPackage(global::System.Int32 id, global::System.Int32 noOfJobs, global::System.Decimal price)
        {
            MasterJobPackage masterJobPackage = new MasterJobPackage();
            masterJobPackage.Id = id;
            masterJobPackage.NoOfJobs = noOfJobs;
            masterJobPackage.Price = price;
            return masterJobPackage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfJobs
        {
            get
            {
                return _NoOfJobs;
            }
            set
            {
                OnNoOfJobsChanging(value);
                ReportPropertyChanging("NoOfJobs");
                _NoOfJobs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfJobs");
                OnNoOfJobsChanged();
            }
        }
        private global::System.Int32 _NoOfJobs;
        partial void OnNoOfJobsChanging(global::System.Int32 value);
        partial void OnNoOfJobsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterJobType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterJobType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterJobType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterJobType CreateMasterJobType(global::System.Int32 id, global::System.String description)
        {
            MasterJobType masterJobType = new MasterJobType();
            masterJobType.Id = id;
            masterJobType.Description = description;
            return masterJobType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_MasterSalary_MasterJobType", "MasterSalary")]
        public EntityCollection<MasterSalary> MasterSalaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MasterSalary>("huntableModel.FK_MasterSalary_MasterJobType", "MasterSalary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MasterSalary>("huntableModel.FK_MasterSalary_MasterJobType", "MasterSalary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserJobType_MasterJobType", "PreferredJobUserJobType")]
        public EntityCollection<PreferredJobUserJobType> PreferredJobUserJobTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserJobType>("huntableModel.FK_PreferredJobUserJobType_MasterJobType", "PreferredJobUserJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserJobType>("huntableModel.FK_PreferredJobUserJobType_MasterJobType", "PreferredJobUserJobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterJobType", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_MasterJobType", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_MasterJobType", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterLanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterLanguage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterLanguage CreateMasterLanguage(global::System.Int32 id, global::System.String description)
        {
            MasterLanguage masterLanguage = new MasterLanguage();
            masterLanguage.Id = id;
            masterLanguage.Description = description;
            return masterLanguage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserLanguage_MasterLanguage", "UserLanguage")]
        public EntityCollection<UserLanguage> UserLanguages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserLanguage>("huntableModel.FK_UserLanguage_MasterLanguage", "UserLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserLanguage>("huntableModel.FK_UserLanguage_MasterLanguage", "UserLanguage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterLevel object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="rank">Initial value of the Rank property.</param>
        /// <param name="displayText">Initial value of the DisplayText property.</param>
        public static MasterLevel CreateMasterLevel(global::System.Int32 id, global::System.Int32 rank, global::System.String displayText)
        {
            MasterLevel masterLevel = new MasterLevel();
            masterLevel.ID = id;
            masterLevel.Rank = rank;
            masterLevel.DisplayText = displayText;
            return masterLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.Int32 _Rank;
        partial void OnRankChanging(global::System.Int32 value);
        partial void OnRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayText
        {
            get
            {
                return _DisplayText;
            }
            set
            {
                OnDisplayTextChanging(value);
                ReportPropertyChanging("DisplayText");
                _DisplayText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayText");
                OnDisplayTextChanged();
            }
        }
        private global::System.String _DisplayText;
        partial void OnDisplayTextChanging(global::System.String value);
        partial void OnDisplayTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_MasterLevel", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterLevel", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_MasterLevel", "EmploymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterMaximumSalary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterMaximumSalary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterMaximumSalary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MasterMaximumSalary CreateMasterMaximumSalary(global::System.Int32 id)
        {
            MasterMaximumSalary masterMaximumSalary = new MasterMaximumSalary();
            masterMaximumSalary.Id = id;
            return masterMaximumSalary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaximumSalary
        {
            get
            {
                return _MaximumSalary;
            }
            set
            {
                OnMaximumSalaryChanging(value);
                ReportPropertyChanging("MaximumSalary");
                _MaximumSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumSalary");
                OnMaximumSalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _MaximumSalary;
        partial void OnMaximumSalaryChanging(Nullable<global::System.Int32> value);
        partial void OnMaximumSalaryChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterMessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterMessageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterMessageType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterMessageType CreateMasterMessageType(global::System.Int32 id, global::System.String description)
        {
            MasterMessageType masterMessageType = new MasterMessageType();
            masterMessageType.Id = id;
            masterMessageType.Description = description;
            return masterMessageType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessageType_MasterMessageType", "UserMessageType")]
        public EntityCollection<UserMessageType> UserMessageTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessageType>("huntableModel.FK_UserMessageType_MasterMessageType", "UserMessageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessageType>("huntableModel.FK_UserMessageType_MasterMessageType", "UserMessageType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterMinimumSalary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterMinimumSalary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterMinimumSalary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MasterMinimumSalary CreateMasterMinimumSalary(global::System.Int32 id)
        {
            MasterMinimumSalary masterMinimumSalary = new MasterMinimumSalary();
            masterMinimumSalary.Id = id;
            return masterMinimumSalary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinimumSalary
        {
            get
            {
                return _MinimumSalary;
            }
            set
            {
                OnMinimumSalaryChanging(value);
                ReportPropertyChanging("MinimumSalary");
                _MinimumSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumSalary");
                OnMinimumSalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _MinimumSalary;
        partial void OnMinimumSalaryChanging(Nullable<global::System.Int32> value);
        partial void OnMinimumSalaryChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterMonth object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterMonth CreateMasterMonth(global::System.Int32 id, global::System.String description)
        {
            MasterMonth masterMonth = new MasterMonth();
            masterMonth.ID = id;
            masterMonth.Description = description;
            return masterMonth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Month", "Association")]
        public EntityCollection<Association> Associations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Association>("huntableModel.FK_Association_Month", "Association");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Association>("huntableModel.FK_Association_Month", "Association", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Month1", "Association")]
        public EntityCollection<Association> Associations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Association>("huntableModel.FK_Association_Month1", "Association");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Association>("huntableModel.FK_Association_Month1", "Association", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Month", "EducationHistory")]
        public EntityCollection<EducationHistory> EducationHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Month", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Month", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Month1", "EducationHistory")]
        public EntityCollection<EducationHistory> EducationHistories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Month1", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Month1", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Month", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Month", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Month", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Month1", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Month1", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Month1", "EmploymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterNationality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterNationality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterNationality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterNationality CreateMasterNationality(global::System.Int32 id, global::System.String description)
        {
            MasterNationality masterNationality = new MasterNationality();
            masterNationality.Id = id;
            masterNationality.Description = description;
            return masterNationality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_MasterNationality", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("huntableModel.FK_User_MasterNationality", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("huntableModel.FK_User_MasterNationality", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterPaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterPaymentType CreateMasterPaymentType(global::System.Int32 id, global::System.String description)
        {
            MasterPaymentType masterPaymentType = new MasterPaymentType();
            masterPaymentType.Id = id;
            masterPaymentType.Description = description;
            return masterPaymentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_PaymentType", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_PaymentType", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_PaymentType", "EmploymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterPeople")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterPeople : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterPeople object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MasterPeople CreateMasterPeople(global::System.Int32 id)
        {
            MasterPeople masterPeople = new MasterPeople();
            masterPeople.Id = id;
            return masterPeople;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MutualFollowerId
        {
            get
            {
                return _MutualFollowerId;
            }
            set
            {
                OnMutualFollowerIdChanging(value);
                ReportPropertyChanging("MutualFollowerId");
                _MutualFollowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MutualFollowerId");
                OnMutualFollowerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MutualFollowerId;
        partial void OnMutualFollowerIdChanging(Nullable<global::System.Int32> value);
        partial void OnMutualFollowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMutualFollowersFollower
        {
            get
            {
                return _IsMutualFollowersFollower;
            }
            set
            {
                OnIsMutualFollowersFollowerChanging(value);
                ReportPropertyChanging("IsMutualFollowersFollower");
                _IsMutualFollowersFollower = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMutualFollowersFollower");
                OnIsMutualFollowersFollowerChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMutualFollowersFollower;
        partial void OnIsMutualFollowersFollowerChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMutualFollowersFollowerChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterProfileImportSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterProfileImportSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterProfileImportSource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterProfileImportSource CreateMasterProfileImportSource(global::System.Int32 id, global::System.String description)
        {
            MasterProfileImportSource masterProfileImportSource = new MasterProfileImportSource();
            masterProfileImportSource.Id = id;
            masterProfileImportSource.Description = description;
            return masterProfileImportSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterSalary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterSalary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterSalary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MasterSalary CreateMasterSalary(global::System.Int32 id)
        {
            MasterSalary masterSalary = new MasterSalary();
            masterSalary.Id = id;
            return masterSalary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _Salary;
        partial void OnSalaryChanging(Nullable<global::System.Int32> value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobTypeId
        {
            get
            {
                return _JobTypeId;
            }
            set
            {
                OnJobTypeIdChanging(value);
                ReportPropertyChanging("JobTypeId");
                _JobTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeId");
                OnJobTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobTypeId;
        partial void OnJobTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_MasterSalary_MasterJobType", "MasterJobType")]
        public MasterJobType MasterJobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_MasterSalary_MasterJobType", "MasterJobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_MasterSalary_MasterJobType", "MasterJobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterJobType> MasterJobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_MasterSalary_MasterJobType", "MasterJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterJobType>("huntableModel.FK_MasterSalary_MasterJobType", "MasterJobType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterSector")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterSector : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterSector object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterSector CreateMasterSector(global::System.Int32 id, global::System.String description)
        {
            MasterSector masterSector = new MasterSector();
            masterSector.Id = id;
            masterSector.Description = description;
            return masterSector;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterSector", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_MasterSector", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_MasterSector", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MasterSkill CreateMasterSkill(global::System.Int32 id)
        {
            MasterSkill masterSkill = new MasterSkill();
            masterSkill.Id = id;
            return masterSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedSkill_MasterSkill", "FeaturedSkill")]
        public EntityCollection<FeaturedSkill> FeaturedSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedSkill>("huntableModel.FK_FeaturedSkill_MasterSkill", "FeaturedSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedSkill>("huntableModel.FK_FeaturedSkill_MasterSkill", "FeaturedSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserSkill_MasterSkill", "FeedUserSkill")]
        public EntityCollection<FeedUserSkill> FeedUserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserSkill>("huntableModel.FK_FeedUserSkill_MasterSkill", "FeedUserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserSkill>("huntableModel.FK_FeedUserSkill_MasterSkill", "FeedUserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "PreferredFeedUserSkill")]
        public EntityCollection<PreferredFeedUserSkill> PreferredFeedUserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserSkill>("huntableModel.FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "PreferredFeedUserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserSkill>("huntableModel.FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "PreferredFeedUserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSkill_MasterSkill", "PreferredJobUserSkill")]
        public EntityCollection<PreferredJobUserSkill> PreferredJobUserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserSkill>("huntableModel.FK_PreferredJobUserSkill_MasterSkill", "PreferredJobUserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserSkill>("huntableModel.FK_PreferredJobUserSkill_MasterSkill", "PreferredJobUserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserSkill", "UserSkill")]
        public EntityCollection<UserSkill> UserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSkill>("huntableModel.FK_UserSkill", "UserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSkill>("huntableModel.FK_UserSkill", "UserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserSkill_MasterSkill", "UserEmploymentSkill")]
        public EntityCollection<UserEmploymentSkill> UserEmploymentSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEmploymentSkill>("huntableModel.FK_UserSkill_MasterSkill", "UserEmploymentSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEmploymentSkill>("huntableModel.FK_UserSkill_MasterSkill", "UserEmploymentSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_MasterSkill", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_MasterSkill", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_MasterSkill", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterState CreateMasterState(global::System.Int32 id, global::System.String description)
        {
            MasterState masterState = new MasterState();
            masterState.Id = id;
            masterState.Description = description;
            return masterState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterTitle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterTitle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MasterTitle CreateMasterTitle(global::System.Int32 id, global::System.String description)
        {
            MasterTitle masterTitle = new MasterTitle();
            masterTitle.Id = id;
            masterTitle.Description = description;
            return masterTitle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="MasterYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MasterYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MasterYear object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static MasterYear CreateMasterYear(global::System.Int32 id)
        {
            MasterYear masterYear = new MasterYear();
            masterYear.ID = id;
            return masterYear;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Year", "Association")]
        public EntityCollection<Association> Associations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Association>("huntableModel.FK_Association_Year", "Association");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Association>("huntableModel.FK_Association_Year", "Association", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_Year1", "Association")]
        public EntityCollection<Association> Associations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Association>("huntableModel.FK_Association_Year1", "Association");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Association>("huntableModel.FK_Association_Year1", "Association", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Year", "EducationHistory")]
        public EntityCollection<EducationHistory> EducationHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Year", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Year", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_Year1", "EducationHistory")]
        public EntityCollection<EducationHistory> EducationHistories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Year1", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_Year1", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Year", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Year", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Year", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_Year1", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Year1", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_Year1", "EmploymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new News object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="picturePath">Initial value of the PicturePath property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        public static News CreateNews(global::System.Int32 id, global::System.String title, global::System.String picturePath, global::System.DateTime createdDateTime)
        {
            News news = new News();
            news.Id = id;
            news.Title = title;
            news.PicturePath = picturePath;
            news.CreatedDateTime = createdDateTime;
            return news;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PicturePath
        {
            get
            {
                return _PicturePath;
            }
            set
            {
                OnPicturePathChanging(value);
                ReportPropertyChanging("PicturePath");
                _PicturePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PicturePath");
                OnPicturePathChanged();
            }
        }
        private global::System.String _PicturePath;
        partial void OnPicturePathChanging(global::System.String value);
        partial void OnPicturePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String link
        {
            get
            {
                return _link;
            }
            set
            {
                OnlinkChanging(value);
                ReportPropertyChanging("link");
                _link = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("link");
                OnlinkChanged();
            }
        }
        private global::System.String _link;
        partial void OnlinkChanging(global::System.String value);
        partial void OnlinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PicturePathId
        {
            get
            {
                return _PicturePathId;
            }
            set
            {
                OnPicturePathIdChanging(value);
                ReportPropertyChanging("PicturePathId");
                _PicturePathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PicturePathId");
                OnPicturePathIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PicturePathId;
        partial void OnPicturePathIdChanging(Nullable<global::System.Int32> value);
        partial void OnPicturePathIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="OAuthToken")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OAuthToken : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OAuthToken object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="secret">Initial value of the Secret property.</param>
        public static OAuthToken CreateOAuthToken(global::System.Int32 id, global::System.Int32 userId, global::System.String secret)
        {
            OAuthToken oAuthToken = new OAuthToken();
            oAuthToken.Id = id;
            oAuthToken.UserId = userId;
            oAuthToken.Secret = secret;
            return oAuthToken;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                OnProviderChanging(value);
                ReportPropertyChanging("Provider");
                _Provider = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Provider");
                OnProviderChanged();
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserId
        {
            get
            {
                return _ProviderUserId;
            }
            set
            {
                OnProviderUserIdChanging(value);
                ReportPropertyChanging("ProviderUserId");
                _ProviderUserId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderUserId");
                OnProviderUserIdChanged();
            }
        }
        private global::System.String _ProviderUserId;
        partial void OnProviderUserIdChanging(global::System.String value);
        partial void OnProviderUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserName
        {
            get
            {
                return _ProviderUserName;
            }
            set
            {
                OnProviderUserNameChanging(value);
                ReportPropertyChanging("ProviderUserName");
                _ProviderUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderUserName");
                OnProviderUserNameChanged();
            }
        }
        private global::System.String _ProviderUserName;
        partial void OnProviderUserNameChanging(global::System.String value);
        partial void OnProviderUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Secret
        {
            get
            {
                return _Secret;
            }
            set
            {
                OnSecretChanging(value);
                ReportPropertyChanging("Secret");
                _Secret = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Secret");
                OnSecretChanged();
            }
        }
        private global::System.String _Secret;
        partial void OnSecretChanging(global::System.String value);
        partial void OnSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireOn
        {
            get
            {
                return _ExpireOn;
            }
            set
            {
                OnExpireOnChanging(value);
                ReportPropertyChanging("ExpireOn");
                _ExpireOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireOn");
                OnExpireOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireOn;
        partial void OnExpireOnChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_OAuthToken_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_OAuthToken_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_OAuthToken_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_OAuthToken_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_OAuthToken_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserCompaniesFollwer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserCompaniesFollwer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserCompaniesFollwer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static PreferredFeedUserCompaniesFollwer CreatePreferredFeedUserCompaniesFollwer(global::System.Int32 id, global::System.Int32 companyID)
        {
            PreferredFeedUserCompaniesFollwer preferredFeedUserCompaniesFollwer = new PreferredFeedUserCompaniesFollwer();
            preferredFeedUserCompaniesFollwer.Id = id;
            preferredFeedUserCompaniesFollwer.CompanyID = companyID;
            return preferredFeedUserCompaniesFollwer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FollowingUserId
        {
            get
            {
                return _FollowingUserId;
            }
            set
            {
                OnFollowingUserIdChanging(value);
                ReportPropertyChanging("FollowingUserId");
                _FollowingUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowingUserId");
                OnFollowingUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FollowingUserId;
        partial void OnFollowingUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnFollowingUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTime;
        partial void OnDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCompany
        {
            get
            {
                return _IsCompany;
            }
            set
            {
                OnIsCompanyChanging(value);
                ReportPropertyChanging("IsCompany");
                _IsCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompany");
                OnIsCompanyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCompany;
        partial void OnIsCompanyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCompanyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCompaniesFollwers_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCompaniesFollwers_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserCountry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterCountryId">Initial value of the MasterCountryId property.</param>
        public static PreferredFeedUserCountry CreatePreferredFeedUserCountry(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterCountryId)
        {
            PreferredFeedUserCountry preferredFeedUserCountry = new PreferredFeedUserCountry();
            preferredFeedUserCountry.Id = id;
            preferredFeedUserCountry.UserId = userId;
            preferredFeedUserCountry.MasterCountryId = masterCountryId;
            return preferredFeedUserCountry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterCountryId
        {
            get
            {
                return _MasterCountryId;
            }
            set
            {
                OnMasterCountryIdChanging(value);
                ReportPropertyChanging("MasterCountryId");
                _MasterCountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterCountryId");
                OnMasterCountryIdChanged();
            }
        }
        private global::System.Int32 _MasterCountryId;
        partial void OnMasterCountryIdChanging(global::System.Int32 value);
        partial void OnMasterCountryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCountry_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_PreferredFeedUserCountry_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_PreferredFeedUserCountry_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_PreferredFeedUserCountry_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_PreferredFeedUserCountry_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCountry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserCountry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserCountry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserCountry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserCountry_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserIndustry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserIndustry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserIndustry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterIndustryId">Initial value of the MasterIndustryId property.</param>
        public static PreferredFeedUserIndustry CreatePreferredFeedUserIndustry(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterIndustryId)
        {
            PreferredFeedUserIndustry preferredFeedUserIndustry = new PreferredFeedUserIndustry();
            preferredFeedUserIndustry.Id = id;
            preferredFeedUserIndustry.UserId = userId;
            preferredFeedUserIndustry.MasterIndustryId = masterIndustryId;
            return preferredFeedUserIndustry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterIndustryId
        {
            get
            {
                return _MasterIndustryId;
            }
            set
            {
                OnMasterIndustryIdChanging(value);
                ReportPropertyChanging("MasterIndustryId");
                _MasterIndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterIndustryId");
                OnMasterIndustryIdChanged();
            }
        }
        private global::System.Int32 _MasterIndustryId;
        partial void OnMasterIndustryIdChanging(global::System.Int32 value);
        partial void OnMasterIndustryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserIndustry_MasterIndustry", "MasterIndustry")]
        public MasterIndustry MasterIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_PreferredFeedUserIndustry_MasterIndustry", "MasterIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_PreferredFeedUserIndustry_MasterIndustry", "MasterIndustry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIndustry> MasterIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_PreferredFeedUserIndustry_MasterIndustry", "MasterIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIndustry>("huntableModel.FK_PreferredFeedUserIndustry_MasterIndustry", "MasterIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserIndustry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserIndustry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserIndustry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserIndustry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserIndustry_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterInterestId">Initial value of the MasterInterestId property.</param>
        public static PreferredFeedUserInterest CreatePreferredFeedUserInterest(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterInterestId)
        {
            PreferredFeedUserInterest preferredFeedUserInterest = new PreferredFeedUserInterest();
            preferredFeedUserInterest.Id = id;
            preferredFeedUserInterest.UserId = userId;
            preferredFeedUserInterest.MasterInterestId = masterInterestId;
            return preferredFeedUserInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterInterestId
        {
            get
            {
                return _MasterInterestId;
            }
            set
            {
                OnMasterInterestIdChanging(value);
                ReportPropertyChanging("MasterInterestId");
                _MasterInterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterInterestId");
                OnMasterInterestIdChanged();
            }
        }
        private global::System.Int32 _MasterInterestId;
        partial void OnMasterInterestIdChanging(global::System.Int32 value);
        partial void OnMasterInterestIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserInterest_MasterInterest", "MasterInterest")]
        public MasterInterest MasterInterest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_PreferredFeedUserInterest_MasterInterest", "MasterInterest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_PreferredFeedUserInterest_MasterInterest", "MasterInterest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterInterest> MasterInterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_PreferredFeedUserInterest_MasterInterest", "MasterInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterInterest>("huntableModel.FK_PreferredFeedUserInterest_MasterInterest", "MasterInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserInterest_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserInterest_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserInterest_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserInterest_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserInterest_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterSkillId">Initial value of the MasterSkillId property.</param>
        public static PreferredFeedUserSkill CreatePreferredFeedUserSkill(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterSkillId)
        {
            PreferredFeedUserSkill preferredFeedUserSkill = new PreferredFeedUserSkill();
            preferredFeedUserSkill.Id = id;
            preferredFeedUserSkill.UserId = userId;
            preferredFeedUserSkill.MasterSkillId = masterSkillId;
            return preferredFeedUserSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterSkillId
        {
            get
            {
                return _MasterSkillId;
            }
            set
            {
                OnMasterSkillIdChanging(value);
                ReportPropertyChanging("MasterSkillId");
                _MasterSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSkillId");
                OnMasterSkillIdChanged();
            }
        }
        private global::System.Int32 _MasterSkillId;
        partial void OnMasterSkillIdChanging(global::System.Int32 value);
        partial void OnMasterSkillIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_PreferredFeedUserSkill_PreferredFeedUserSkill", "MasterSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserSkill_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserSkill_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserSkill_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserSkill_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserSkill_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="followingUserId">Initial value of the FollowingUserId property.</param>
        public static PreferredFeedUserUser CreatePreferredFeedUserUser(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 followingUserId)
        {
            PreferredFeedUserUser preferredFeedUserUser = new PreferredFeedUserUser();
            preferredFeedUserUser.Id = id;
            preferredFeedUserUser.UserId = userId;
            preferredFeedUserUser.FollowingUserId = followingUserId;
            return preferredFeedUserUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FollowingUserId
        {
            get
            {
                return _FollowingUserId;
            }
            set
            {
                OnFollowingUserIdChanging(value);
                ReportPropertyChanging("FollowingUserId");
                _FollowingUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowingUserId");
                OnFollowingUserIdChanged();
            }
        }
        private global::System.Int32 _FollowingUserId;
        partial void OnFollowingUserIdChanging(global::System.Int32 value);
        partial void OnFollowingUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserFollowup_FollowingUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserFollowup_FollowingUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserFollowup_FollowingUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserFollowup_FollowingUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserFollowup_FollowingUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserFollowup_User", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserFollowup_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserFollowup_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserFollowup_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserFollowup_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredFeedUserUserDerived")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredFeedUserUserDerived : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredFeedUserUserDerived object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="followingUserId">Initial value of the FollowingUserId property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        public static PreferredFeedUserUserDerived CreatePreferredFeedUserUserDerived(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 followingUserId, global::System.DateTime createdDateTime)
        {
            PreferredFeedUserUserDerived preferredFeedUserUserDerived = new PreferredFeedUserUserDerived();
            preferredFeedUserUserDerived.Id = id;
            preferredFeedUserUserDerived.UserId = userId;
            preferredFeedUserUserDerived.FollowingUserId = followingUserId;
            preferredFeedUserUserDerived.CreatedDateTime = createdDateTime;
            return preferredFeedUserUserDerived;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FollowingUserId
        {
            get
            {
                return _FollowingUserId;
            }
            set
            {
                OnFollowingUserIdChanging(value);
                ReportPropertyChanging("FollowingUserId");
                _FollowingUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowingUserId");
                OnFollowingUserIdChanged();
            }
        }
        private global::System.Int32 _FollowingUserId;
        partial void OnFollowingUserIdChanging(global::System.Int32 value);
        partial void OnFollowingUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserUserDerived_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserUserDerived_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredFeedUserUserDerived_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserCompany object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterCompanyId">Initial value of the MasterCompanyId property.</param>
        public static PreferredJobUserCompany CreatePreferredJobUserCompany(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterCompanyId)
        {
            PreferredJobUserCompany preferredJobUserCompany = new PreferredJobUserCompany();
            preferredJobUserCompany.Id = id;
            preferredJobUserCompany.UserId = userId;
            preferredJobUserCompany.MasterCompanyId = masterCompanyId;
            return preferredJobUserCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterCompanyId
        {
            get
            {
                return _MasterCompanyId;
            }
            set
            {
                OnMasterCompanyIdChanging(value);
                ReportPropertyChanging("MasterCompanyId");
                _MasterCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterCompanyId");
                OnMasterCompanyIdChanged();
            }
        }
        private global::System.Int32 _MasterCompanyId;
        partial void OnMasterCompanyIdChanging(global::System.Int32 value);
        partial void OnMasterCompanyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCompany_MasterCompany", "MasterCompany")]
        public MasterCompany MasterCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_PreferredJobUserCompany_MasterCompany", "MasterCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_PreferredJobUserCompany_MasterCompany", "MasterCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCompany> MasterCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_PreferredJobUserCompany_MasterCompany", "MasterCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCompany>("huntableModel.FK_PreferredJobUserCompany_MasterCompany", "MasterCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCompany_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserCompany_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserCompany_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserCompany_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserCompany_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserCountry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterCountryId">Initial value of the MasterCountryId property.</param>
        public static PreferredJobUserCountry CreatePreferredJobUserCountry(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterCountryId)
        {
            PreferredJobUserCountry preferredJobUserCountry = new PreferredJobUserCountry();
            preferredJobUserCountry.Id = id;
            preferredJobUserCountry.UserId = userId;
            preferredJobUserCountry.MasterCountryId = masterCountryId;
            return preferredJobUserCountry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterCountryId
        {
            get
            {
                return _MasterCountryId;
            }
            set
            {
                OnMasterCountryIdChanging(value);
                ReportPropertyChanging("MasterCountryId");
                _MasterCountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterCountryId");
                OnMasterCountryIdChanged();
            }
        }
        private global::System.Int32 _MasterCountryId;
        partial void OnMasterCountryIdChanging(global::System.Int32 value);
        partial void OnMasterCountryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCountry_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_PreferredJobUserCountry_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_PreferredJobUserCountry_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_PreferredJobUserCountry_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_PreferredJobUserCountry_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCountry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserCountry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserCountry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserCountry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserCountry_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserIndustry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserIndustry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserIndustry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterIndustryId">Initial value of the MasterIndustryId property.</param>
        public static PreferredJobUserIndustry CreatePreferredJobUserIndustry(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterIndustryId)
        {
            PreferredJobUserIndustry preferredJobUserIndustry = new PreferredJobUserIndustry();
            preferredJobUserIndustry.Id = id;
            preferredJobUserIndustry.UserId = userId;
            preferredJobUserIndustry.MasterIndustryId = masterIndustryId;
            return preferredJobUserIndustry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterIndustryId
        {
            get
            {
                return _MasterIndustryId;
            }
            set
            {
                OnMasterIndustryIdChanging(value);
                ReportPropertyChanging("MasterIndustryId");
                _MasterIndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterIndustryId");
                OnMasterIndustryIdChanged();
            }
        }
        private global::System.Int32 _MasterIndustryId;
        partial void OnMasterIndustryIdChanging(global::System.Int32 value);
        partial void OnMasterIndustryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserIndustry_MasterIndustry", "MasterIndustry")]
        public MasterIndustry MasterIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_PreferredJobUserIndustry_MasterIndustry", "MasterIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_PreferredJobUserIndustry_MasterIndustry", "MasterIndustry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterIndustry> MasterIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterIndustry>("huntableModel.FK_PreferredJobUserIndustry_MasterIndustry", "MasterIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterIndustry>("huntableModel.FK_PreferredJobUserIndustry_MasterIndustry", "MasterIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserIndustry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserIndustry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserIndustry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserIndustry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserIndustry_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterInterestId">Initial value of the MasterInterestId property.</param>
        public static PreferredJobUserInterest CreatePreferredJobUserInterest(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterInterestId)
        {
            PreferredJobUserInterest preferredJobUserInterest = new PreferredJobUserInterest();
            preferredJobUserInterest.Id = id;
            preferredJobUserInterest.UserId = userId;
            preferredJobUserInterest.MasterInterestId = masterInterestId;
            return preferredJobUserInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterInterestId
        {
            get
            {
                return _MasterInterestId;
            }
            set
            {
                OnMasterInterestIdChanging(value);
                ReportPropertyChanging("MasterInterestId");
                _MasterInterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterInterestId");
                OnMasterInterestIdChanged();
            }
        }
        private global::System.Int32 _MasterInterestId;
        partial void OnMasterInterestIdChanging(global::System.Int32 value);
        partial void OnMasterInterestIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserInterest_MasterInterest", "MasterInterest")]
        public MasterInterest MasterInterest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_PreferredJobUserInterest_MasterInterest", "MasterInterest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_PreferredJobUserInterest_MasterInterest", "MasterInterest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterInterest> MasterInterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_PreferredJobUserInterest_MasterInterest", "MasterInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterInterest>("huntableModel.FK_PreferredJobUserInterest_MasterInterest", "MasterInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserInterest_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserInterest_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserInterest_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserInterest_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserInterest_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserJobType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserJobType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserJobType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterJobTypeId">Initial value of the MasterJobTypeId property.</param>
        public static PreferredJobUserJobType CreatePreferredJobUserJobType(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterJobTypeId)
        {
            PreferredJobUserJobType preferredJobUserJobType = new PreferredJobUserJobType();
            preferredJobUserJobType.Id = id;
            preferredJobUserJobType.UserId = userId;
            preferredJobUserJobType.MasterJobTypeId = masterJobTypeId;
            return preferredJobUserJobType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterJobTypeId
        {
            get
            {
                return _MasterJobTypeId;
            }
            set
            {
                OnMasterJobTypeIdChanging(value);
                ReportPropertyChanging("MasterJobTypeId");
                _MasterJobTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterJobTypeId");
                OnMasterJobTypeIdChanged();
            }
        }
        private global::System.Int32 _MasterJobTypeId;
        partial void OnMasterJobTypeIdChanging(global::System.Int32 value);
        partial void OnMasterJobTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserJobType_MasterJobType", "MasterJobType")]
        public MasterJobType MasterJobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_PreferredJobUserJobType_MasterJobType", "MasterJobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_PreferredJobUserJobType_MasterJobType", "MasterJobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterJobType> MasterJobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterJobType>("huntableModel.FK_PreferredJobUserJobType_MasterJobType", "MasterJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterJobType>("huntableModel.FK_PreferredJobUserJobType_MasterJobType", "MasterJobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserJobType_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserJobType_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserJobType_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserJobType_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserJobType_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserSalary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserSalary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserSalary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static PreferredJobUserSalary CreatePreferredJobUserSalary(global::System.Int32 id, global::System.Int32 userId)
        {
            PreferredJobUserSalary preferredJobUserSalary = new PreferredJobUserSalary();
            preferredJobUserSalary.Id = id;
            preferredJobUserSalary.UserId = userId;
            return preferredJobUserSalary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinSalary
        {
            get
            {
                return _MinSalary;
            }
            set
            {
                OnMinSalaryChanging(value);
                ReportPropertyChanging("MinSalary");
                _MinSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinSalary");
                OnMinSalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _MinSalary;
        partial void OnMinSalaryChanging(Nullable<global::System.Int32> value);
        partial void OnMinSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxSalary
        {
            get
            {
                return _MaxSalary;
            }
            set
            {
                OnMaxSalaryChanging(value);
                ReportPropertyChanging("MaxSalary");
                _MaxSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxSalary");
                OnMaxSalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxSalary;
        partial void OnMaxSalaryChanging(Nullable<global::System.Int32> value);
        partial void OnMaxSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyTypeId
        {
            get
            {
                return _CurrencyTypeId;
            }
            set
            {
                OnCurrencyTypeIdChanging(value);
                ReportPropertyChanging("CurrencyTypeId");
                _CurrencyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTypeId");
                OnCurrencyTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyTypeId;
        partial void OnCurrencyTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherCurrency
        {
            get
            {
                return _OtherCurrency;
            }
            set
            {
                OnOtherCurrencyChanging(value);
                ReportPropertyChanging("OtherCurrency");
                _OtherCurrency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherCurrency");
                OnOtherCurrencyChanged();
            }
        }
        private global::System.String _OtherCurrency;
        partial void OnOtherCurrencyChanging(global::System.String value);
        partial void OnOtherCurrencyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSalary_MasterCurrencyType", "MasterCurrencyType")]
        public MasterCurrencyType MasterCurrencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_PreferredJobUserSalary_MasterCurrencyType", "MasterCurrencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_PreferredJobUserSalary_MasterCurrencyType", "MasterCurrencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCurrencyType> MasterCurrencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCurrencyType>("huntableModel.FK_PreferredJobUserSalary_MasterCurrencyType", "MasterCurrencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCurrencyType>("huntableModel.FK_PreferredJobUserSalary_MasterCurrencyType", "MasterCurrencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSalary_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserSalary_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserSalary_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserSalary_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserSalary_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterSkillId">Initial value of the MasterSkillId property.</param>
        public static PreferredJobUserSkill CreatePreferredJobUserSkill(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterSkillId)
        {
            PreferredJobUserSkill preferredJobUserSkill = new PreferredJobUserSkill();
            preferredJobUserSkill.Id = id;
            preferredJobUserSkill.UserId = userId;
            preferredJobUserSkill.MasterSkillId = masterSkillId;
            return preferredJobUserSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterSkillId
        {
            get
            {
                return _MasterSkillId;
            }
            set
            {
                OnMasterSkillIdChanging(value);
                ReportPropertyChanging("MasterSkillId");
                _MasterSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSkillId");
                OnMasterSkillIdChanged();
            }
        }
        private global::System.Int32 _MasterSkillId;
        partial void OnMasterSkillIdChanging(global::System.Int32 value);
        partial void OnMasterSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSkill_MasterSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_PreferredJobUserSkill_MasterSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_PreferredJobUserSkill_MasterSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_PreferredJobUserSkill_MasterSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_PreferredJobUserSkill_MasterSkill", "MasterSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSkill_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserSkill_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserSkill_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredJobUserSkill_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredJobUserSkill_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredJobUserUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredJobUserUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredJobUserUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="followingUserId">Initial value of the FollowingUserId property.</param>
        public static PreferredJobUserUser CreatePreferredJobUserUser(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 followingUserId)
        {
            PreferredJobUserUser preferredJobUserUser = new PreferredJobUserUser();
            preferredJobUserUser.Id = id;
            preferredJobUserUser.UserId = userId;
            preferredJobUserUser.FollowingUserId = followingUserId;
            return preferredJobUserUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FollowingUserId
        {
            get
            {
                return _FollowingUserId;
            }
            set
            {
                OnFollowingUserIdChanging(value);
                ReportPropertyChanging("FollowingUserId");
                _FollowingUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowingUserId");
                OnFollowingUserIdChanged();
            }
        }
        private global::System.Int32 _FollowingUserId;
        partial void OnFollowingUserIdChanging(global::System.Int32 value);
        partial void OnFollowingUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserJobFollowup_FollowingUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserJobFollowup_FollowingUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserJobFollowup_FollowingUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserJobFollowup_FollowingUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserJobFollowup_FollowingUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserJobFollowup_User", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserJobFollowup_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserJobFollowup_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserJobFollowup_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserJobFollowup_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="PreferredUserCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferredUserCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferredUserCompany object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PreferredUserCompany CreatePreferredUserCompany(global::System.Int32 id, global::System.Int32 companyId, global::System.String description)
        {
            PreferredUserCompany preferredUserCompany = new PreferredUserCompany();
            preferredUserCompany.Id = id;
            preferredUserCompany.CompanyId = companyId;
            preferredUserCompany.Description = description;
            return preferredUserCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredUserCompanies_MasterCompany", "MasterCompany")]
        public MasterCompany MasterCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_PreferredUserCompanies_MasterCompany", "MasterCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_PreferredUserCompanies_MasterCompany", "MasterCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCompany> MasterCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCompany>("huntableModel.FK_PreferredUserCompanies_MasterCompany", "MasterCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCompany>("huntableModel.FK_PreferredUserCompanies_MasterCompany", "MasterCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredUserCompanies_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredUserCompanies_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredUserCompanies_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_PreferredUserCompanies_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_PreferredUserCompanies_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="SeoInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SeoInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SeoInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageId">Initial value of the PageId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="keyword">Initial value of the Keyword property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static SeoInfo CreateSeoInfo(global::System.Int32 id, global::System.String pageId, global::System.String title, global::System.String keyword, global::System.String description)
        {
            SeoInfo seoInfo = new SeoInfo();
            seoInfo.Id = id;
            seoInfo.PageId = pageId;
            seoInfo.Title = title;
            seoInfo.Keyword = keyword;
            seoInfo.Description = description;
            return seoInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                OnPageIdChanging(value);
                ReportPropertyChanging("PageId");
                _PageId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageId");
                OnPageIdChanged();
            }
        }
        private global::System.String _PageId;
        partial void OnPageIdChanging(global::System.String value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageName
        {
            get
            {
                return _PageName;
            }
            set
            {
                OnPageNameChanging(value);
                ReportPropertyChanging("PageName");
                _PageName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageName");
                OnPageNameChanged();
            }
        }
        private global::System.String _PageName;
        partial void OnPageNameChanging(global::System.String value);
        partial void OnPageNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="isMarried">Initial value of the IsMarried property.</param>
        /// <param name="lastLoginTime">Initial value of the LastLoginTime property.</param>
        /// <param name="lastProfileUpdatedOn">Initial value of the LastProfileUpdatedOn property.</param>
        /// <param name="isProfileAvailable">Initial value of the IsProfileAvailable property.</param>
        /// <param name="totalExperienceInYears">Initial value of the TotalExperienceInYears property.</param>
        /// <param name="professionalRecommendationsCount">Initial value of the ProfessionalRecommendationsCount property.</param>
        /// <param name="isProfileUpdated">Initial value of the IsProfileUpdated property.</param>
        /// <param name="profileSearchResultCount">Initial value of the ProfileSearchResultCount property.</param>
        /// <param name="showFeedsFromMyConnections">Initial value of the ShowFeedsFromMyConnections property.</param>
        /// <param name="showJobsFromMyConnections">Initial value of the ShowJobsFromMyConnections property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String password, global::System.String emailAddress, global::System.Boolean isMarried, global::System.DateTime lastLoginTime, global::System.DateTime lastProfileUpdatedOn, global::System.Boolean isProfileAvailable, global::System.Double totalExperienceInYears, global::System.Int32 professionalRecommendationsCount, global::System.Boolean isProfileUpdated, global::System.Int32 profileSearchResultCount, global::System.Boolean showFeedsFromMyConnections, global::System.Boolean showJobsFromMyConnections)
        {
            User user = new User();
            user.Id = id;
            user.Password = password;
            user.EmailAddress = emailAddress;
            user.IsMarried = isMarried;
            user.LastLoginTime = lastLoginTime;
            user.LastProfileUpdatedOn = lastProfileUpdatedOn;
            user.IsProfileAvailable = isProfileAvailable;
            user.TotalExperienceInYears = totalExperienceInYears;
            user.ProfessionalRecommendationsCount = professionalRecommendationsCount;
            user.IsProfileUpdated = isProfileUpdated;
            user.ProfileSearchResultCount = profileSearchResultCount;
            user.ShowFeedsFromMyConnections = showFeedsFromMyConnections;
            user.ShowJobsFromMyConnections = showJobsFromMyConnections;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line1
        {
            get
            {
                return _Line1;
            }
            set
            {
                OnLine1Changing(value);
                ReportPropertyChanging("Line1");
                _Line1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line1");
                OnLine1Changed();
            }
        }
        private global::System.String _Line1;
        partial void OnLine1Changing(global::System.String value);
        partial void OnLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line2
        {
            get
            {
                return _Line2;
            }
            set
            {
                OnLine2Changing(value);
                ReportPropertyChanging("Line2");
                _Line2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line2");
                OnLine2Changed();
            }
        }
        private global::System.String _Line2;
        partial void OnLine2Changing(global::System.String value);
        partial void OnLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line3
        {
            get
            {
                return _Line3;
            }
            set
            {
                OnLine3Changing(value);
                ReportPropertyChanging("Line3");
                _Line3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line3");
                OnLine3Changed();
            }
        }
        private global::System.String _Line3;
        partial void OnLine3Changing(global::System.String value);
        partial void OnLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonalLogoFileStoreId
        {
            get
            {
                return _PersonalLogoFileStoreId;
            }
            set
            {
                OnPersonalLogoFileStoreIdChanging(value);
                ReportPropertyChanging("PersonalLogoFileStoreId");
                _PersonalLogoFileStoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonalLogoFileStoreId");
                OnPersonalLogoFileStoreIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonalLogoFileStoreId;
        partial void OnPersonalLogoFileStoreIdChanging(Nullable<global::System.Int32> value);
        partial void OnPersonalLogoFileStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyLogoFileStoreId
        {
            get
            {
                return _CompanyLogoFileStoreId;
            }
            set
            {
                OnCompanyLogoFileStoreIdChanging(value);
                ReportPropertyChanging("CompanyLogoFileStoreId");
                _CompanyLogoFileStoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyLogoFileStoreId");
                OnCompanyLogoFileStoreIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyLogoFileStoreId;
        partial void OnCompanyLogoFileStoreIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyLogoFileStoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryEmail
        {
            get
            {
                return _SecondaryEmail;
            }
            set
            {
                OnSecondaryEmailChanging(value);
                ReportPropertyChanging("SecondaryEmail");
                _SecondaryEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondaryEmail");
                OnSecondaryEmailChanged();
            }
        }
        private global::System.String _SecondaryEmail;
        partial void OnSecondaryEmailChanging(global::System.String value);
        partial void OnSecondaryEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMarried
        {
            get
            {
                return _IsMarried;
            }
            set
            {
                OnIsMarriedChanging(value);
                ReportPropertyChanging("IsMarried");
                _IsMarried = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMarried");
                OnIsMarriedChanged();
            }
        }
        private global::System.Boolean _IsMarried;
        partial void OnIsMarriedChanging(global::System.Boolean value);
        partial void OnIsMarriedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomeAddress
        {
            get
            {
                return _HomeAddress;
            }
            set
            {
                OnHomeAddressChanging(value);
                ReportPropertyChanging("HomeAddress");
                _HomeAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomeAddress");
                OnHomeAddressChanged();
            }
        }
        private global::System.String _HomeAddress;
        partial void OnHomeAddressChanging(global::System.String value);
        partial void OnHomeAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NationalityId
        {
            get
            {
                return _NationalityId;
            }
            set
            {
                OnNationalityIdChanging(value);
                ReportPropertyChanging("NationalityId");
                _NationalityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NationalityId");
                OnNationalityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NationalityId;
        partial void OnNationalityIdChanging(Nullable<global::System.Int32> value);
        partial void OnNationalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVerified
        {
            get
            {
                return _IsVerified;
            }
            set
            {
                OnIsVerifiedChanging(value);
                ReportPropertyChanging("IsVerified");
                _IsVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerified");
                OnIsVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVerified;
        partial void OnIsVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCustomizingYourFeedsAccepted
        {
            get
            {
                return _IsCustomizingYourFeedsAccepted;
            }
            set
            {
                OnIsCustomizingYourFeedsAcceptedChanging(value);
                ReportPropertyChanging("IsCustomizingYourFeedsAccepted");
                _IsCustomizingYourFeedsAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCustomizingYourFeedsAccepted");
                OnIsCustomizingYourFeedsAcceptedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCustomizingYourFeedsAccepted;
        partial void OnIsCustomizingYourFeedsAcceptedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCustomizingYourFeedsAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCustomizingYourJobsAccepted
        {
            get
            {
                return _IsCustomizingYourJobsAccepted;
            }
            set
            {
                OnIsCustomizingYourJobsAcceptedChanging(value);
                ReportPropertyChanging("IsCustomizingYourJobsAccepted");
                _IsCustomizingYourJobsAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCustomizingYourJobsAccepted");
                OnIsCustomizingYourJobsAcceptedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCustomizingYourJobsAccepted;
        partial void OnIsCustomizingYourJobsAcceptedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCustomizingYourJobsAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSearchingAndConnectingWithOtherUsersAccepted
        {
            get
            {
                return _IsSearchingAndConnectingWithOtherUsersAccepted;
            }
            set
            {
                OnIsSearchingAndConnectingWithOtherUsersAcceptedChanging(value);
                ReportPropertyChanging("IsSearchingAndConnectingWithOtherUsersAccepted");
                _IsSearchingAndConnectingWithOtherUsersAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSearchingAndConnectingWithOtherUsersAccepted");
                OnIsSearchingAndConnectingWithOtherUsersAcceptedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSearchingAndConnectingWithOtherUsersAccepted;
        partial void OnIsSearchingAndConnectingWithOtherUsersAcceptedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSearchingAndConnectingWithOtherUsersAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProfileImportSourceId
        {
            get
            {
                return _ProfileImportSourceId;
            }
            set
            {
                OnProfileImportSourceIdChanging(value);
                ReportPropertyChanging("ProfileImportSourceId");
                _ProfileImportSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileImportSourceId");
                OnProfileImportSourceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProfileImportSourceId;
        partial void OnProfileImportSourceIdChanging(Nullable<global::System.Int32> value);
        partial void OnProfileImportSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPremiumAccount
        {
            get
            {
                return _IsPremiumAccount;
            }
            set
            {
                OnIsPremiumAccountChanging(value);
                ReportPropertyChanging("IsPremiumAccount");
                _IsPremiumAccount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPremiumAccount");
                OnIsPremiumAccountChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPremiumAccount;
        partial void OnIsPremiumAccountChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPremiumAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferralId
        {
            get
            {
                return _ReferralId;
            }
            set
            {
                OnReferralIdChanging(value);
                ReportPropertyChanging("ReferralId");
                _ReferralId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferralId");
                OnReferralIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferralId;
        partial void OnReferralIdChanging(Nullable<global::System.Int32> value);
        partial void OnReferralIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelOneInvitedCount
        {
            get
            {
                return _LevelOneInvitedCount;
            }
            set
            {
                OnLevelOneInvitedCountChanging(value);
                ReportPropertyChanging("LevelOneInvitedCount");
                _LevelOneInvitedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelOneInvitedCount");
                OnLevelOneInvitedCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelOneInvitedCount;
        partial void OnLevelOneInvitedCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelOneInvitedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelOneJoinedCount
        {
            get
            {
                return _LevelOneJoinedCount;
            }
            set
            {
                OnLevelOneJoinedCountChanging(value);
                ReportPropertyChanging("LevelOneJoinedCount");
                _LevelOneJoinedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelOneJoinedCount");
                OnLevelOneJoinedCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelOneJoinedCount;
        partial void OnLevelOneJoinedCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelOneJoinedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelOnePremiumCount
        {
            get
            {
                return _LevelOnePremiumCount;
            }
            set
            {
                OnLevelOnePremiumCountChanging(value);
                ReportPropertyChanging("LevelOnePremiumCount");
                _LevelOnePremiumCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelOnePremiumCount");
                OnLevelOnePremiumCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelOnePremiumCount;
        partial void OnLevelOnePremiumCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelOnePremiumCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelTwoInvitedCount
        {
            get
            {
                return _LevelTwoInvitedCount;
            }
            set
            {
                OnLevelTwoInvitedCountChanging(value);
                ReportPropertyChanging("LevelTwoInvitedCount");
                _LevelTwoInvitedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelTwoInvitedCount");
                OnLevelTwoInvitedCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelTwoInvitedCount;
        partial void OnLevelTwoInvitedCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelTwoInvitedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelTwoJoinedCount
        {
            get
            {
                return _LevelTwoJoinedCount;
            }
            set
            {
                OnLevelTwoJoinedCountChanging(value);
                ReportPropertyChanging("LevelTwoJoinedCount");
                _LevelTwoJoinedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelTwoJoinedCount");
                OnLevelTwoJoinedCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelTwoJoinedCount;
        partial void OnLevelTwoJoinedCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelTwoJoinedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelTwoPremiumCount
        {
            get
            {
                return _LevelTwoPremiumCount;
            }
            set
            {
                OnLevelTwoPremiumCountChanging(value);
                ReportPropertyChanging("LevelTwoPremiumCount");
                _LevelTwoPremiumCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelTwoPremiumCount");
                OnLevelTwoPremiumCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelTwoPremiumCount;
        partial void OnLevelTwoPremiumCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelTwoPremiumCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelThreeInvitedCount
        {
            get
            {
                return _LevelThreeInvitedCount;
            }
            set
            {
                OnLevelThreeInvitedCountChanging(value);
                ReportPropertyChanging("LevelThreeInvitedCount");
                _LevelThreeInvitedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelThreeInvitedCount");
                OnLevelThreeInvitedCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelThreeInvitedCount;
        partial void OnLevelThreeInvitedCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelThreeInvitedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelThreeJoinedCount
        {
            get
            {
                return _LevelThreeJoinedCount;
            }
            set
            {
                OnLevelThreeJoinedCountChanging(value);
                ReportPropertyChanging("LevelThreeJoinedCount");
                _LevelThreeJoinedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelThreeJoinedCount");
                OnLevelThreeJoinedCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelThreeJoinedCount;
        partial void OnLevelThreeJoinedCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelThreeJoinedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelThreePremiumCount
        {
            get
            {
                return _LevelThreePremiumCount;
            }
            set
            {
                OnLevelThreePremiumCountChanging(value);
                ReportPropertyChanging("LevelThreePremiumCount");
                _LevelThreePremiumCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelThreePremiumCount");
                OnLevelThreePremiumCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelThreePremiumCount;
        partial void OnLevelThreePremiumCountChanging(Nullable<global::System.Int32> value);
        partial void OnLevelThreePremiumCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalJobCreditsLeft
        {
            get
            {
                return _TotalJobCreditsLeft;
            }
            set
            {
                OnTotalJobCreditsLeftChanging(value);
                ReportPropertyChanging("TotalJobCreditsLeft");
                _TotalJobCreditsLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalJobCreditsLeft");
                OnTotalJobCreditsLeftChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalJobCreditsLeft;
        partial void OnTotalJobCreditsLeftChanging(Nullable<global::System.Int32> value);
        partial void OnTotalJobCreditsLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginTime
        {
            get
            {
                return _LastLoginTime;
            }
            set
            {
                OnLastLoginTimeChanging(value);
                ReportPropertyChanging("LastLoginTime");
                _LastLoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginTime");
                OnLastLoginTimeChanged();
            }
        }
        private global::System.DateTime _LastLoginTime;
        partial void OnLastLoginTimeChanging(global::System.DateTime value);
        partial void OnLastLoginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastProfileUpdatedOn
        {
            get
            {
                return _LastProfileUpdatedOn;
            }
            set
            {
                OnLastProfileUpdatedOnChanging(value);
                ReportPropertyChanging("LastProfileUpdatedOn");
                _LastProfileUpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastProfileUpdatedOn");
                OnLastProfileUpdatedOnChanged();
            }
        }
        private global::System.DateTime _LastProfileUpdatedOn;
        partial void OnLastProfileUpdatedOnChanging(global::System.DateTime value);
        partial void OnLastProfileUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFeatured
        {
            get
            {
                return _IsFeatured;
            }
            set
            {
                OnIsFeaturedChanging(value);
                ReportPropertyChanging("IsFeatured");
                _IsFeatured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFeatured");
                OnIsFeaturedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFeatured;
        partial void OnIsFeaturedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFeaturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PositionLookingFor
        {
            get
            {
                return _PositionLookingFor;
            }
            set
            {
                OnPositionLookingForChanging(value);
                ReportPropertyChanging("PositionLookingFor");
                _PositionLookingFor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PositionLookingFor");
                OnPositionLookingForChanged();
            }
        }
        private global::System.String _PositionLookingFor;
        partial void OnPositionLookingForChanging(global::System.String value);
        partial void OnPositionLookingForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProfileAvailable
        {
            get
            {
                return _IsProfileAvailable;
            }
            set
            {
                OnIsProfileAvailableChanging(value);
                ReportPropertyChanging("IsProfileAvailable");
                _IsProfileAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProfileAvailable");
                OnIsProfileAvailableChanged();
            }
        }
        private global::System.Boolean _IsProfileAvailable;
        partial void OnIsProfileAvailableChanging(global::System.Boolean value);
        partial void OnIsProfileAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalExperienceInYears
        {
            get
            {
                return _TotalExperienceInYears;
            }
            set
            {
                OnTotalExperienceInYearsChanging(value);
                ReportPropertyChanging("TotalExperienceInYears");
                _TotalExperienceInYears = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalExperienceInYears");
                OnTotalExperienceInYearsChanged();
            }
        }
        private global::System.Double _TotalExperienceInYears;
        partial void OnTotalExperienceInYearsChanging(global::System.Double value);
        partial void OnTotalExperienceInYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfessionalRecommendationsCount
        {
            get
            {
                return _ProfessionalRecommendationsCount;
            }
            set
            {
                OnProfessionalRecommendationsCountChanging(value);
                ReportPropertyChanging("ProfessionalRecommendationsCount");
                _ProfessionalRecommendationsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfessionalRecommendationsCount");
                OnProfessionalRecommendationsCountChanged();
            }
        }
        private global::System.Int32 _ProfessionalRecommendationsCount;
        partial void OnProfessionalRecommendationsCountChanging(global::System.Int32 value);
        partial void OnProfessionalRecommendationsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebsiteAddress
        {
            get
            {
                return _WebsiteAddress;
            }
            set
            {
                OnWebsiteAddressChanging(value);
                ReportPropertyChanging("WebsiteAddress");
                _WebsiteAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebsiteAddress");
                OnWebsiteAddressChanged();
            }
        }
        private global::System.String _WebsiteAddress;
        partial void OnWebsiteAddressChanging(global::System.String value);
        partial void OnWebsiteAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlogAddress
        {
            get
            {
                return _BlogAddress;
            }
            set
            {
                OnBlogAddressChanging(value);
                ReportPropertyChanging("BlogAddress");
                _BlogAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlogAddress");
                OnBlogAddressChanged();
            }
        }
        private global::System.String _BlogAddress;
        partial void OnBlogAddressChanging(global::System.String value);
        partial void OnBlogAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreditsLeft
        {
            get
            {
                return _CreditsLeft;
            }
            set
            {
                OnCreditsLeftChanging(value);
                ReportPropertyChanging("CreditsLeft");
                _CreditsLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditsLeft");
                OnCreditsLeftChanged();
            }
        }
        private Nullable<global::System.Int32> _CreditsLeft;
        partial void OnCreditsLeftChanging(Nullable<global::System.Int32> value);
        partial void OnCreditsLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProfileUpdated
        {
            get
            {
                return _IsProfileUpdated;
            }
            set
            {
                OnIsProfileUpdatedChanging(value);
                ReportPropertyChanging("IsProfileUpdated");
                _IsProfileUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProfileUpdated");
                OnIsProfileUpdatedChanged();
            }
        }
        private global::System.Boolean _IsProfileUpdated;
        partial void OnIsProfileUpdatedChanging(global::System.Boolean value);
        partial void OnIsProfileUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileSearchResultCount
        {
            get
            {
                return _ProfileSearchResultCount;
            }
            set
            {
                OnProfileSearchResultCountChanging(value);
                ReportPropertyChanging("ProfileSearchResultCount");
                _ProfileSearchResultCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileSearchResultCount");
                OnProfileSearchResultCountChanged();
            }
        }
        private global::System.Int32 _ProfileSearchResultCount;
        partial void OnProfileSearchResultCountChanging(global::System.Int32 value);
        partial void OnProfileSearchResultCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChatUserId
        {
            get
            {
                return _ChatUserId;
            }
            set
            {
                OnChatUserIdChanging(value);
                ReportPropertyChanging("ChatUserId");
                _ChatUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatUserId");
                OnChatUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChatUserId;
        partial void OnChatUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnChatUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAdmin;
        partial void OnIsAdminChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowFeedsFromMyConnections
        {
            get
            {
                return _ShowFeedsFromMyConnections;
            }
            set
            {
                OnShowFeedsFromMyConnectionsChanging(value);
                ReportPropertyChanging("ShowFeedsFromMyConnections");
                _ShowFeedsFromMyConnections = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowFeedsFromMyConnections");
                OnShowFeedsFromMyConnectionsChanged();
            }
        }
        private global::System.Boolean _ShowFeedsFromMyConnections;
        partial void OnShowFeedsFromMyConnectionsChanging(global::System.Boolean value);
        partial void OnShowFeedsFromMyConnectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowJobsFromMyConnections
        {
            get
            {
                return _ShowJobsFromMyConnections;
            }
            set
            {
                OnShowJobsFromMyConnectionsChanging(value);
                ReportPropertyChanging("ShowJobsFromMyConnections");
                _ShowJobsFromMyConnections = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowJobsFromMyConnections");
                OnShowJobsFromMyConnectionsChanged();
            }
        }
        private global::System.Boolean _ShowJobsFromMyConnections;
        partial void OnShowJobsFromMyConnectionsChanging(global::System.Boolean value);
        partial void OnShowJobsFromMyConnectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExpectedSalary
        {
            get
            {
                return _ExpectedSalary;
            }
            set
            {
                OnExpectedSalaryChanging(value);
                ReportPropertyChanging("ExpectedSalary");
                _ExpectedSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedSalary");
                OnExpectedSalaryChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExpectedSalary;
        partial void OnExpectedSalaryChanging(Nullable<global::System.Decimal> value);
        partial void OnExpectedSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpectedIndustry
        {
            get
            {
                return _ExpectedIndustry;
            }
            set
            {
                OnExpectedIndustryChanging(value);
                ReportPropertyChanging("ExpectedIndustry");
                _ExpectedIndustry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedIndustry");
                OnExpectedIndustryChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpectedIndustry;
        partial void OnExpectedIndustryChanging(Nullable<global::System.Int32> value);
        partial void OnExpectedIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpectedSkill
        {
            get
            {
                return _ExpectedSkill;
            }
            set
            {
                OnExpectedSkillChanging(value);
                ReportPropertyChanging("ExpectedSkill");
                _ExpectedSkill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedSkill");
                OnExpectedSkillChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpectedSkill;
        partial void OnExpectedSkillChanging(Nullable<global::System.Int32> value);
        partial void OnExpectedSkillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Homepagetour
        {
            get
            {
                return _Homepagetour;
            }
            set
            {
                OnHomepagetourChanging(value);
                ReportPropertyChanging("Homepagetour");
                _Homepagetour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Homepagetour");
                OnHomepagetourChanged();
            }
        }
        private Nullable<global::System.Boolean> _Homepagetour;
        partial void OnHomepagetourChanging(Nullable<global::System.Boolean> value);
        partial void OnHomepagetourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ShowPositionLookingFor
        {
            get
            {
                return _ShowPositionLookingFor;
            }
            set
            {
                OnShowPositionLookingForChanging(value);
                ReportPropertyChanging("ShowPositionLookingFor");
                _ShowPositionLookingFor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowPositionLookingFor");
                OnShowPositionLookingForChanged();
            }
        }
        private Nullable<global::System.Boolean> _ShowPositionLookingFor;
        partial void OnShowPositionLookingForChanging(Nullable<global::System.Boolean> value);
        partial void OnShowPositionLookingForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ShowExpectedSalary
        {
            get
            {
                return _ShowExpectedSalary;
            }
            set
            {
                OnShowExpectedSalaryChanging(value);
                ReportPropertyChanging("ShowExpectedSalary");
                _ShowExpectedSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowExpectedSalary");
                OnShowExpectedSalaryChanged();
            }
        }
        private Nullable<global::System.Boolean> _ShowExpectedSalary;
        partial void OnShowExpectedSalaryChanging(Nullable<global::System.Boolean> value);
        partial void OnShowExpectedSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCompany
        {
            get
            {
                return _IsCompany;
            }
            set
            {
                OnIsCompanyChanging(value);
                ReportPropertyChanging("IsCompany");
                _IsCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompany");
                OnIsCompanyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCompany;
        partial void OnIsCompanyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecuiteReferalId
        {
            get
            {
                return _RecuiteReferalId;
            }
            set
            {
                OnRecuiteReferalIdChanging(value);
                ReportPropertyChanging("RecuiteReferalId");
                _RecuiteReferalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecuiteReferalId");
                OnRecuiteReferalIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RecuiteReferalId;
        partial void OnRecuiteReferalIdChanging(Nullable<global::System.Int32> value);
        partial void OnRecuiteReferalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                OnInvitationIdChanging(value);
                ReportPropertyChanging("InvitationId");
                _InvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationId");
                OnInvitationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InvitationId;
        partial void OnInvitationIdChanging(Nullable<global::System.Int32> value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Minsalary
        {
            get
            {
                return _Minsalary;
            }
            set
            {
                OnMinsalaryChanging(value);
                ReportPropertyChanging("Minsalary");
                _Minsalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minsalary");
                OnMinsalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _Minsalary;
        partial void OnMinsalaryChanging(Nullable<global::System.Int32> value);
        partial void OnMinsalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Maxsalary
        {
            get
            {
                return _Maxsalary;
            }
            set
            {
                OnMaxsalaryChanging(value);
                ReportPropertyChanging("Maxsalary");
                _Maxsalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maxsalary");
                OnMaxsalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _Maxsalary;
        partial void OnMaxsalaryChanging(Nullable<global::System.Int32> value);
        partial void OnMaxsalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpMaxsalary
        {
            get
            {
                return _EmpMaxsalary;
            }
            set
            {
                OnEmpMaxsalaryChanging(value);
                ReportPropertyChanging("EmpMaxsalary");
                _EmpMaxsalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpMaxsalary");
                OnEmpMaxsalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpMaxsalary;
        partial void OnEmpMaxsalaryChanging(Nullable<global::System.Int32> value);
        partial void OnEmpMaxsalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TempPwd
        {
            get
            {
                return _TempPwd;
            }
            set
            {
                OnTempPwdChanging(value);
                ReportPropertyChanging("TempPwd");
                _TempPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TempPwd");
                OnTempPwdChanged();
            }
        }
        private global::System.String _TempPwd;
        partial void OnTempPwdChanging(global::System.String value);
        partial void OnTempPwdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private Nullable<global::System.Guid> _Code;
        partial void OnCodeChanging(Nullable<global::System.Guid> value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasCompany
        {
            get
            {
                return _HasCompany;
            }
            set
            {
                OnHasCompanyChanging(value);
                ReportPropertyChanging("HasCompany");
                _HasCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasCompany");
                OnHasCompanyChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasCompany;
        partial void OnHasCompanyChanging(Nullable<global::System.Boolean> value);
        partial void OnHasCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FreeCredits
        {
            get
            {
                return _FreeCredits;
            }
            set
            {
                OnFreeCreditsChanging(value);
                ReportPropertyChanging("FreeCredits");
                _FreeCredits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeCredits");
                OnFreeCreditsChanged();
            }
        }
        private Nullable<global::System.Boolean> _FreeCredits;
        partial void OnFreeCreditsChanging(Nullable<global::System.Boolean> value);
        partial void OnFreeCreditsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Association_User", "Association")]
        public EntityCollection<Association> Associations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Association>("huntableModel.FK_Association_User", "Association");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Association>("huntableModel.FK_Association_User", "Association", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_ChatUsers", "ChatUser")]
        public ChatUser ChatUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_User_ChatUsers", "ChatUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_User_ChatUsers", "ChatUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChatUser> ChatUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChatUser>("huntableModel.FK_User_ChatUsers", "ChatUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChatUser>("huntableModel.FK_User_ChatUsers", "ChatUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Company_User", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("huntableModel.FK_Company_User", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("huntableModel.FK_Company_User", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EducationHistory_User", "EducationHistory")]
        public EntityCollection<EducationHistory> EducationHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_User", "EducationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationHistory>("huntableModel.FK_EducationHistory_User", "EducationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_EmploymentHistory_User", "EmploymentHistory")]
        public EntityCollection<EmploymentHistory> EmploymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_User", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmploymentHistory>("huntableModel.FK_EmploymentHistory_User", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedCountry_User", "FeaturedCountry")]
        public EntityCollection<FeaturedCountry> FeaturedCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedCountry>("huntableModel.FK_FeaturedCountry_User", "FeaturedCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedCountry>("huntableModel.FK_FeaturedCountry_User", "FeaturedCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedIndustry_User", "FeaturedIndustry")]
        public EntityCollection<FeaturedIndustry> FeaturedIndustries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedIndustry>("huntableModel.FK_FeaturedIndustry_User", "FeaturedIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedIndustry>("huntableModel.FK_FeaturedIndustry_User", "FeaturedIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedInterest_User1", "FeaturedInterest")]
        public EntityCollection<FeaturedInterest> FeaturedInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedInterest>("huntableModel.FK_FeaturedInterest_User1", "FeaturedInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedInterest>("huntableModel.FK_FeaturedInterest_User1", "FeaturedInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedSkill_User", "FeaturedSkill")]
        public EntityCollection<FeaturedSkill> FeaturedSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedSkill>("huntableModel.FK_FeaturedSkill_User", "FeaturedSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedSkill>("huntableModel.FK_FeaturedSkill_User", "FeaturedSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeaturedUserCompanies_User", "FeaturedUserCompany")]
        public EntityCollection<FeaturedUserCompany> FeaturedUserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedUserCompany>("huntableModel.FK_FeaturedUserCompanies_User", "FeaturedUserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedUserCompany>("huntableModel.FK_FeaturedUserCompanies_User", "FeaturedUserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserAlertRead_User", "FeedUserAlertRead")]
        public EntityCollection<FeedUserAlertRead> FeedUserAlertReads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserAlertRead>("huntableModel.FK_FeedUserAlertRead_User", "FeedUserAlertRead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserAlertRead>("huntableModel.FK_FeedUserAlertRead_User", "FeedUserAlertRead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserDerivedUser_User", "FeedUserDerivedUser")]
        public EntityCollection<FeedUserDerivedUser> FeedUserDerivedUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserDerivedUser>("huntableModel.FK_FeedUserDerivedUser_User", "FeedUserDerivedUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserDerivedUser>("huntableModel.FK_FeedUserDerivedUser_User", "FeedUserDerivedUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserDerivedUser_User1", "FeedUserDerivedUser")]
        public EntityCollection<FeedUserDerivedUser> FeedUserDerivedUsers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserDerivedUser>("huntableModel.FK_FeedUserDerivedUser_User1", "FeedUserDerivedUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserDerivedUser>("huntableModel.FK_FeedUserDerivedUser_User1", "FeedUserDerivedUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserFollow_User", "FeedUserFollow")]
        public EntityCollection<FeedUserFollow> FeedUserFollows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserFollow>("huntableModel.FK_FeedUserFollow_User", "FeedUserFollow");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserFollow>("huntableModel.FK_FeedUserFollow_User", "FeedUserFollow", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMain_User", "FeedUserMain")]
        public EntityCollection<FeedUserMain> FeedUserMains
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserMain>("huntableModel.FK_FeedUserMain_User", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserMain>("huntableModel.FK_FeedUserMain_User", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserMain_User1", "FeedUserMain")]
        public EntityCollection<FeedUserMain> FeedUserMains1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserMain>("huntableModel.FK_FeedUserMain_User1", "FeedUserMain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserMain>("huntableModel.FK_FeedUserMain_User1", "FeedUserMain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserProfile_User", "FeedUserProfile")]
        public EntityCollection<FeedUserProfile> FeedUserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserProfile>("huntableModel.FK_FeedUserProfile_User", "FeedUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserProfile>("huntableModel.FK_FeedUserProfile_User", "FeedUserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVisitor_User", "FeedUserVisitor")]
        public EntityCollection<FeedUserVisitor> FeedUserVisitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserVisitor>("huntableModel.FK_FeedUserVisitor_User", "FeedUserVisitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserVisitor>("huntableModel.FK_FeedUserVisitor_User", "FeedUserVisitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FriendsToInvite_FriendsToInvite", "FriendsToInvite")]
        public EntityCollection<FriendsToInvite> FriendsToInvites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FriendsToInvite>("huntableModel.FK_FriendsToInvite_FriendsToInvite", "FriendsToInvite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FriendsToInvite>("huntableModel.FK_FriendsToInvite_FriendsToInvite", "FriendsToInvite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Invoice_Invoice", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("huntableModel.FK_Invoice_Invoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("huntableModel.FK_Invoice_Invoice", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_Job_User", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("huntableModel.FK_Job_User", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("huntableModel.FK_Job_User", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_JobFeed_User", "JobFeed")]
        public EntityCollection<JobFeed> JobFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobFeed>("huntableModel.FK_JobFeed_User", "JobFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobFeed>("huntableModel.FK_JobFeed_User", "JobFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_MasterCountry", "MasterCountry")]
        public MasterCountry MasterCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_User_MasterCountry", "MasterCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_User_MasterCountry", "MasterCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterCountry> MasterCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterCountry>("huntableModel.FK_User_MasterCountry", "MasterCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterCountry>("huntableModel.FK_User_MasterCountry", "MasterCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_MasterNationality", "MasterNationality")]
        public MasterNationality MasterNationality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterNationality>("huntableModel.FK_User_MasterNationality", "MasterNationality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterNationality>("huntableModel.FK_User_MasterNationality", "MasterNationality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterNationality> MasterNationalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterNationality>("huntableModel.FK_User_MasterNationality", "MasterNationality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterNationality>("huntableModel.FK_User_MasterNationality", "MasterNationality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_OAuthToken_User", "OAuthToken")]
        public EntityCollection<OAuthToken> OAuthTokens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OAuthToken>("huntableModel.FK_OAuthToken_User", "OAuthToken");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OAuthToken>("huntableModel.FK_OAuthToken_User", "OAuthToken", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCompaniesFollwers_User", "PreferredFeedUserCompaniesFollwer")]
        public EntityCollection<PreferredFeedUserCompaniesFollwer> PreferredFeedUserCompaniesFollwers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserCompaniesFollwer>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_User", "PreferredFeedUserCompaniesFollwer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserCompaniesFollwer>("huntableModel.FK_PreferredFeedUserCompaniesFollwers_User", "PreferredFeedUserCompaniesFollwer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserCountry_User", "PreferredFeedUserCountry")]
        public EntityCollection<PreferredFeedUserCountry> PreferredFeedUserCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserCountry>("huntableModel.FK_PreferredFeedUserCountry_User", "PreferredFeedUserCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserCountry>("huntableModel.FK_PreferredFeedUserCountry_User", "PreferredFeedUserCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserIndustry_User", "PreferredFeedUserIndustry")]
        public EntityCollection<PreferredFeedUserIndustry> PreferredFeedUserIndustries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserIndustry>("huntableModel.FK_PreferredFeedUserIndustry_User", "PreferredFeedUserIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserIndustry>("huntableModel.FK_PreferredFeedUserIndustry_User", "PreferredFeedUserIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserInterest_User", "PreferredFeedUserInterest")]
        public EntityCollection<PreferredFeedUserInterest> PreferredFeedUserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserInterest>("huntableModel.FK_PreferredFeedUserInterest_User", "PreferredFeedUserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserInterest>("huntableModel.FK_PreferredFeedUserInterest_User", "PreferredFeedUserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserSkill_User", "PreferredFeedUserSkill")]
        public EntityCollection<PreferredFeedUserSkill> PreferredFeedUserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserSkill>("huntableModel.FK_PreferredFeedUserSkill_User", "PreferredFeedUserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserSkill>("huntableModel.FK_PreferredFeedUserSkill_User", "PreferredFeedUserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserFollowup_FollowingUser", "PreferredFeedUserUser")]
        public EntityCollection<PreferredFeedUserUser> PreferredFeedUserUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserUser>("huntableModel.FK_UserFollowup_FollowingUser", "PreferredFeedUserUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserUser>("huntableModel.FK_UserFollowup_FollowingUser", "PreferredFeedUserUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserFollowup_User", "PreferredFeedUserUser")]
        public EntityCollection<PreferredFeedUserUser> PreferredFeedUserUsers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserUser>("huntableModel.FK_UserFollowup_User", "PreferredFeedUserUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserUser>("huntableModel.FK_UserFollowup_User", "PreferredFeedUserUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserUserDerived_User", "PreferredFeedUserUserDerived")]
        public EntityCollection<PreferredFeedUserUserDerived> PreferredFeedUserUserDeriveds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserUserDerived>("huntableModel.FK_PreferredFeedUserUserDerived_User", "PreferredFeedUserUserDerived");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserUserDerived>("huntableModel.FK_PreferredFeedUserUserDerived_User", "PreferredFeedUserUserDerived", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredFeedUserUserDerived_User1", "PreferredFeedUserUserDerived")]
        public EntityCollection<PreferredFeedUserUserDerived> PreferredFeedUserUserDeriveds1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredFeedUserUserDerived>("huntableModel.FK_PreferredFeedUserUserDerived_User1", "PreferredFeedUserUserDerived");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredFeedUserUserDerived>("huntableModel.FK_PreferredFeedUserUserDerived_User1", "PreferredFeedUserUserDerived", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCompany_User", "PreferredJobUserCompany")]
        public EntityCollection<PreferredJobUserCompany> PreferredJobUserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserCompany>("huntableModel.FK_PreferredJobUserCompany_User", "PreferredJobUserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserCompany>("huntableModel.FK_PreferredJobUserCompany_User", "PreferredJobUserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserCountry_User", "PreferredJobUserCountry")]
        public EntityCollection<PreferredJobUserCountry> PreferredJobUserCountries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserCountry>("huntableModel.FK_PreferredJobUserCountry_User", "PreferredJobUserCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserCountry>("huntableModel.FK_PreferredJobUserCountry_User", "PreferredJobUserCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserIndustry_User", "PreferredJobUserIndustry")]
        public EntityCollection<PreferredJobUserIndustry> PreferredJobUserIndustries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserIndustry>("huntableModel.FK_PreferredJobUserIndustry_User", "PreferredJobUserIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserIndustry>("huntableModel.FK_PreferredJobUserIndustry_User", "PreferredJobUserIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserInterest_User", "PreferredJobUserInterest")]
        public EntityCollection<PreferredJobUserInterest> PreferredJobUserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserInterest>("huntableModel.FK_PreferredJobUserInterest_User", "PreferredJobUserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserInterest>("huntableModel.FK_PreferredJobUserInterest_User", "PreferredJobUserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserJobType_User", "PreferredJobUserJobType")]
        public EntityCollection<PreferredJobUserJobType> PreferredJobUserJobTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserJobType>("huntableModel.FK_PreferredJobUserJobType_User", "PreferredJobUserJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserJobType>("huntableModel.FK_PreferredJobUserJobType_User", "PreferredJobUserJobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSalary_User", "PreferredJobUserSalary")]
        public EntityCollection<PreferredJobUserSalary> PreferredJobUserSalaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserSalary>("huntableModel.FK_PreferredJobUserSalary_User", "PreferredJobUserSalary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserSalary>("huntableModel.FK_PreferredJobUserSalary_User", "PreferredJobUserSalary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredJobUserSkill_User", "PreferredJobUserSkill")]
        public EntityCollection<PreferredJobUserSkill> PreferredJobUserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserSkill>("huntableModel.FK_PreferredJobUserSkill_User", "PreferredJobUserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserSkill>("huntableModel.FK_PreferredJobUserSkill_User", "PreferredJobUserSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserJobFollowup_FollowingUser", "PreferredJobUserUser")]
        public EntityCollection<PreferredJobUserUser> PreferredJobUserUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserUser>("huntableModel.FK_UserJobFollowup_FollowingUser", "PreferredJobUserUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserUser>("huntableModel.FK_UserJobFollowup_FollowingUser", "PreferredJobUserUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserJobFollowup_User", "PreferredJobUserUser")]
        public EntityCollection<PreferredJobUserUser> PreferredJobUserUsers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredJobUserUser>("huntableModel.FK_UserJobFollowup_User", "PreferredJobUserUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredJobUserUser>("huntableModel.FK_UserJobFollowup_User", "PreferredJobUserUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_PreferredUserCompanies_User", "PreferredUserCompany")]
        public EntityCollection<PreferredUserCompany> PreferredUserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferredUserCompany>("huntableModel.FK_PreferredUserCompanies_User", "PreferredUserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferredUserCompany>("huntableModel.FK_PreferredUserCompanies_User", "PreferredUserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK__UserFeeds__UserI__542C7691", "UserFeed")]
        public EntityCollection<UserFeed> UserFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFeed>("huntableModel.FK__UserFeeds__UserI__542C7691", "UserFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFeed>("huntableModel.FK__UserFeeds__UserI__542C7691", "UserFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_User", "User1")]
        public EntityCollection<User> User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("huntableModel.FK_User_User", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("huntableModel.FK_User_User", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_User_User", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_User_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_User_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_User_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_User_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserBlockList_User", "UserBlockList")]
        public EntityCollection<UserBlockList> UserBlockLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBlockList>("huntableModel.FK_UserBlockList_User", "UserBlockList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBlockList>("huntableModel.FK_UserBlockList_User", "UserBlockList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserBlockList_User1", "UserBlockList")]
        public EntityCollection<UserBlockList> UserBlockLists1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBlockList>("huntableModel.FK_UserBlockList_User1", "UserBlockList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBlockList>("huntableModel.FK_UserBlockList_User1", "UserBlockList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserCompany_User", "UserCompany")]
        public EntityCollection<UserCompany> UserCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCompany>("huntableModel.FK_UserCompany_User", "UserCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCompany>("huntableModel.FK_UserCompany_User", "UserCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEndorseList_User", "UserEndorseList")]
        public EntityCollection<UserEndorseList> UserEndorseLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEndorseList>("huntableModel.FK_UserEndorseList_User", "UserEndorseList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEndorseList>("huntableModel.FK_UserEndorseList_User", "UserEndorseList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEndorseList_User1", "UserEndorseList")]
        public EntityCollection<UserEndorseList> UserEndorseLists1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEndorseList>("huntableModel.FK_UserEndorseList_User1", "UserEndorseList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEndorseList>("huntableModel.FK_UserEndorseList_User1", "UserEndorseList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserInterest_User", "UserInterest")]
        public EntityCollection<UserInterest> UserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("huntableModel.FK_UserInterest_User", "UserInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("huntableModel.FK_UserInterest_User", "UserInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserLanguage_User", "UserLanguage")]
        public EntityCollection<UserLanguage> UserLanguages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserLanguage>("huntableModel.FK_UserLanguage_User", "UserLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserLanguage>("huntableModel.FK_UserLanguage_User", "UserLanguage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessage_User", "UserMessage")]
        public EntityCollection<UserMessage> UserMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessage>("huntableModel.FK_UserMessage_User", "UserMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessage>("huntableModel.FK_UserMessage_User", "UserMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessage_User1", "UserMessage")]
        public EntityCollection<UserMessage> UserMessages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessage>("huntableModel.FK_UserMessage_User1", "UserMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessage>("huntableModel.FK_UserMessage_User1", "UserMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserProfileVisitedHistory_User", "UserProfileVisitedHistory")]
        public EntityCollection<UserProfileVisitedHistory> UserProfileVisitedHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfileVisitedHistory>("huntableModel.FK_UserProfileVisitedHistory_User", "UserProfileVisitedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfileVisitedHistory>("huntableModel.FK_UserProfileVisitedHistory_User", "UserProfileVisitedHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserProfileVisitedHistory_VisitedUser", "UserProfileVisitedHistory")]
        public EntityCollection<UserProfileVisitedHistory> UserProfileVisitedHistories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfileVisitedHistory>("huntableModel.FK_UserProfileVisitedHistory_VisitedUser", "UserProfileVisitedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfileVisitedHistory>("huntableModel.FK_UserProfileVisitedHistory_VisitedUser", "UserProfileVisitedHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserSkill_User", "UserSkill")]
        public EntityCollection<UserSkill> UserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSkill>("huntableModel.FK_UserSkill_User", "UserSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSkill>("huntableModel.FK_UserSkill_User", "UserSkill", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserBlockList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBlockList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBlockList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="blockedUserId">Initial value of the BlockedUserId property.</param>
        public static UserBlockList CreateUserBlockList(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 blockedUserId)
        {
            UserBlockList userBlockList = new UserBlockList();
            userBlockList.Id = id;
            userBlockList.UserId = userId;
            userBlockList.BlockedUserId = blockedUserId;
            return userBlockList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockedUserId
        {
            get
            {
                return _BlockedUserId;
            }
            set
            {
                OnBlockedUserIdChanging(value);
                ReportPropertyChanging("BlockedUserId");
                _BlockedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockedUserId");
                OnBlockedUserIdChanged();
            }
        }
        private global::System.Int32 _BlockedUserId;
        partial void OnBlockedUserIdChanging(global::System.Int32 value);
        partial void OnBlockedUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserBlockList_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserBlockList_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserBlockList_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserBlockList_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserBlockList_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserBlockList_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserBlockList_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserBlockList_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserBlockList_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserBlockList_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCompany object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserCompany CreateUserCompany(global::System.Int32 id, global::System.Int32 userId)
        {
            UserCompany userCompany = new UserCompany();
            userCompany.Id = id;
            userCompany.UserId = userId;
            return userCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserCompany_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_UserCompany_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_UserCompany_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("huntableModel.FK_UserCompany_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("huntableModel.FK_UserCompany_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserCompany_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserCompany_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserCompany_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserCompany_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserCompany_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserEmailPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEmailPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEmailPreference object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="adminEmail">Initial value of the AdminEmail property.</param>
        /// <param name="endorsementRequest">Initial value of the EndorsementRequest property.</param>
        /// <param name="whenThirdConnectionJoins">Initial value of the WhenThirdConnectionJoins property.</param>
        /// <param name="whenFriendsFriendsJoin">Initial value of the WhenFriendsFriendsJoin property.</param>
        /// <param name="whenUserSendAMessage">Initial value of the WhenUserSendAMessage property.</param>
        /// <param name="whenUserAppliesForAJob">Initial value of the WhenUserAppliesForAJob property.</param>
        /// <param name="whenFriendsJoin">Initial value of the WhenFriendsJoin property.</param>
        /// <param name="forgotPasswordEmailLnk">Initial value of the ForgotPasswordEmailLnk property.</param>
        /// <param name="forgotYourPassword">Initial value of the ForgotYourPassword property.</param>
        /// <param name="inviteFriendsWhenJoined">Initial value of the InviteFriendsWhenJoined property.</param>
        /// <param name="resetPassword">Initial value of the ResetPassword property.</param>
        /// <param name="verifyYourEmail">Initial value of the VerifyYourEmail property.</param>
        /// <param name="welcoomeEmail">Initial value of the WelcoomeEmail property.</param>
        public static UserEmailPreference CreateUserEmailPreference(global::System.Int32 id, global::System.Int32 userId, global::System.Boolean adminEmail, global::System.Boolean endorsementRequest, global::System.Boolean whenThirdConnectionJoins, global::System.Boolean whenFriendsFriendsJoin, global::System.Boolean whenUserSendAMessage, global::System.Boolean whenUserAppliesForAJob, global::System.Boolean whenFriendsJoin, global::System.Boolean forgotPasswordEmailLnk, global::System.Boolean forgotYourPassword, global::System.Boolean inviteFriendsWhenJoined, global::System.Boolean resetPassword, global::System.Boolean verifyYourEmail, global::System.Boolean welcoomeEmail)
        {
            UserEmailPreference userEmailPreference = new UserEmailPreference();
            userEmailPreference.Id = id;
            userEmailPreference.UserId = userId;
            userEmailPreference.AdminEmail = adminEmail;
            userEmailPreference.EndorsementRequest = endorsementRequest;
            userEmailPreference.WhenThirdConnectionJoins = whenThirdConnectionJoins;
            userEmailPreference.WhenFriendsFriendsJoin = whenFriendsFriendsJoin;
            userEmailPreference.WhenUserSendAMessage = whenUserSendAMessage;
            userEmailPreference.WhenUserAppliesForAJob = whenUserAppliesForAJob;
            userEmailPreference.WhenFriendsJoin = whenFriendsJoin;
            userEmailPreference.ForgotPasswordEmailLnk = forgotPasswordEmailLnk;
            userEmailPreference.ForgotYourPassword = forgotYourPassword;
            userEmailPreference.InviteFriendsWhenJoined = inviteFriendsWhenJoined;
            userEmailPreference.ResetPassword = resetPassword;
            userEmailPreference.VerifyYourEmail = verifyYourEmail;
            userEmailPreference.WelcoomeEmail = welcoomeEmail;
            return userEmailPreference;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AdminEmail
        {
            get
            {
                return _AdminEmail;
            }
            set
            {
                OnAdminEmailChanging(value);
                ReportPropertyChanging("AdminEmail");
                _AdminEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdminEmail");
                OnAdminEmailChanged();
            }
        }
        private global::System.Boolean _AdminEmail;
        partial void OnAdminEmailChanging(global::System.Boolean value);
        partial void OnAdminEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EndorsementRequest
        {
            get
            {
                return _EndorsementRequest;
            }
            set
            {
                OnEndorsementRequestChanging(value);
                ReportPropertyChanging("EndorsementRequest");
                _EndorsementRequest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndorsementRequest");
                OnEndorsementRequestChanged();
            }
        }
        private global::System.Boolean _EndorsementRequest;
        partial void OnEndorsementRequestChanging(global::System.Boolean value);
        partial void OnEndorsementRequestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WhenThirdConnectionJoins
        {
            get
            {
                return _WhenThirdConnectionJoins;
            }
            set
            {
                OnWhenThirdConnectionJoinsChanging(value);
                ReportPropertyChanging("WhenThirdConnectionJoins");
                _WhenThirdConnectionJoins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WhenThirdConnectionJoins");
                OnWhenThirdConnectionJoinsChanged();
            }
        }
        private global::System.Boolean _WhenThirdConnectionJoins;
        partial void OnWhenThirdConnectionJoinsChanging(global::System.Boolean value);
        partial void OnWhenThirdConnectionJoinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WhenFriendsFriendsJoin
        {
            get
            {
                return _WhenFriendsFriendsJoin;
            }
            set
            {
                OnWhenFriendsFriendsJoinChanging(value);
                ReportPropertyChanging("WhenFriendsFriendsJoin");
                _WhenFriendsFriendsJoin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WhenFriendsFriendsJoin");
                OnWhenFriendsFriendsJoinChanged();
            }
        }
        private global::System.Boolean _WhenFriendsFriendsJoin;
        partial void OnWhenFriendsFriendsJoinChanging(global::System.Boolean value);
        partial void OnWhenFriendsFriendsJoinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WhenUserSendAMessage
        {
            get
            {
                return _WhenUserSendAMessage;
            }
            set
            {
                OnWhenUserSendAMessageChanging(value);
                ReportPropertyChanging("WhenUserSendAMessage");
                _WhenUserSendAMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WhenUserSendAMessage");
                OnWhenUserSendAMessageChanged();
            }
        }
        private global::System.Boolean _WhenUserSendAMessage;
        partial void OnWhenUserSendAMessageChanging(global::System.Boolean value);
        partial void OnWhenUserSendAMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WhenUserAppliesForAJob
        {
            get
            {
                return _WhenUserAppliesForAJob;
            }
            set
            {
                OnWhenUserAppliesForAJobChanging(value);
                ReportPropertyChanging("WhenUserAppliesForAJob");
                _WhenUserAppliesForAJob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WhenUserAppliesForAJob");
                OnWhenUserAppliesForAJobChanged();
            }
        }
        private global::System.Boolean _WhenUserAppliesForAJob;
        partial void OnWhenUserAppliesForAJobChanging(global::System.Boolean value);
        partial void OnWhenUserAppliesForAJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WhenFriendsJoin
        {
            get
            {
                return _WhenFriendsJoin;
            }
            set
            {
                OnWhenFriendsJoinChanging(value);
                ReportPropertyChanging("WhenFriendsJoin");
                _WhenFriendsJoin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WhenFriendsJoin");
                OnWhenFriendsJoinChanged();
            }
        }
        private global::System.Boolean _WhenFriendsJoin;
        partial void OnWhenFriendsJoinChanging(global::System.Boolean value);
        partial void OnWhenFriendsJoinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForgotPasswordEmailLnk
        {
            get
            {
                return _ForgotPasswordEmailLnk;
            }
            set
            {
                OnForgotPasswordEmailLnkChanging(value);
                ReportPropertyChanging("ForgotPasswordEmailLnk");
                _ForgotPasswordEmailLnk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForgotPasswordEmailLnk");
                OnForgotPasswordEmailLnkChanged();
            }
        }
        private global::System.Boolean _ForgotPasswordEmailLnk;
        partial void OnForgotPasswordEmailLnkChanging(global::System.Boolean value);
        partial void OnForgotPasswordEmailLnkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForgotYourPassword
        {
            get
            {
                return _ForgotYourPassword;
            }
            set
            {
                OnForgotYourPasswordChanging(value);
                ReportPropertyChanging("ForgotYourPassword");
                _ForgotYourPassword = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForgotYourPassword");
                OnForgotYourPasswordChanged();
            }
        }
        private global::System.Boolean _ForgotYourPassword;
        partial void OnForgotYourPasswordChanging(global::System.Boolean value);
        partial void OnForgotYourPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InviteFriendsWhenJoined
        {
            get
            {
                return _InviteFriendsWhenJoined;
            }
            set
            {
                OnInviteFriendsWhenJoinedChanging(value);
                ReportPropertyChanging("InviteFriendsWhenJoined");
                _InviteFriendsWhenJoined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InviteFriendsWhenJoined");
                OnInviteFriendsWhenJoinedChanged();
            }
        }
        private global::System.Boolean _InviteFriendsWhenJoined;
        partial void OnInviteFriendsWhenJoinedChanging(global::System.Boolean value);
        partial void OnInviteFriendsWhenJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ResetPassword
        {
            get
            {
                return _ResetPassword;
            }
            set
            {
                OnResetPasswordChanging(value);
                ReportPropertyChanging("ResetPassword");
                _ResetPassword = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResetPassword");
                OnResetPasswordChanged();
            }
        }
        private global::System.Boolean _ResetPassword;
        partial void OnResetPasswordChanging(global::System.Boolean value);
        partial void OnResetPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VerifyYourEmail
        {
            get
            {
                return _VerifyYourEmail;
            }
            set
            {
                OnVerifyYourEmailChanging(value);
                ReportPropertyChanging("VerifyYourEmail");
                _VerifyYourEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VerifyYourEmail");
                OnVerifyYourEmailChanged();
            }
        }
        private global::System.Boolean _VerifyYourEmail;
        partial void OnVerifyYourEmailChanging(global::System.Boolean value);
        partial void OnVerifyYourEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WelcoomeEmail
        {
            get
            {
                return _WelcoomeEmail;
            }
            set
            {
                OnWelcoomeEmailChanging(value);
                ReportPropertyChanging("WelcoomeEmail");
                _WelcoomeEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WelcoomeEmail");
                OnWelcoomeEmailChanged();
            }
        }
        private global::System.Boolean _WelcoomeEmail;
        partial void OnWelcoomeEmailChanging(global::System.Boolean value);
        partial void OnWelcoomeEmailChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserEmploymentSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEmploymentSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEmploymentSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employmentHistoryId">Initial value of the EmploymentHistoryId property.</param>
        /// <param name="masterSkillId">Initial value of the MasterSkillId property.</param>
        public static UserEmploymentSkill CreateUserEmploymentSkill(global::System.Int32 id, global::System.Int32 employmentHistoryId, global::System.Int32 masterSkillId)
        {
            UserEmploymentSkill userEmploymentSkill = new UserEmploymentSkill();
            userEmploymentSkill.Id = id;
            userEmploymentSkill.EmploymentHistoryId = employmentHistoryId;
            userEmploymentSkill.MasterSkillId = masterSkillId;
            return userEmploymentSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmploymentHistoryId
        {
            get
            {
                return _EmploymentHistoryId;
            }
            set
            {
                OnEmploymentHistoryIdChanging(value);
                ReportPropertyChanging("EmploymentHistoryId");
                _EmploymentHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmploymentHistoryId");
                OnEmploymentHistoryIdChanged();
            }
        }
        private global::System.Int32 _EmploymentHistoryId;
        partial void OnEmploymentHistoryIdChanging(global::System.Int32 value);
        partial void OnEmploymentHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterSkillId
        {
            get
            {
                return _MasterSkillId;
            }
            set
            {
                OnMasterSkillIdChanging(value);
                ReportPropertyChanging("MasterSkillId");
                _MasterSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSkillId");
                OnMasterSkillIdChanged();
            }
        }
        private global::System.Int32 _MasterSkillId;
        partial void OnMasterSkillIdChanging(global::System.Int32 value);
        partial void OnMasterSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEmploymentSkill_EmploymentHistory", "EmploymentHistory")]
        public EmploymentHistory EmploymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_UserEmploymentSkill_EmploymentHistory", "EmploymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_UserEmploymentSkill_EmploymentHistory", "EmploymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistory> EmploymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_UserEmploymentSkill_EmploymentHistory", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistory>("huntableModel.FK_UserEmploymentSkill_EmploymentHistory", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserSkill_MasterSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_UserSkill_MasterSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_UserSkill_MasterSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_UserSkill_MasterSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_UserSkill_MasterSkill", "MasterSkill", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserEndorseList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEndorseList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEndorseList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="endorsedUserId">Initial value of the EndorsedUserId property.</param>
        public static UserEndorseList CreateUserEndorseList(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 endorsedUserId)
        {
            UserEndorseList userEndorseList = new UserEndorseList();
            userEndorseList.Id = id;
            userEndorseList.UserId = userId;
            userEndorseList.EndorsedUserId = endorsedUserId;
            return userEndorseList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EndorsedUserId
        {
            get
            {
                return _EndorsedUserId;
            }
            set
            {
                OnEndorsedUserIdChanging(value);
                ReportPropertyChanging("EndorsedUserId");
                _EndorsedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndorsedUserId");
                OnEndorsedUserIdChanged();
            }
        }
        private global::System.Int32 _EndorsedUserId;
        partial void OnEndorsedUserIdChanging(global::System.Int32 value);
        partial void OnEndorsedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndorsedDateTime
        {
            get
            {
                return _EndorsedDateTime;
            }
            set
            {
                OnEndorsedDateTimeChanging(value);
                ReportPropertyChanging("EndorsedDateTime");
                _EndorsedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndorsedDateTime");
                OnEndorsedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndorsedDateTime;
        partial void OnEndorsedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndorsedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpHisId
        {
            get
            {
                return _EmpHisId;
            }
            set
            {
                OnEmpHisIdChanging(value);
                ReportPropertyChanging("EmpHisId");
                _EmpHisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpHisId");
                OnEmpHisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpHisId;
        partial void OnEmpHisIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmpHisIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEndorseList_EmploymentHistory", "EmploymentHistory")]
        public EmploymentHistory EmploymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_UserEndorseList_EmploymentHistory", "EmploymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_UserEndorseList_EmploymentHistory", "EmploymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmploymentHistory> EmploymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmploymentHistory>("huntableModel.FK_UserEndorseList_EmploymentHistory", "EmploymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmploymentHistory>("huntableModel.FK_UserEndorseList_EmploymentHistory", "EmploymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEndorseList_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserEndorseList_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserEndorseList_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserEndorseList_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserEndorseList_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserEndorseList_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserEndorseList_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserEndorseList_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserEndorseList_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserEndorseList_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserFeed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFeed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFeed object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="feedDesription">Initial value of the FeedDesription property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        public static UserFeed CreateUserFeed(global::System.Int32 id, global::System.Int32 userID, global::System.String feedDesription, global::System.DateTime createdDateTime)
        {
            UserFeed userFeed = new UserFeed();
            userFeed.ID = id;
            userFeed.UserID = userID;
            userFeed.FeedDesription = feedDesription;
            userFeed.CreatedDateTime = createdDateTime;
            return userFeed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeedDesription
        {
            get
            {
                return _FeedDesription;
            }
            set
            {
                OnFeedDesriptionChanging(value);
                ReportPropertyChanging("FeedDesription");
                _FeedDesription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FeedDesription");
                OnFeedDesriptionChanged();
            }
        }
        private global::System.String _FeedDesription;
        partial void OnFeedDesriptionChanging(global::System.String value);
        partial void OnFeedDesriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LinkDescription
        {
            get
            {
                return _LinkDescription;
            }
            set
            {
                OnLinkDescriptionChanging(value);
                ReportPropertyChanging("LinkDescription");
                _LinkDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LinkDescription");
                OnLinkDescriptionChanged();
            }
        }
        private global::System.String _LinkDescription;
        partial void OnLinkDescriptionChanging(global::System.String value);
        partial void OnLinkDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserUserFeed_UserFeeds", "FeedUserUserFeed")]
        public EntityCollection<FeedUserUserFeed> FeedUserUserFeeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserUserFeed>("huntableModel.FK_FeedUserUserFeed_UserFeeds", "FeedUserUserFeed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserUserFeed>("huntableModel.FK_FeedUserUserFeed_UserFeeds", "FeedUserUserFeed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK__UserFeeds__UserI__542C7691", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK__UserFeeds__UserI__542C7691", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK__UserFeeds__UserI__542C7691", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK__UserFeeds__UserI__542C7691", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK__UserFeeds__UserI__542C7691", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterInterestId">Initial value of the MasterInterestId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static UserInterest CreateUserInterest(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterInterestId, global::System.Boolean isDeleted)
        {
            UserInterest userInterest = new UserInterest();
            userInterest.Id = id;
            userInterest.UserId = userId;
            userInterest.MasterInterestId = masterInterestId;
            userInterest.IsDeleted = isDeleted;
            return userInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterInterestId
        {
            get
            {
                return _MasterInterestId;
            }
            set
            {
                OnMasterInterestIdChanging(value);
                ReportPropertyChanging("MasterInterestId");
                _MasterInterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterInterestId");
                OnMasterInterestIdChanged();
            }
        }
        private global::System.Int32 _MasterInterestId;
        partial void OnMasterInterestIdChanging(global::System.Int32 value);
        partial void OnMasterInterestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserInterest_MasterInterest", "MasterInterest")]
        public MasterInterest MasterInterest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_UserInterest_MasterInterest", "MasterInterest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_UserInterest_MasterInterest", "MasterInterest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterInterest> MasterInterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterInterest>("huntableModel.FK_UserInterest_MasterInterest", "MasterInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterInterest>("huntableModel.FK_UserInterest_MasterInterest", "MasterInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserInterest_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserInterest_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserInterest_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserInterest_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserInterest_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInvoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInvoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="tranDate">Initial value of the TranDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static UserInvoice CreateUserInvoice(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 amount, global::System.String comments, global::System.DateTime tranDate, global::System.Boolean status)
        {
            UserInvoice userInvoice = new UserInvoice();
            userInvoice.Id = id;
            userInvoice.UserId = userId;
            userInvoice.Amount = amount;
            userInvoice.Comments = comments;
            userInvoice.TranDate = tranDate;
            userInvoice.Status = status;
            return userInvoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TranDate
        {
            get
            {
                return _TranDate;
            }
            set
            {
                OnTranDateChanging(value);
                ReportPropertyChanging("TranDate");
                _TranDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranDate");
                OnTranDateChanged();
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnTranDateChanging(global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLanguage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterLanguageId">Initial value of the MasterLanguageId property.</param>
        public static UserLanguage CreateUserLanguage(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterLanguageId)
        {
            UserLanguage userLanguage = new UserLanguage();
            userLanguage.Id = id;
            userLanguage.UserId = userId;
            userLanguage.MasterLanguageId = masterLanguageId;
            return userLanguage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterLanguageId
        {
            get
            {
                return _MasterLanguageId;
            }
            set
            {
                OnMasterLanguageIdChanging(value);
                ReportPropertyChanging("MasterLanguageId");
                _MasterLanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterLanguageId");
                OnMasterLanguageIdChanged();
            }
        }
        private global::System.Int32 _MasterLanguageId;
        partial void OnMasterLanguageIdChanging(global::System.Int32 value);
        partial void OnMasterLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserLanguage_MasterLanguage", "MasterLanguage")]
        public MasterLanguage MasterLanguage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLanguage>("huntableModel.FK_UserLanguage_MasterLanguage", "MasterLanguage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLanguage>("huntableModel.FK_UserLanguage_MasterLanguage", "MasterLanguage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterLanguage> MasterLanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterLanguage>("huntableModel.FK_UserLanguage_MasterLanguage", "MasterLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterLanguage>("huntableModel.FK_UserLanguage_MasterLanguage", "MasterLanguage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserLanguage_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserLanguage_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserLanguage_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserLanguage_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserLanguage_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMessage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sentTo">Initial value of the SentTo property.</param>
        /// <param name="sentBy">Initial value of the SentBy property.</param>
        /// <param name="sentDate">Initial value of the SentDate property.</param>
        /// <param name="isRead">Initial value of the IsRead property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="sentIsActive">Initial value of the SentIsActive property.</param>
        public static UserMessage CreateUserMessage(global::System.Int32 id, global::System.Int32 sentTo, global::System.Int32 sentBy, global::System.DateTime sentDate, global::System.Boolean isRead, global::System.Boolean isActive, global::System.Boolean sentIsActive)
        {
            UserMessage userMessage = new UserMessage();
            userMessage.Id = id;
            userMessage.SentTo = sentTo;
            userMessage.SentBy = sentBy;
            userMessage.SentDate = sentDate;
            userMessage.IsRead = isRead;
            userMessage.IsActive = isActive;
            userMessage.SentIsActive = sentIsActive;
            return userMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SentTo
        {
            get
            {
                return _SentTo;
            }
            set
            {
                OnSentToChanging(value);
                ReportPropertyChanging("SentTo");
                _SentTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentTo");
                OnSentToChanged();
            }
        }
        private global::System.Int32 _SentTo;
        partial void OnSentToChanging(global::System.Int32 value);
        partial void OnSentToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SentBy
        {
            get
            {
                return _SentBy;
            }
            set
            {
                OnSentByChanging(value);
                ReportPropertyChanging("SentBy");
                _SentBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentBy");
                OnSentByChanged();
            }
        }
        private global::System.Int32 _SentBy;
        partial void OnSentByChanging(global::System.Int32 value);
        partial void OnSentByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentDate
        {
            get
            {
                return _SentDate;
            }
            set
            {
                OnSentDateChanging(value);
                ReportPropertyChanging("SentDate");
                _SentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentDate");
                OnSentDateChanged();
            }
        }
        private global::System.DateTime _SentDate;
        partial void OnSentDateChanging(global::System.DateTime value);
        partial void OnSentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private global::System.Boolean _IsRead;
        partial void OnIsReadChanging(global::System.Boolean value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SentIsActive
        {
            get
            {
                return _SentIsActive;
            }
            set
            {
                OnSentIsActiveChanging(value);
                ReportPropertyChanging("SentIsActive");
                _SentIsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentIsActive");
                OnSentIsActiveChanged();
            }
        }
        private global::System.Boolean _SentIsActive;
        partial void OnSentIsActiveChanging(global::System.Boolean value);
        partial void OnSentIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessageType_UserMessage", "UserMessageType")]
        public EntityCollection<UserMessageType> UserMessageTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessageType>("huntableModel.FK_UserMessageType_UserMessage", "UserMessageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessageType>("huntableModel.FK_UserMessageType_UserMessage", "UserMessageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessage_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserMessage_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserMessage_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserMessage_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserMessage_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessage_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserMessage_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserMessage_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserMessage_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserMessage_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserMessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMessageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMessageType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userMessageId">Initial value of the UserMessageId property.</param>
        /// <param name="messageTypeId">Initial value of the MessageTypeId property.</param>
        public static UserMessageType CreateUserMessageType(global::System.Int32 id, global::System.Int32 userMessageId, global::System.Int32 messageTypeId)
        {
            UserMessageType userMessageType = new UserMessageType();
            userMessageType.Id = id;
            userMessageType.UserMessageId = userMessageId;
            userMessageType.MessageTypeId = messageTypeId;
            return userMessageType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserMessageId
        {
            get
            {
                return _UserMessageId;
            }
            set
            {
                OnUserMessageIdChanging(value);
                ReportPropertyChanging("UserMessageId");
                _UserMessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserMessageId");
                OnUserMessageIdChanged();
            }
        }
        private global::System.Int32 _UserMessageId;
        partial void OnUserMessageIdChanging(global::System.Int32 value);
        partial void OnUserMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageTypeId
        {
            get
            {
                return _MessageTypeId;
            }
            set
            {
                OnMessageTypeIdChanging(value);
                ReportPropertyChanging("MessageTypeId");
                _MessageTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTypeId");
                OnMessageTypeIdChanged();
            }
        }
        private global::System.Int32 _MessageTypeId;
        partial void OnMessageTypeIdChanging(global::System.Int32 value);
        partial void OnMessageTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessageType_MasterMessageType", "MasterMessageType")]
        public MasterMessageType MasterMessageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMessageType>("huntableModel.FK_UserMessageType_MasterMessageType", "MasterMessageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMessageType>("huntableModel.FK_UserMessageType_MasterMessageType", "MasterMessageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterMessageType> MasterMessageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterMessageType>("huntableModel.FK_UserMessageType_MasterMessageType", "MasterMessageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterMessageType>("huntableModel.FK_UserMessageType_MasterMessageType", "MasterMessageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserMessageType_UserMessage", "UserMessage")]
        public UserMessage UserMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMessage>("huntableModel.FK_UserMessageType_UserMessage", "UserMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMessage>("huntableModel.FK_UserMessageType_UserMessage", "UserMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserMessage> UserMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserMessage>("huntableModel.FK_UserMessageType_UserMessage", "UserMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserMessage>("huntableModel.FK_UserMessageType_UserMessage", "UserMessage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserPaymentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPaymentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPaymentInfo object.
        /// </summary>
        /// <param name="paymentInfoID">Initial value of the PaymentInfoID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static UserPaymentInfo CreateUserPaymentInfo(global::System.Int32 paymentInfoID, global::System.Int32 userID)
        {
            UserPaymentInfo userPaymentInfo = new UserPaymentInfo();
            userPaymentInfo.PaymentInfoID = paymentInfoID;
            userPaymentInfo.UserID = userID;
            return userPaymentInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentInfoID
        {
            get
            {
                return _PaymentInfoID;
            }
            set
            {
                if (_PaymentInfoID != value)
                {
                    OnPaymentInfoIDChanging(value);
                    ReportPropertyChanging("PaymentInfoID");
                    _PaymentInfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentInfoID");
                    OnPaymentInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _PaymentInfoID;
        partial void OnPaymentInfoIDChanging(global::System.Int32 value);
        partial void OnPaymentInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentAddress
        {
            get
            {
                return _PaymentAddress;
            }
            set
            {
                OnPaymentAddressChanging(value);
                ReportPropertyChanging("PaymentAddress");
                _PaymentAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentAddress");
                OnPaymentAddressChanged();
            }
        }
        private global::System.String _PaymentAddress;
        partial void OnPaymentAddressChanging(global::System.String value);
        partial void OnPaymentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransactionType
        {
            get
            {
                return _TransactionType;
            }
            set
            {
                OnTransactionTypeChanging(value);
                ReportPropertyChanging("TransactionType");
                _TransactionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransactionType");
                OnTransactionTypeChanged();
            }
        }
        private global::System.String _TransactionType;
        partial void OnTransactionTypeChanging(global::System.String value);
        partial void OnTransactionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tender
        {
            get
            {
                return _Tender;
            }
            set
            {
                OnTenderChanging(value);
                ReportPropertyChanging("Tender");
                _Tender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tender");
                OnTenderChanged();
            }
        }
        private global::System.String _Tender;
        partial void OnTenderChanging(global::System.String value);
        partial void OnTenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACCNO
        {
            get
            {
                return _ACCNO;
            }
            set
            {
                OnACCNOChanging(value);
                ReportPropertyChanging("ACCNO");
                _ACCNO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACCNO");
                OnACCNOChanged();
            }
        }
        private global::System.String _ACCNO;
        partial void OnACCNOChanging(global::System.String value);
        partial void OnACCNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpDate
        {
            get
            {
                return _ExpDate;
            }
            set
            {
                OnExpDateChanging(value);
                ReportPropertyChanging("ExpDate");
                _ExpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpDate");
                OnExpDateChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpDate;
        partial void OnExpDateChanging(Nullable<global::System.Int32> value);
        partial void OnExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVV2
        {
            get
            {
                return _CVV2;
            }
            set
            {
                OnCVV2Changing(value);
                ReportPropertyChanging("CVV2");
                _CVV2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CVV2");
                OnCVV2Changed();
            }
        }
        private global::System.String _CVV2;
        partial void OnCVV2Changing(global::System.String value);
        partial void OnCVV2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Int32> _Result;
        partial void OnResultChanging(Nullable<global::System.Int32> value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PNREF
        {
            get
            {
                return _PNREF;
            }
            set
            {
                OnPNREFChanging(value);
                ReportPropertyChanging("PNREF");
                _PNREF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PNREF");
                OnPNREFChanged();
            }
        }
        private global::System.String _PNREF;
        partial void OnPNREFChanging(global::System.String value);
        partial void OnPNREFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RESPMSG
        {
            get
            {
                return _RESPMSG;
            }
            set
            {
                OnRESPMSGChanging(value);
                ReportPropertyChanging("RESPMSG");
                _RESPMSG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RESPMSG");
                OnRESPMSGChanged();
            }
        }
        private global::System.String _RESPMSG;
        partial void OnRESPMSGChanging(global::System.String value);
        partial void OnRESPMSGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AUTHCODE
        {
            get
            {
                return _AUTHCODE;
            }
            set
            {
                OnAUTHCODEChanging(value);
                ReportPropertyChanging("AUTHCODE");
                _AUTHCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AUTHCODE");
                OnAUTHCODEChanged();
            }
        }
        private global::System.String _AUTHCODE;
        partial void OnAUTHCODEChanging(global::System.String value);
        partial void OnAUTHCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CVV2MATCH
        {
            get
            {
                return _CVV2MATCH;
            }
            set
            {
                OnCVV2MATCHChanging(value);
                ReportPropertyChanging("CVV2MATCH");
                _CVV2MATCH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CVV2MATCH");
                OnCVV2MATCHChanged();
            }
        }
        private global::System.String _CVV2MATCH;
        partial void OnCVV2MATCHChanging(global::System.String value);
        partial void OnCVV2MATCHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentStatus
        {
            get
            {
                return _PaymentStatus;
            }
            set
            {
                OnPaymentStatusChanging(value);
                ReportPropertyChanging("PaymentStatus");
                _PaymentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentStatus");
                OnPaymentStatusChanged();
            }
        }
        private global::System.String _PaymentStatus;
        partial void OnPaymentStatusChanging(global::System.String value);
        partial void OnPaymentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Vat
        {
            get
            {
                return _Vat;
            }
            set
            {
                OnVatChanging(value);
                ReportPropertyChanging("Vat");
                _Vat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vat");
                OnVatChanged();
            }
        }
        private Nullable<global::System.Decimal> _Vat;
        partial void OnVatChanging(Nullable<global::System.Decimal> value);
        partial void OnVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TranscationDateTime
        {
            get
            {
                return _TranscationDateTime;
            }
            set
            {
                OnTranscationDateTimeChanging(value);
                ReportPropertyChanging("TranscationDateTime");
                _TranscationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranscationDateTime");
                OnTranscationDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TranscationDateTime;
        partial void OnTranscationDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTranscationDateTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserPortfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPortfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPortfolio object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserPortfolio CreateUserPortfolio(global::System.Int32 id, global::System.Int32 userId)
        {
            UserPortfolio userPortfolio = new UserPortfolio();
            userPortfolio.Id = id;
            userPortfolio.UserId = userId;
            return userPortfolio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                OnPictureIdChanging(value);
                ReportPropertyChanging("PictureId");
                _PictureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PictureId");
                OnPictureIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PictureId;
        partial void OnPictureIdChanging(Nullable<global::System.Int32> value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureDescription
        {
            get
            {
                return _PictureDescription;
            }
            set
            {
                OnPictureDescriptionChanging(value);
                ReportPropertyChanging("PictureDescription");
                _PictureDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureDescription");
                OnPictureDescriptionChanged();
            }
        }
        private global::System.String _PictureDescription;
        partial void OnPictureDescriptionChanging(global::System.String value);
        partial void OnPictureDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDateTime
        {
            get
            {
                return _AddedDateTime;
            }
            set
            {
                OnAddedDateTimeChanging(value);
                ReportPropertyChanging("AddedDateTime");
                _AddedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDateTime");
                OnAddedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDateTime;
        partial void OnAddedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserPhoto_UserPortfolio", "FeedUserPhoto")]
        public EntityCollection<FeedUserPhoto> FeedUserPhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserPhoto>("huntableModel.FK_FeedUserPhoto_UserPortfolio", "FeedUserPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserPhoto>("huntableModel.FK_FeedUserPhoto_UserPortfolio", "FeedUserPhoto", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserProfileVisitedHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfileVisitedHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfileVisitedHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        public static UserProfileVisitedHistory CreateUserProfileVisitedHistory(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime date, global::System.String iPAddress)
        {
            UserProfileVisitedHistory userProfileVisitedHistory = new UserProfileVisitedHistory();
            userProfileVisitedHistory.Id = id;
            userProfileVisitedHistory.UserId = userId;
            userProfileVisitedHistory.Date = date;
            userProfileVisitedHistory.IPAddress = iPAddress;
            return userProfileVisitedHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VisitorUserId
        {
            get
            {
                return _VisitorUserId;
            }
            set
            {
                OnVisitorUserIdChanging(value);
                ReportPropertyChanging("VisitorUserId");
                _VisitorUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisitorUserId");
                OnVisitorUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VisitorUserId;
        partial void OnVisitorUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnVisitorUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserProfileVisitedHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserProfileVisitedHistory_VisitedUser", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_VisitedUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_VisitedUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_VisitedUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserProfileVisitedHistory_VisitedUser", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="masterSkillId">Initial value of the MasterSkillId property.</param>
        /// <param name="skillCategory">Initial value of the SkillCategory property.</param>
        public static UserSkill CreateUserSkill(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 masterSkillId, global::System.Int32 skillCategory)
        {
            UserSkill userSkill = new UserSkill();
            userSkill.Id = id;
            userSkill.UserId = userId;
            userSkill.MasterSkillId = masterSkillId;
            userSkill.SkillCategory = skillCategory;
            return userSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterSkillId
        {
            get
            {
                return _MasterSkillId;
            }
            set
            {
                OnMasterSkillIdChanging(value);
                ReportPropertyChanging("MasterSkillId");
                _MasterSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSkillId");
                OnMasterSkillIdChanged();
            }
        }
        private global::System.Int32 _MasterSkillId;
        partial void OnMasterSkillIdChanging(global::System.Int32 value);
        partial void OnMasterSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillCategory
        {
            get
            {
                return _SkillCategory;
            }
            set
            {
                OnSkillCategoryChanging(value);
                ReportPropertyChanging("SkillCategory");
                _SkillCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillCategory");
                OnSkillCategoryChanged();
            }
        }
        private global::System.Int32 _SkillCategory;
        partial void OnSkillCategoryChanging(global::System.Int32 value);
        partial void OnSkillCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HowLong
        {
            get
            {
                return _HowLong;
            }
            set
            {
                OnHowLongChanging(value);
                ReportPropertyChanging("HowLong");
                _HowLong = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HowLong");
                OnHowLongChanged();
            }
        }
        private global::System.String _HowLong;
        partial void OnHowLongChanging(global::System.String value);
        partial void OnHowLongChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserSkill", "MasterSkill")]
        public MasterSkill MasterSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_UserSkill", "MasterSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_UserSkill", "MasterSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MasterSkill> MasterSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MasterSkill>("huntableModel.FK_UserSkill", "MasterSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MasterSkill>("huntableModel.FK_UserSkill", "MasterSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_UserSkill_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserSkill_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserSkill_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("huntableModel.FK_UserSkill_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("huntableModel.FK_UserSkill_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="tranType">Initial value of the TranType property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="tranDate">Initial value of the TranDate property.</param>
        public static UserTransaction CreateUserTransaction(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 amount, global::System.String tranType, global::System.String comments, global::System.DateTime tranDate)
        {
            UserTransaction userTransaction = new UserTransaction();
            userTransaction.Id = id;
            userTransaction.UserId = userId;
            userTransaction.Amount = amount;
            userTransaction.TranType = tranType;
            userTransaction.Comments = comments;
            userTransaction.TranDate = tranDate;
            return userTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TranType
        {
            get
            {
                return _TranType;
            }
            set
            {
                OnTranTypeChanging(value);
                ReportPropertyChanging("TranType");
                _TranType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TranType");
                OnTranTypeChanged();
            }
        }
        private global::System.String _TranType;
        partial void OnTranTypeChanging(global::System.String value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TranDate
        {
            get
            {
                return _TranDate;
            }
            set
            {
                OnTranDateChanging(value);
                ReportPropertyChanging("TranDate");
                _TranDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranDate");
                OnTranDateChanged();
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnTranDateChanging(global::System.DateTime value);
        partial void OnTranDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="huntableModel", Name="UserVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserVideo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static UserVideo CreateUserVideo(global::System.Int32 id)
        {
            UserVideo userVideo = new UserVideo();
            userVideo.Id = id;
            return userVideo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoUrl
        {
            get
            {
                return _VideoUrl;
            }
            set
            {
                OnVideoUrlChanging(value);
                ReportPropertyChanging("VideoUrl");
                _VideoUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoUrl");
                OnVideoUrlChanged();
            }
        }
        private global::System.String _VideoUrl;
        partial void OnVideoUrlChanging(global::System.String value);
        partial void OnVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoTitle
        {
            get
            {
                return _VideoTitle;
            }
            set
            {
                OnVideoTitleChanging(value);
                ReportPropertyChanging("VideoTitle");
                _VideoTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoTitle");
                OnVideoTitleChanged();
            }
        }
        private global::System.String _VideoTitle;
        partial void OnVideoTitleChanging(global::System.String value);
        partial void OnVideoTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDateTime
        {
            get
            {
                return _AddedDateTime;
            }
            set
            {
                OnAddedDateTimeChanging(value);
                ReportPropertyChanging("AddedDateTime");
                _AddedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDateTime");
                OnAddedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDateTime;
        partial void OnAddedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("huntableModel", "FK_FeedUserVideo_UserVideos", "FeedUserVideo")]
        public EntityCollection<FeedUserVideo> FeedUserVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedUserVideo>("huntableModel.FK_FeedUserVideo_UserVideos", "FeedUserVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedUserVideo>("huntableModel.FK_FeedUserVideo_UserVideos", "FeedUserVideo", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="GetFeedAlertList_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFeedAlertList_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetFeedAlertList_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GetFeedAlertList_Result CreateGetFeedAlertList_Result(global::System.Int32 id)
        {
            GetFeedAlertList_Result getFeedAlertList_Result = new GetFeedAlertList_Result();
            getFeedAlertList_Result.Id = id;
            return getFeedAlertList_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="GetFeedAlertListCount_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFeedAlertListCount_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private Nullable<global::System.Int32> _Column1;
        partial void OnColumn1Changing(Nullable<global::System.Int32> value);
        partial void OnColumn1Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="GetFeedAlertListCount_Result1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFeedAlertListCount_Result1 : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cnt
        {
            get
            {
                return _cnt;
            }
            set
            {
                OncntChanging(value);
                ReportPropertyChanging("cnt");
                _cnt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cnt");
                OncntChanged();
            }
        }
        private Nullable<global::System.Int32> _cnt;
        partial void OncntChanging(Nullable<global::System.Int32> value);
        partial void OncntChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="GetFeedList_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFeedList_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetFeedList_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GetFeedList_Result CreateGetFeedList_Result(global::System.Int32 id)
        {
            GetFeedList_Result getFeedList_Result = new GetFeedList_Result();
            getFeedList_Result.Id = id;
            return getFeedList_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="ListofJobs_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListofJobs_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListofJobs_Result object.
        /// </summary>
        /// <param name="jobtype">Initial value of the jobtype property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static ListofJobs_Result CreateListofJobs_Result(global::System.String jobtype, global::System.Int32 id, global::System.String title, global::System.String companyName)
        {
            ListofJobs_Result listofJobs_Result = new ListofJobs_Result();
            listofJobs_Result.jobtype = jobtype;
            listofJobs_Result.Id = id;
            listofJobs_Result.Title = title;
            listofJobs_Result.CompanyName = companyName;
            return listofJobs_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String jobtype
        {
            get
            {
                return _jobtype;
            }
            set
            {
                OnjobtypeChanging(value);
                ReportPropertyChanging("jobtype");
                _jobtype = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("jobtype");
                OnjobtypeChanged();
            }
        }
        private global::System.String _jobtype;
        partial void OnjobtypeChanging(global::System.String value);
        partial void OnjobtypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="ListOfJobsSitemap_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListOfJobsSitemap_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListOfJobsSitemap_Result object.
        /// </summary>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static ListOfJobsSitemap_Result CreateListOfJobsSitemap_Result(global::System.String title, global::System.String companyName)
        {
            ListOfJobsSitemap_Result listOfJobsSitemap_Result = new ListOfJobsSitemap_Result();
            listOfJobsSitemap_Result.Title = title;
            listOfJobsSitemap_Result.CompanyName = companyName;
            return listOfJobsSitemap_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="ListofJobsSiteMap_Result1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListofJobsSiteMap_Result1 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListofJobsSiteMap_Result1 object.
        /// </summary>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static ListofJobsSiteMap_Result1 CreateListofJobsSiteMap_Result1(global::System.String title, global::System.String companyName, global::System.Int32 id)
        {
            ListofJobsSiteMap_Result1 listofJobsSiteMap_Result1 = new ListofJobsSiteMap_Result1();
            listofJobsSiteMap_Result1.Title = title;
            listofJobsSiteMap_Result1.CompanyName = companyName;
            listofJobsSiteMap_Result1.Id = id;
            return listofJobsSiteMap_Result1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRssJob
        {
            get
            {
                return _IsRssJob;
            }
            set
            {
                OnIsRssJobChanging(value);
                ReportPropertyChanging("IsRssJob");
                _IsRssJob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRssJob");
                OnIsRssJobChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRssJob;
        partial void OnIsRssJobChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRssJobChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="huntableModel", Name="ListofJobsSiteMap_Result2")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListofJobsSiteMap_Result2 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListofJobsSiteMap_Result2 object.
        /// </summary>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static ListofJobsSiteMap_Result2 CreateListofJobsSiteMap_Result2(global::System.String title, global::System.String companyName, global::System.Int32 id)
        {
            ListofJobsSiteMap_Result2 listofJobsSiteMap_Result2 = new ListofJobsSiteMap_Result2();
            listofJobsSiteMap_Result2.Title = title;
            listofJobsSiteMap_Result2.CompanyName = companyName;
            listofJobsSiteMap_Result2.Id = id;
            return listofJobsSiteMap_Result2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRssJob
        {
            get
            {
                return _IsRssJob;
            }
            set
            {
                OnIsRssJobChanging(value);
                ReportPropertyChanging("IsRssJob");
                _IsRssJob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRssJob");
                OnIsRssJobChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRssJob;
        partial void OnIsRssJobChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRssJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsShine
        {
            get
            {
                return _IsShine;
            }
            set
            {
                OnIsShineChanging(value);
                ReportPropertyChanging("IsShine");
                _IsShine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsShine");
                OnIsShineChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsShine;
        partial void OnIsShineChanging(Nullable<global::System.Boolean> value);
        partial void OnIsShineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNaukri
        {
            get
            {
                return _IsNaukri;
            }
            set
            {
                OnIsNaukriChanging(value);
                ReportPropertyChanging("IsNaukri");
                _IsNaukri = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNaukri");
                OnIsNaukriChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNaukri;
        partial void OnIsNaukriChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNaukriChanged();

        #endregion

    }

    #endregion

    
}
